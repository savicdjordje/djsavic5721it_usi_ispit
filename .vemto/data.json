{
    "tables": {
        "projects": {
            "item_1": {
                "uuid": "f9918657-c7b6-4d4e-b3ca-165b95eabf75",
                "id": 1,
                "createdAt": "2025-06-28 22:58:58",
                "updatedAt": "2025-06-28 23:47:12",
                "settings": {
                    "cssFramework": "tailwind",
                    "uiStarterKit": "other",
                    "usesLivewire": false,
                    "usesInertia": false,
                    "usesVue": false,
                    "usesReact": false,
                    "usesSvelte": false,
                    "isFreshLaravelProject": false,
                    "blueprintModeEnabled": false,
                    "schemaReaderMode": "db",
                    "schemaReaderDbDriver": "mysql",
                    "schemaReaderDbHost": "127.0.0.1",
                    "schemaReaderDbPort": "3306",
                    "schemaReaderDbUsername": "root",
                    "schemaReaderDbPassword": null,
                    "schemaReaderDbDatabase": "vemto_schema_reader",
                    "laravelVersion": "12.0"
                },
                "canShowSchemaSourceChangesAlert": true,
                "codeGenerationSettings": {
                    "models": true,
                    "factories": true,
                    "seeders": true,
                    "policies": true,
                    "requests": true,
                    "controllers": true,
                    "routes": true,
                    "views": false,
                    "uiComponents": false,
                    "livewireLayout": false,
                    "translationsOnViews": true,
                    "translationsFormat": "underscore"
                },
                "languages": [
                    "en"
                ],
                "defaultLanguage": "en",
                "translations": {
                    "en": {
                        "navigation.home": "Home",
                        "navigation.apps": "Apps",
                        "crud.users.itemTitle": "User",
                        "crud.users.collectionTitle": "Users",
                        "crud.users.inputs.ime.label": "Ime",
                        "crud.users.inputs.ime.placeholder": "Ime",
                        "crud.users.inputs.prezime.label": "Prezime",
                        "crud.users.inputs.prezime.placeholder": "Prezime",
                        "crud.users.inputs.email.label": "Email",
                        "crud.users.inputs.email.placeholder": "Email",
                        "crud.users.inputs.password.label": "Password",
                        "crud.users.inputs.password.placeholder": "Password",
                        "crud.users.inputs.broj_telefona.label": "Broj telefona",
                        "crud.users.inputs.broj_telefona.placeholder": "Broj telefona",
                        "crud.users.inputs.role.label": "Role",
                        "crud.users.inputs.role.placeholder": "Role",
                        "navigation.users": "Users",
                        "crud.bills.itemTitle": "Bill",
                        "crud.bills.collectionTitle": "Bills",
                        "crud.bills.inputs.usluga_id.label": "Usluga id",
                        "crud.bills.inputs.usluga_id.placeholder": "Usluga id",
                        "crud.bills.inputs.cena.label": "Cena",
                        "crud.bills.inputs.cena.placeholder": "Cena",
                        "navigation.bills": "Bills",
                        "crud.services.itemTitle": "Service",
                        "crud.services.collectionTitle": "Services",
                        "crud.services.inputs.vozilo_id.label": "Vozilo id",
                        "crud.services.inputs.vozilo_id.placeholder": "Vozilo id",
                        "crud.services.inputs.zaposleni_id.label": "Zaposleni id",
                        "crud.services.inputs.zaposleni_id.placeholder": "Zaposleni id",
                        "crud.services.inputs.admin_id.label": "Admin id",
                        "crud.services.inputs.admin_id.placeholder": "Admin id",
                        "crud.services.inputs.status_id.label": "Status id",
                        "crud.services.inputs.status_id.placeholder": "Status id",
                        "crud.services.inputs.naziv.label": "Naziv",
                        "crud.services.inputs.naziv.placeholder": "Naziv",
                        "crud.services.inputs.opis.label": "Opis",
                        "crud.services.inputs.opis.placeholder": "Opis",
                        "navigation.services": "Services",
                        "crud.vehicles.itemTitle": "Vehicle",
                        "crud.vehicles.collectionTitle": "Vehicles",
                        "crud.vehicles.inputs.klijent_id.label": "Klijent id",
                        "crud.vehicles.inputs.klijent_id.placeholder": "Klijent id",
                        "crud.vehicles.inputs.registarski_broj.label": "Registarski broj",
                        "crud.vehicles.inputs.registarski_broj.placeholder": "Registarski broj",
                        "crud.vehicles.inputs.marka.label": "Marka",
                        "crud.vehicles.inputs.marka.placeholder": "Marka",
                        "crud.vehicles.inputs.model.label": "Model",
                        "crud.vehicles.inputs.model.placeholder": "Model",
                        "crud.vehicles.inputs.godina_proizvodnje.label": "Godina proizvodnje",
                        "crud.vehicles.inputs.godina_proizvodnje.placeholder": "Godina proizvodnje",
                        "navigation.vehicles": "Vehicles",
                        "crud.statuses.itemTitle": "Status",
                        "crud.statuses.collectionTitle": "Statuses",
                        "crud.statuses.inputs.naziv.label": "Naziv",
                        "crud.statuses.inputs.naziv.placeholder": "Naziv",
                        "navigation.statuses": "Statuses"
                    }
                },
                "vthemeKeys": {
                    "default.delay": "opacity-75",
                    "table": "min-w-full divide-y divide-gray-200",
                    "table.container": "overflow-hidden border rounded-lg",
                    "table.head": "bg-gray-50",
                    "table.head.row": "text-gray-500",
                    "table.head.col": "px-5 py-3 text-xs font-medium text-left uppercase",
                    "table.body": "bg-white divide-y divide-gray-200 dark:divide-gray-700",
                    "table.body.row": "text-gray-800",
                    "table.body.col": "px-5 py-4 text-sm whitespace-nowrap",
                    "ui.button": "inline-flex items-center justify-center px-4 py-2 text-sm font-medium tracking-wide text-white transition-colors duration-200 rounded-md bg-indigo-500 hover:bg-indigo-600 focus:ring-2 focus:ring-offset-2 focus:ring-gray-900 focus:shadow-outline focus:outline-none",
                    "ui.input": "inline-flex h-10 px-3 py-2 text-sm bg-white border rounded-md border-gray-300 ring-offset-background placeholder:text-gray-500 focus:border-gray-300 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-400 disabled:cursor-not-allowed disabled:opacity-50",
                    "ui.input.checkbox": "",
                    "ui.label": "block mb-1.5 font-medium text-sm text-gray-700",
                    "ui.input.error": "text-sm text-red-600",
                    "ui.breadcrumbs.container": "flex justify-between py-1",
                    "ui.breadcrumbs.list": "inline-flex items-center mb-3 space-x-1 text-xs text-neutral-500 [&_.active-breadcrumb]:text-neutral-600 [&_.active-breadcrumb]:font-medium sm:mb-0",
                    "ui.breadcrumbs.list.item": "",
                    "ui.breadcrumbs.list.item.link": "inline-flex items-center py-1 font-normal hover:text-neutral-900 focus:outline-none",
                    "ui.breadcrumbs.separator": "w-5 h-5 text-gray-400/70",
                    "crud.index.container": "max-w-7xl mx-auto py-10 sm:px-6 lg:px-8 space-y-4",
                    "crud.table.head.col.extra": "cursor-pointer",
                    "crud.table.head.action-col": "px-5 py-3 text-xs font-medium text-right uppercase",
                    "crud.table.body.col.extra": "max-w-xs truncate",
                    "crud.table.body.action-col": "px-5 py-4 text-sm font-medium text-right whitespace-nowrap space-x-2",
                    "crud.action-link": "text-indigo-600 hover:text-indigo-700 cursor-pointer",
                    "crud.action-link-danger": "text-red-600 hover:text-red-700 cursor-pointer",
                    "crud.index.tools": "flex justify-between align-top py-4",
                    "crud.pagination.container": "mt-2",
                    "crud.container": "max-w-7xl mx-auto py-10 sm:px-6 lg:px-8 space-y-4",
                    "crud.header": "w-full text-gray-500 text-lg font-semibold py-4 uppercase",
                    "crud.form": "w-full mb-0",
                    "crud.form.container": "overflow-hidden border rounded-lg bg-white",
                    "crud.form.inputs.container": "p-6 space-y-3",
                    "crud.form.input.group": "w-full",
                    "crud.form.input.radio.group": "flex flex-wrap flex-col gap-2",
                    "crud.form.input.radio.box": "inline-flex justify-start gap-2",
                    "ui.input.radio": "!w-4 !h-4 text-indigo-600 transition duration-150 ease-in-out border-gray-300 rounded-md focus:ring-indigo-500",
                    "crud.form.input.extra": "w-full",
                    "crud.form.input.image": "object-cover rounded border border-gray-200 w-36 h-36 cursor-pointer bg-gray-50 hover:opacity-75 transition duration-100 ease-in-out",
                    "crud.form.input.image.button": "p-0.5 px-1 text-xs border border-gray-200 rounded hover:bg-gray-200",
                    "crud.form.input.file.name": "text-sm text-gray-500 p-1 rounded-sm bg-gray-50 border border-gray-200 mb-1",
                    "crud.form.buttons-container": "flex justify-between mt-4 border-t border-gray-50 p-4"
                },
                "vthemeCdn": "https://cdn.tailwindcss.com",
                "connectionFinished": true,
                "canIgnoreNextSchemaSourceChanges": false,
                "lastReadSchemaDataHash": "0bc9ae011b84f442015a8bfbcc815916",
                "currentSchemaError": null,
                "currentSchemaErrorStack": null,
                "filesQueueStatus": "idle",
                "currentRenderedFilesPaths": [
                    "routes/app.php",
                    "/lang/en//navigation.php",
                    "/lang/en//crud.php",
                    "routes/app-api.php",
                    "bootstrap/app.php",
                    "database/factories/BillFactory.php",
                    "database/seeders/BillSeeder.php",
                    "app/Policies/BillPolicy.php",
                    "database/factories/ServiceFactory.php",
                    "database/seeders/ServiceSeeder.php",
                    "app/Policies/ServicePolicy.php",
                    "database/factories/StatusFactory.php",
                    "database/seeders/StatusSeeder.php",
                    "app/Policies/StatusPolicy.php",
                    "database/factories/UserFactory.php",
                    "database/seeders/UserSeeder.php",
                    "app/Policies/UserPolicy.php",
                    "database/factories/VehicleFactory.php",
                    "database/seeders/VehicleSeeder.php",
                    "app/Policies/VehiclePolicy.php",
                    "resources/views/livewire/dashboard/users/index.blade.php",
                    "app/Livewire/Dashboard/UserIndex.php",
                    "resources/views/livewire/dashboard/users/create.blade.php",
                    "app/Livewire/Dashboard/UserCreate.php",
                    "resources/views/livewire/dashboard/users/edit.blade.php",
                    "app/Livewire/Dashboard/UserEdit.php",
                    "app/Livewire/Dashboard/Users/Forms/CreateForm.php",
                    "app/Livewire/Dashboard/Users/Forms/UpdateForm.php",
                    "resources/views/livewire/dashboard/bills/index.blade.php",
                    "app/Livewire/Dashboard/BillIndex.php",
                    "resources/views/livewire/dashboard/bills/create.blade.php",
                    "app/Livewire/Dashboard/BillCreate.php",
                    "resources/views/livewire/dashboard/bills/edit.blade.php",
                    "app/Livewire/Dashboard/BillEdit.php",
                    "app/Livewire/Dashboard/Bills/Forms/CreateForm.php",
                    "app/Livewire/Dashboard/Bills/Forms/UpdateForm.php",
                    "resources/views/livewire/dashboard/services/index.blade.php",
                    "app/Livewire/Dashboard/ServiceIndex.php",
                    "resources/views/livewire/dashboard/services/create.blade.php",
                    "app/Livewire/Dashboard/ServiceCreate.php",
                    "resources/views/livewire/dashboard/services/edit.blade.php",
                    "app/Livewire/Dashboard/ServiceEdit.php",
                    "app/Livewire/Dashboard/Services/Forms/CreateForm.php",
                    "app/Livewire/Dashboard/Services/Forms/UpdateForm.php",
                    "resources/views/livewire/dashboard/vehicles/index.blade.php",
                    "app/Livewire/Dashboard/VehicleIndex.php",
                    "resources/views/livewire/dashboard/vehicles/create.blade.php",
                    "app/Livewire/Dashboard/VehicleCreate.php",
                    "resources/views/livewire/dashboard/vehicles/edit.blade.php",
                    "app/Livewire/Dashboard/VehicleEdit.php",
                    "app/Livewire/Dashboard/Vehicles/Forms/CreateForm.php",
                    "app/Livewire/Dashboard/Vehicles/Forms/UpdateForm.php",
                    "resources/views/livewire/dashboard/statuses/index.blade.php",
                    "app/Livewire/Dashboard/StatusIndex.php",
                    "resources/views/livewire/dashboard/statuses/create.blade.php",
                    "app/Livewire/Dashboard/StatusCreate.php",
                    "resources/views/livewire/dashboard/statuses/edit.blade.php",
                    "app/Livewire/Dashboard/StatusEdit.php",
                    "app/Livewire/Dashboard/Statuses/Forms/CreateForm.php",
                    "app/Livewire/Dashboard/Statuses/Forms/UpdateForm.php",
                    "database/seeders/DatabaseSeeder.php"
                ]
            },
            "__tableData": {
                "count": 1,
                "lastPrimaryKey": 1,
                "index": {
                    "1": {
                        "hasMany": {
                            "tables.projectId": [
                                1,
                                2,
                                3,
                                4,
                                5,
                                6,
                                7,
                                8,
                                9,
                                10,
                                11,
                                12,
                                13
                            ],
                            "models.projectId": [
                                1,
                                2,
                                3,
                                4,
                                5
                            ],
                            "relationships.projectId": [
                                1,
                                2,
                                3,
                                4,
                                5,
                                6
                            ],
                            "app_sections.projectId": [
                                1,
                                3,
                                4
                            ],
                            "schema_sections.projectId": [
                                1,
                                2
                            ],
                            "navs.projectId": [
                                1,
                                2,
                                3,
                                4,
                                5,
                                6,
                                7
                            ],
                            "renderable_files.projectId": [
                                1,
                                2,
                                3,
                                4,
                                5,
                                6,
                                7,
                                8,
                                9,
                                10,
                                11,
                                12,
                                13,
                                14,
                                15,
                                16,
                                17,
                                18,
                                19,
                                20,
                                21,
                                22,
                                23,
                                24,
                                25,
                                26,
                                27,
                                28,
                                29,
                                30,
                                31,
                                32,
                                33,
                                34,
                                35,
                                36,
                                37,
                                38,
                                39,
                                40,
                                41,
                                42,
                                43,
                                44,
                                45,
                                46,
                                47,
                                48,
                                49,
                                50,
                                51,
                                52,
                                53,
                                54,
                                55,
                                56,
                                57,
                                58,
                                59,
                                60,
                                61
                            ],
                            "cruds.projectId": [
                                1,
                                2,
                                3,
                                4,
                                5
                            ],
                            "routes.projectId": [
                                1,
                                2,
                                3,
                                4,
                                5,
                                6,
                                7,
                                8,
                                9,
                                10,
                                11,
                                12,
                                13,
                                14,
                                15
                            ]
                        }
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            }
        },
        "tables": {
            "item_1": {
                "projectId": 1,
                "name": "bills",
                "migrations": [
                    {
                        "migration": "C:\\Users\\gacic\\OneDrive\\Радна површина\\djolander\\djsavic5721it_usi_ispit/database/migrations/2025_06_28_200057_create_bills_table.php",
                        "relativePath": "/database/migrations/2025_06_28_200057_create_bills_table.php",
                        "migrationName": "2025_06_28_200057_create_bills_table",
                        "datePrefix": "2025_06_28",
                        "fullPrefix": "2025_06_28_200057",
                        "createdTables": [
                            "bills"
                        ],
                        "changedTables": []
                    }
                ],
                "oldNames": [],
                "createdFromInterface": false,
                "labelColumnId": null,
                "schemaState": {
                    "name": "bills",
                    "oldNames": [],
                    "migrations": [
                        {
                            "migration": "C:\\Users\\gacic\\OneDrive\\Радна површина\\djolander\\djsavic5721it_usi_ispit/database/migrations/2025_06_28_200057_create_bills_table.php",
                            "relativePath": "/database/migrations/2025_06_28_200057_create_bills_table.php",
                            "migrationName": "2025_06_28_200057_create_bills_table",
                            "datePrefix": "2025_06_28",
                            "fullPrefix": "2025_06_28_200057",
                            "createdTables": [
                                "bills"
                            ],
                            "changedTables": []
                        }
                    ]
                },
                "id": 1,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 23:00:17",
                "positionX": "248.667",
                "positionY": "58.3333",
                "sectionId": 1
            },
            "__tableData": {
                "count": 13,
                "lastPrimaryKey": 13,
                "index": {
                    "1": {
                        "hasMany": {
                            "columns.tableId": [
                                1,
                                2,
                                3,
                                4,
                                5
                            ],
                            "indices.tableId": [
                                1
                            ],
                            "models.tableId": [
                                1
                            ],
                            "cruds.tableId": [
                                2
                            ]
                        }
                    },
                    "2": {
                        "hasMany": {
                            "columns.tableId": [
                                6,
                                7,
                                8
                            ],
                            "indices.tableId": [
                                2
                            ]
                        }
                    },
                    "3": {
                        "hasMany": {
                            "columns.tableId": [
                                9,
                                10,
                                11
                            ],
                            "indices.tableId": [
                                3
                            ]
                        }
                    },
                    "4": {
                        "hasMany": {
                            "columns.tableId": [
                                12,
                                13,
                                14,
                                15,
                                16,
                                17,
                                18
                            ]
                        }
                    },
                    "5": {
                        "hasMany": {
                            "columns.tableId": [
                                19,
                                20,
                                21,
                                22,
                                23,
                                24,
                                25,
                                26,
                                27,
                                28
                            ],
                            "indices.tableId": [
                                4
                            ]
                        }
                    },
                    "6": {
                        "hasMany": {
                            "columns.tableId": [
                                29,
                                30,
                                31,
                                32,
                                33,
                                34,
                                35
                            ]
                        }
                    },
                    "7": {
                        "hasMany": {
                            "columns.tableId": [
                                36,
                                37,
                                38
                            ]
                        }
                    },
                    "8": {
                        "hasMany": {
                            "columns.tableId": [
                                39,
                                40,
                                41
                            ],
                            "indices.tableId": [
                                5
                            ]
                        }
                    },
                    "9": {
                        "hasMany": {
                            "columns.tableId": [
                                42,
                                43,
                                44,
                                45,
                                46,
                                47,
                                48,
                                49,
                                50
                            ],
                            "indices.onTableId": [
                                1
                            ],
                            "indices.tableId": [
                                6,
                                7,
                                8,
                                9
                            ],
                            "models.tableId": [
                                2
                            ],
                            "cruds.tableId": [
                                3
                            ]
                        }
                    },
                    "10": {
                        "hasMany": {
                            "columns.tableId": [
                                51,
                                52,
                                53,
                                54,
                                55,
                                56
                            ],
                            "indices.tableId": [
                                10
                            ]
                        }
                    },
                    "11": {
                        "hasMany": {
                            "columns.tableId": [
                                57,
                                58,
                                59,
                                60
                            ],
                            "indices.onTableId": [
                                7
                            ],
                            "models.tableId": [
                                3
                            ],
                            "cruds.tableId": [
                                5
                            ]
                        }
                    },
                    "12": {
                        "hasMany": {
                            "columns.tableId": [
                                61,
                                62,
                                63,
                                64,
                                65,
                                66,
                                67,
                                68,
                                69,
                                70,
                                71
                            ],
                            "indices.onTableId": [
                                6,
                                9,
                                11
                            ],
                            "models.tableId": [
                                4
                            ],
                            "cruds.tableId": [
                                1
                            ]
                        }
                    },
                    "13": {
                        "hasMany": {
                            "columns.tableId": [
                                72,
                                73,
                                74,
                                75,
                                76,
                                77,
                                78,
                                79
                            ],
                            "indices.onTableId": [
                                8
                            ],
                            "indices.tableId": [
                                11
                            ],
                            "models.tableId": [
                                5
                            ],
                            "cruds.tableId": [
                                4
                            ]
                        }
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            },
            "item_2": {
                "projectId": 1,
                "name": "cache",
                "migrations": [
                    {
                        "migration": "C:\\Users\\gacic\\OneDrive\\Радна површина\\djolander\\djsavic5721it_usi_ispit/database/migrations/0001_01_01_000001_create_cache_table.php",
                        "relativePath": "/database/migrations/0001_01_01_000001_create_cache_table.php",
                        "migrationName": "0001_01_01_000001_create_cache_table",
                        "datePrefix": "0001_01_01",
                        "fullPrefix": "0001_01_01_000001",
                        "createdTables": [
                            "cache",
                            "cache_locks"
                        ],
                        "changedTables": []
                    }
                ],
                "oldNames": [],
                "createdFromInterface": false,
                "labelColumnId": null,
                "schemaState": {
                    "name": "cache",
                    "oldNames": [],
                    "migrations": [
                        {
                            "migration": "C:\\Users\\gacic\\OneDrive\\Радна површина\\djolander\\djsavic5721it_usi_ispit/database/migrations/0001_01_01_000001_create_cache_table.php",
                            "relativePath": "/database/migrations/0001_01_01_000001_create_cache_table.php",
                            "migrationName": "0001_01_01_000001_create_cache_table",
                            "datePrefix": "0001_01_01",
                            "fullPrefix": "0001_01_01_000001",
                            "createdTables": [
                                "cache",
                                "cache_locks"
                            ],
                            "changedTables": []
                        }
                    ]
                },
                "id": 2,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01",
                "positionX": 0,
                "positionY": 0,
                "sectionId": 2
            },
            "item_3": {
                "projectId": 1,
                "name": "cache_locks",
                "migrations": [
                    {
                        "migration": "C:\\Users\\gacic\\OneDrive\\Радна површина\\djolander\\djsavic5721it_usi_ispit/database/migrations/0001_01_01_000001_create_cache_table.php",
                        "relativePath": "/database/migrations/0001_01_01_000001_create_cache_table.php",
                        "migrationName": "0001_01_01_000001_create_cache_table",
                        "datePrefix": "0001_01_01",
                        "fullPrefix": "0001_01_01_000001",
                        "createdTables": [
                            "cache",
                            "cache_locks"
                        ],
                        "changedTables": []
                    }
                ],
                "oldNames": [],
                "createdFromInterface": false,
                "labelColumnId": null,
                "schemaState": {
                    "name": "cache_locks",
                    "oldNames": [],
                    "migrations": [
                        {
                            "migration": "C:\\Users\\gacic\\OneDrive\\Радна површина\\djolander\\djsavic5721it_usi_ispit/database/migrations/0001_01_01_000001_create_cache_table.php",
                            "relativePath": "/database/migrations/0001_01_01_000001_create_cache_table.php",
                            "migrationName": "0001_01_01_000001_create_cache_table",
                            "datePrefix": "0001_01_01",
                            "fullPrefix": "0001_01_01_000001",
                            "createdTables": [
                                "cache",
                                "cache_locks"
                            ],
                            "changedTables": []
                        }
                    ]
                },
                "id": 3,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01",
                "positionX": 0,
                "positionY": 700,
                "sectionId": 2
            },
            "item_4": {
                "projectId": 1,
                "name": "failed_jobs",
                "migrations": [
                    {
                        "migration": "C:\\Users\\gacic\\OneDrive\\Радна површина\\djolander\\djsavic5721it_usi_ispit/database/migrations/0001_01_01_000002_create_jobs_table.php",
                        "relativePath": "/database/migrations/0001_01_01_000002_create_jobs_table.php",
                        "migrationName": "0001_01_01_000002_create_jobs_table",
                        "datePrefix": "0001_01_01",
                        "fullPrefix": "0001_01_01_000002",
                        "createdTables": [
                            "jobs",
                            "job_batches",
                            "failed_jobs"
                        ],
                        "changedTables": []
                    }
                ],
                "oldNames": [],
                "createdFromInterface": false,
                "labelColumnId": null,
                "schemaState": {
                    "name": "failed_jobs",
                    "oldNames": [],
                    "migrations": [
                        {
                            "migration": "C:\\Users\\gacic\\OneDrive\\Радна површина\\djolander\\djsavic5721it_usi_ispit/database/migrations/0001_01_01_000002_create_jobs_table.php",
                            "relativePath": "/database/migrations/0001_01_01_000002_create_jobs_table.php",
                            "migrationName": "0001_01_01_000002_create_jobs_table",
                            "datePrefix": "0001_01_01",
                            "fullPrefix": "0001_01_01_000002",
                            "createdTables": [
                                "jobs",
                                "job_batches",
                                "failed_jobs"
                            ],
                            "changedTables": []
                        }
                    ]
                },
                "id": 4,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01",
                "positionX": 495,
                "positionY": 495,
                "sectionId": 2
            },
            "item_5": {
                "projectId": 1,
                "name": "job_batches",
                "migrations": [
                    {
                        "migration": "C:\\Users\\gacic\\OneDrive\\Радна површина\\djolander\\djsavic5721it_usi_ispit/database/migrations/0001_01_01_000002_create_jobs_table.php",
                        "relativePath": "/database/migrations/0001_01_01_000002_create_jobs_table.php",
                        "migrationName": "0001_01_01_000002_create_jobs_table",
                        "datePrefix": "0001_01_01",
                        "fullPrefix": "0001_01_01_000002",
                        "createdTables": [
                            "jobs",
                            "job_batches",
                            "failed_jobs"
                        ],
                        "changedTables": []
                    }
                ],
                "oldNames": [],
                "createdFromInterface": false,
                "labelColumnId": null,
                "schemaState": {
                    "name": "job_batches",
                    "oldNames": [],
                    "migrations": [
                        {
                            "migration": "C:\\Users\\gacic\\OneDrive\\Радна површина\\djolander\\djsavic5721it_usi_ispit/database/migrations/0001_01_01_000002_create_jobs_table.php",
                            "relativePath": "/database/migrations/0001_01_01_000002_create_jobs_table.php",
                            "migrationName": "0001_01_01_000002_create_jobs_table",
                            "datePrefix": "0001_01_01",
                            "fullPrefix": "0001_01_01_000002",
                            "createdTables": [
                                "jobs",
                                "job_batches",
                                "failed_jobs"
                            ],
                            "changedTables": []
                        }
                    ]
                },
                "id": 5,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01",
                "positionX": 700,
                "positionY": 0,
                "sectionId": 2
            },
            "item_6": {
                "projectId": 1,
                "name": "jobs",
                "migrations": [
                    {
                        "migration": "C:\\Users\\gacic\\OneDrive\\Радна површина\\djolander\\djsavic5721it_usi_ispit/database/migrations/0001_01_01_000002_create_jobs_table.php",
                        "relativePath": "/database/migrations/0001_01_01_000002_create_jobs_table.php",
                        "migrationName": "0001_01_01_000002_create_jobs_table",
                        "datePrefix": "0001_01_01",
                        "fullPrefix": "0001_01_01_000002",
                        "createdTables": [
                            "jobs",
                            "job_batches",
                            "failed_jobs"
                        ],
                        "changedTables": []
                    }
                ],
                "oldNames": [],
                "createdFromInterface": false,
                "labelColumnId": null,
                "schemaState": {
                    "name": "jobs",
                    "oldNames": [],
                    "migrations": [
                        {
                            "migration": "C:\\Users\\gacic\\OneDrive\\Радна површина\\djolander\\djsavic5721it_usi_ispit/database/migrations/0001_01_01_000002_create_jobs_table.php",
                            "relativePath": "/database/migrations/0001_01_01_000002_create_jobs_table.php",
                            "migrationName": "0001_01_01_000002_create_jobs_table",
                            "datePrefix": "0001_01_01",
                            "fullPrefix": "0001_01_01_000002",
                            "createdTables": [
                                "jobs",
                                "job_batches",
                                "failed_jobs"
                            ],
                            "changedTables": []
                        }
                    ]
                },
                "id": 6,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01",
                "positionX": 495,
                "positionY": -495,
                "sectionId": 2
            },
            "item_7": {
                "projectId": 1,
                "name": "migrations",
                "migrations": [],
                "oldNames": [],
                "createdFromInterface": false,
                "labelColumnId": null,
                "schemaState": {
                    "name": "migrations",
                    "oldNames": [],
                    "migrations": []
                },
                "id": 7,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01",
                "positionX": 0,
                "positionY": -700,
                "sectionId": 2
            },
            "item_8": {
                "projectId": 1,
                "name": "password_reset_tokens",
                "migrations": [
                    {
                        "migration": "C:\\Users\\gacic\\OneDrive\\Радна површина\\djolander\\djsavic5721it_usi_ispit/database/migrations/0001_01_01_000000_create_users_table.php",
                        "relativePath": "/database/migrations/0001_01_01_000000_create_users_table.php",
                        "migrationName": "0001_01_01_000000_create_users_table",
                        "datePrefix": "0001_01_01",
                        "fullPrefix": "0001_01_01_000000",
                        "createdTables": [
                            "users",
                            "password_reset_tokens",
                            "sessions"
                        ],
                        "changedTables": []
                    }
                ],
                "oldNames": [],
                "createdFromInterface": false,
                "labelColumnId": null,
                "schemaState": {
                    "name": "password_reset_tokens",
                    "oldNames": [],
                    "migrations": [
                        {
                            "migration": "C:\\Users\\gacic\\OneDrive\\Радна површина\\djolander\\djsavic5721it_usi_ispit/database/migrations/0001_01_01_000000_create_users_table.php",
                            "relativePath": "/database/migrations/0001_01_01_000000_create_users_table.php",
                            "migrationName": "0001_01_01_000000_create_users_table",
                            "datePrefix": "0001_01_01",
                            "fullPrefix": "0001_01_01_000000",
                            "createdTables": [
                                "users",
                                "password_reset_tokens",
                                "sessions"
                            ],
                            "changedTables": []
                        }
                    ]
                },
                "id": 8,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01",
                "positionX": -495,
                "positionY": -495,
                "sectionId": 2
            },
            "item_9": {
                "projectId": 1,
                "name": "services",
                "migrations": [
                    {
                        "migration": "C:\\Users\\gacic\\OneDrive\\Радна површина\\djolander\\djsavic5721it_usi_ispit/database/migrations/2025_06_28_200056_create_services_table.php",
                        "relativePath": "/database/migrations/2025_06_28_200056_create_services_table.php",
                        "migrationName": "2025_06_28_200056_create_services_table",
                        "datePrefix": "2025_06_28",
                        "fullPrefix": "2025_06_28_200056",
                        "createdTables": [
                            "services"
                        ],
                        "changedTables": []
                    }
                ],
                "oldNames": [],
                "createdFromInterface": false,
                "labelColumnId": null,
                "schemaState": {
                    "name": "services",
                    "oldNames": [],
                    "migrations": [
                        {
                            "migration": "C:\\Users\\gacic\\OneDrive\\Радна површина\\djolander\\djsavic5721it_usi_ispit/database/migrations/2025_06_28_200056_create_services_table.php",
                            "relativePath": "/database/migrations/2025_06_28_200056_create_services_table.php",
                            "migrationName": "2025_06_28_200056_create_services_table",
                            "datePrefix": "2025_06_28",
                            "fullPrefix": "2025_06_28_200056",
                            "createdTables": [
                                "services"
                            ],
                            "changedTables": []
                        }
                    ]
                },
                "id": 9,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 23:00:03",
                "positionX": "-284",
                "positionY": "-284",
                "sectionId": 1
            },
            "item_10": {
                "projectId": 1,
                "name": "sessions",
                "migrations": [
                    {
                        "migration": "C:\\Users\\gacic\\OneDrive\\Радна површина\\djolander\\djsavic5721it_usi_ispit/database/migrations/0001_01_01_000000_create_users_table.php",
                        "relativePath": "/database/migrations/0001_01_01_000000_create_users_table.php",
                        "migrationName": "0001_01_01_000000_create_users_table",
                        "datePrefix": "0001_01_01",
                        "fullPrefix": "0001_01_01_000000",
                        "createdTables": [
                            "users",
                            "password_reset_tokens",
                            "sessions"
                        ],
                        "changedTables": []
                    }
                ],
                "oldNames": [],
                "createdFromInterface": false,
                "labelColumnId": null,
                "schemaState": {
                    "name": "sessions",
                    "oldNames": [],
                    "migrations": [
                        {
                            "migration": "C:\\Users\\gacic\\OneDrive\\Радна површина\\djolander\\djsavic5721it_usi_ispit/database/migrations/0001_01_01_000000_create_users_table.php",
                            "relativePath": "/database/migrations/0001_01_01_000000_create_users_table.php",
                            "migrationName": "0001_01_01_000000_create_users_table",
                            "datePrefix": "0001_01_01",
                            "fullPrefix": "0001_01_01_000000",
                            "createdTables": [
                                "users",
                                "password_reset_tokens",
                                "sessions"
                            ],
                            "changedTables": []
                        }
                    ]
                },
                "id": 10,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01",
                "positionX": -700,
                "positionY": 0,
                "sectionId": 2
            },
            "item_11": {
                "projectId": 1,
                "name": "statuses",
                "migrations": [
                    {
                        "migration": "C:\\Users\\gacic\\OneDrive\\Радна површина\\djolander\\djsavic5721it_usi_ispit/database/migrations/2025_06_28_200054_create_statuses_table.php",
                        "relativePath": "/database/migrations/2025_06_28_200054_create_statuses_table.php",
                        "migrationName": "2025_06_28_200054_create_statuses_table",
                        "datePrefix": "2025_06_28",
                        "fullPrefix": "2025_06_28_200054",
                        "createdTables": [
                            "statuses"
                        ],
                        "changedTables": []
                    }
                ],
                "oldNames": [],
                "createdFromInterface": false,
                "labelColumnId": null,
                "schemaState": {
                    "name": "statuses",
                    "oldNames": [],
                    "migrations": [
                        {
                            "migration": "C:\\Users\\gacic\\OneDrive\\Радна површина\\djolander\\djsavic5721it_usi_ispit/database/migrations/2025_06_28_200054_create_statuses_table.php",
                            "relativePath": "/database/migrations/2025_06_28_200054_create_statuses_table.php",
                            "migrationName": "2025_06_28_200054_create_statuses_table",
                            "datePrefix": "2025_06_28",
                            "fullPrefix": "2025_06_28_200054",
                            "createdTables": [
                                "statuses"
                            ],
                            "changedTables": []
                        }
                    ]
                },
                "id": 11,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 23:00:19",
                "positionX": "261.667",
                "positionY": "-340",
                "sectionId": 1
            },
            "item_12": {
                "projectId": 1,
                "name": "users",
                "migrations": [
                    {
                        "migration": "C:\\Users\\gacic\\OneDrive\\Радна површина\\djolander\\djsavic5721it_usi_ispit/database/migrations/0001_01_01_000000_create_users_table.php",
                        "relativePath": "/database/migrations/0001_01_01_000000_create_users_table.php",
                        "migrationName": "0001_01_01_000000_create_users_table",
                        "datePrefix": "0001_01_01",
                        "fullPrefix": "0001_01_01_000000",
                        "createdTables": [
                            "users",
                            "password_reset_tokens",
                            "sessions"
                        ],
                        "changedTables": []
                    }
                ],
                "oldNames": [],
                "createdFromInterface": false,
                "labelColumnId": null,
                "schemaState": {
                    "name": "users",
                    "oldNames": [],
                    "migrations": [
                        {
                            "migration": "C:\\Users\\gacic\\OneDrive\\Радна површина\\djolander\\djsavic5721it_usi_ispit/database/migrations/0001_01_01_000000_create_users_table.php",
                            "relativePath": "/database/migrations/0001_01_01_000000_create_users_table.php",
                            "migrationName": "0001_01_01_000000_create_users_table",
                            "datePrefix": "0001_01_01",
                            "fullPrefix": "0001_01_01_000000",
                            "createdTables": [
                                "users",
                                "password_reset_tokens",
                                "sessions"
                            ],
                            "changedTables": []
                        }
                    ]
                },
                "id": 12,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 23:00:13",
                "positionX": "-1194.67",
                "positionY": "-251.667",
                "sectionId": 1
            },
            "item_13": {
                "projectId": 1,
                "name": "vehicles",
                "migrations": [
                    {
                        "migration": "C:\\Users\\gacic\\OneDrive\\Радна површина\\djolander\\djsavic5721it_usi_ispit/database/migrations/2025_06_28_200055_create_vehicles_table.php",
                        "relativePath": "/database/migrations/2025_06_28_200055_create_vehicles_table.php",
                        "migrationName": "2025_06_28_200055_create_vehicles_table",
                        "datePrefix": "2025_06_28",
                        "fullPrefix": "2025_06_28_200055",
                        "createdTables": [
                            "vehicles"
                        ],
                        "changedTables": []
                    }
                ],
                "oldNames": [],
                "createdFromInterface": false,
                "labelColumnId": null,
                "schemaState": {
                    "name": "vehicles",
                    "oldNames": [],
                    "migrations": [
                        {
                            "migration": "C:\\Users\\gacic\\OneDrive\\Радна површина\\djolander\\djsavic5721it_usi_ispit/database/migrations/2025_06_28_200055_create_vehicles_table.php",
                            "relativePath": "/database/migrations/2025_06_28_200055_create_vehicles_table.php",
                            "migrationName": "2025_06_28_200055_create_vehicles_table",
                            "datePrefix": "2025_06_28",
                            "fullPrefix": "2025_06_28_200055",
                            "createdTables": [
                                "vehicles"
                            ],
                            "changedTables": []
                        }
                    ]
                },
                "id": 13,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 23:00:15",
                "positionX": "-736.333",
                "positionY": "106.333",
                "sectionId": 1
            }
        },
        "columns": {
            "item_1": {
                "name": "id",
                "type": "bigInteger",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 1,
                "removed": false,
                "schemaState": {
                    "name": "id",
                    "length": null,
                    "nullable": false,
                    "unsigned": true,
                    "autoIncrement": true,
                    "type": "bigInteger",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": null,
                "autoIncrement": true,
                "order": 0,
                "total": null,
                "places": null,
                "options": [],
                "id": 1,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "__tableData": {
                "count": 79,
                "lastPrimaryKey": 79,
                "index": {
                    "1": {
                        "hasMany": {
                            "casts_model_column.columnId": [
                                1
                            ]
                        }
                    },
                    "2": {
                        "hasMany": {
                            "index_column.columnId": [
                                1
                            ],
                            "fillable_model_column.columnId": [
                                1
                            ],
                            "casts_model_column.columnId": [
                                2
                            ],
                            "relationships.foreignKeyId": [
                                1
                            ],
                            "inputs.columnId": [
                                7
                            ]
                        }
                    },
                    "3": {
                        "hasMany": {
                            "fillable_model_column.columnId": [
                                2
                            ],
                            "casts_model_column.columnId": [
                                3
                            ],
                            "inputs.columnId": [
                                8
                            ]
                        }
                    },
                    "4": {
                        "hasMany": {
                            "cruds.defaultSearchColumnId": [
                                2
                            ]
                        }
                    },
                    "5": {
                        "hasMany": {
                            "cruds.defaultSortColumnId": [
                                2
                            ]
                        }
                    },
                    "6": {
                        "hasMany": {
                            "index_column.columnId": [
                                2
                            ]
                        }
                    },
                    "7": {
                        "hasMany": {}
                    },
                    "8": {
                        "hasMany": {}
                    },
                    "9": {
                        "hasMany": {
                            "index_column.columnId": [
                                3
                            ]
                        }
                    },
                    "10": {
                        "hasMany": {}
                    },
                    "11": {
                        "hasMany": {}
                    },
                    "12": {
                        "hasMany": {}
                    },
                    "13": {
                        "hasMany": {}
                    },
                    "14": {
                        "hasMany": {}
                    },
                    "15": {
                        "hasMany": {}
                    },
                    "16": {
                        "hasMany": {}
                    },
                    "17": {
                        "hasMany": {}
                    },
                    "18": {
                        "hasMany": {}
                    },
                    "19": {
                        "hasMany": {
                            "index_column.columnId": [
                                4
                            ]
                        }
                    },
                    "20": {
                        "hasMany": {}
                    },
                    "21": {
                        "hasMany": {}
                    },
                    "22": {
                        "hasMany": {}
                    },
                    "23": {
                        "hasMany": {}
                    },
                    "24": {
                        "hasMany": {}
                    },
                    "25": {
                        "hasMany": {}
                    },
                    "26": {
                        "hasMany": {}
                    },
                    "27": {
                        "hasMany": {}
                    },
                    "28": {
                        "hasMany": {}
                    },
                    "29": {
                        "hasMany": {}
                    },
                    "30": {
                        "hasMany": {}
                    },
                    "31": {
                        "hasMany": {}
                    },
                    "32": {
                        "hasMany": {}
                    },
                    "33": {
                        "hasMany": {}
                    },
                    "34": {
                        "hasMany": {}
                    },
                    "35": {
                        "hasMany": {}
                    },
                    "36": {
                        "hasMany": {}
                    },
                    "37": {
                        "hasMany": {}
                    },
                    "38": {
                        "hasMany": {}
                    },
                    "39": {
                        "hasMany": {
                            "index_column.columnId": [
                                5
                            ]
                        }
                    },
                    "40": {
                        "hasMany": {}
                    },
                    "41": {
                        "hasMany": {}
                    },
                    "42": {
                        "hasMany": {
                            "indices.referencesColumnId": [
                                1
                            ],
                            "casts_model_column.columnId": [
                                4
                            ],
                            "relationships.parentKeyId": [
                                1
                            ]
                        }
                    },
                    "43": {
                        "hasMany": {
                            "index_column.columnId": [
                                8
                            ],
                            "fillable_model_column.columnId": [
                                3
                            ],
                            "casts_model_column.columnId": [
                                5
                            ],
                            "relationships.foreignKeyId": [
                                2
                            ],
                            "inputs.columnId": [
                                9
                            ]
                        }
                    },
                    "44": {
                        "hasMany": {
                            "index_column.columnId": [
                                9
                            ],
                            "fillable_model_column.columnId": [
                                4
                            ],
                            "casts_model_column.columnId": [
                                6
                            ],
                            "relationships.foreignKeyId": [
                                3
                            ],
                            "inputs.columnId": [
                                10
                            ]
                        }
                    },
                    "45": {
                        "hasMany": {
                            "index_column.columnId": [
                                6
                            ],
                            "fillable_model_column.columnId": [
                                5
                            ],
                            "casts_model_column.columnId": [
                                7
                            ],
                            "relationships.foreignKeyId": [
                                4
                            ],
                            "inputs.columnId": [
                                11
                            ]
                        }
                    },
                    "46": {
                        "hasMany": {
                            "index_column.columnId": [
                                7
                            ],
                            "fillable_model_column.columnId": [
                                6
                            ],
                            "casts_model_column.columnId": [
                                8
                            ],
                            "relationships.foreignKeyId": [
                                5
                            ],
                            "inputs.columnId": [
                                12
                            ]
                        }
                    },
                    "47": {
                        "hasMany": {
                            "fillable_model_column.columnId": [
                                7
                            ],
                            "cruds.defaultSearchColumnId": [
                                3
                            ],
                            "inputs.columnId": [
                                13
                            ]
                        }
                    },
                    "48": {
                        "hasMany": {
                            "fillable_model_column.columnId": [
                                8
                            ],
                            "inputs.columnId": [
                                14
                            ]
                        }
                    },
                    "49": {
                        "hasMany": {}
                    },
                    "50": {
                        "hasMany": {
                            "cruds.defaultSortColumnId": [
                                3
                            ]
                        }
                    },
                    "51": {
                        "hasMany": {
                            "index_column.columnId": [
                                10
                            ]
                        }
                    },
                    "52": {
                        "hasMany": {}
                    },
                    "53": {
                        "hasMany": {}
                    },
                    "54": {
                        "hasMany": {}
                    },
                    "55": {
                        "hasMany": {}
                    },
                    "56": {
                        "hasMany": {}
                    },
                    "57": {
                        "hasMany": {
                            "indices.referencesColumnId": [
                                7
                            ],
                            "casts_model_column.columnId": [
                                9
                            ],
                            "relationships.parentKeyId": [
                                5
                            ]
                        }
                    },
                    "58": {
                        "hasMany": {
                            "fillable_model_column.columnId": [
                                9
                            ],
                            "cruds.defaultSearchColumnId": [
                                5
                            ],
                            "inputs.columnId": [
                                20
                            ]
                        }
                    },
                    "59": {
                        "hasMany": {}
                    },
                    "60": {
                        "hasMany": {
                            "cruds.defaultSortColumnId": [
                                5
                            ]
                        }
                    },
                    "61": {
                        "hasMany": {
                            "indices.referencesColumnId": [
                                6,
                                9,
                                11
                            ],
                            "relationships.parentKeyId": [
                                3,
                                4,
                                6
                            ]
                        }
                    },
                    "62": {
                        "hasMany": {
                            "cruds.defaultSearchColumnId": [
                                1
                            ],
                            "inputs.columnId": [
                                1
                            ]
                        }
                    },
                    "63": {
                        "hasMany": {
                            "inputs.columnId": [
                                2
                            ]
                        }
                    },
                    "64": {
                        "hasMany": {
                            "fillable_model_column.columnId": [
                                10
                            ],
                            "inputs.columnId": [
                                3
                            ]
                        }
                    },
                    "65": {
                        "hasMany": {
                            "casts_model_column.columnId": [
                                10
                            ]
                        }
                    },
                    "66": {
                        "hasMany": {
                            "fillable_model_column.columnId": [
                                11
                            ],
                            "hidden_model_column.columnId": [
                                1
                            ],
                            "casts_model_column.columnId": [
                                11
                            ],
                            "inputs.columnId": [
                                4
                            ]
                        }
                    },
                    "67": {
                        "hasMany": {
                            "inputs.columnId": [
                                5
                            ]
                        }
                    },
                    "68": {
                        "hasMany": {
                            "inputs.columnId": [
                                6
                            ]
                        }
                    },
                    "69": {
                        "hasMany": {
                            "hidden_model_column.columnId": [
                                2
                            ]
                        }
                    },
                    "70": {
                        "hasMany": {}
                    },
                    "71": {
                        "hasMany": {
                            "cruds.defaultSortColumnId": [
                                1
                            ]
                        }
                    },
                    "72": {
                        "hasMany": {
                            "indices.referencesColumnId": [
                                8
                            ],
                            "casts_model_column.columnId": [
                                12
                            ],
                            "relationships.parentKeyId": [
                                2
                            ]
                        }
                    },
                    "73": {
                        "hasMany": {
                            "index_column.columnId": [
                                11
                            ],
                            "fillable_model_column.columnId": [
                                12
                            ],
                            "casts_model_column.columnId": [
                                13
                            ],
                            "relationships.foreignKeyId": [
                                6
                            ],
                            "inputs.columnId": [
                                15
                            ]
                        }
                    },
                    "74": {
                        "hasMany": {
                            "fillable_model_column.columnId": [
                                13
                            ],
                            "cruds.defaultSearchColumnId": [
                                4
                            ],
                            "inputs.columnId": [
                                16
                            ]
                        }
                    },
                    "75": {
                        "hasMany": {
                            "fillable_model_column.columnId": [
                                14
                            ],
                            "inputs.columnId": [
                                17
                            ]
                        }
                    },
                    "76": {
                        "hasMany": {
                            "fillable_model_column.columnId": [
                                15
                            ],
                            "inputs.columnId": [
                                18
                            ]
                        }
                    },
                    "77": {
                        "hasMany": {
                            "fillable_model_column.columnId": [
                                16
                            ],
                            "inputs.columnId": [
                                19
                            ]
                        }
                    },
                    "78": {
                        "hasMany": {}
                    },
                    "79": {
                        "hasMany": {
                            "cruds.defaultSortColumnId": [
                                4
                            ]
                        }
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            },
            "item_2": {
                "name": "usluga_id",
                "type": "bigInteger",
                "index": true,
                "length": null,
                "unique": false,
                "tableId": 1,
                "removed": false,
                "schemaState": {
                    "name": "usluga_id",
                    "length": null,
                    "nullable": false,
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "bigInteger",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber()",
                "order": 1,
                "total": null,
                "places": null,
                "options": [],
                "id": 2,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "item_3": {
                "name": "cena",
                "type": "double",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 1,
                "removed": false,
                "schemaState": {
                    "name": "cena",
                    "length": null,
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "double",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber(2)",
                "order": 2,
                "total": null,
                "places": null,
                "options": [],
                "id": 3,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "item_4": {
                "name": "created_at",
                "type": "timestamp",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 1,
                "removed": false,
                "schemaState": {
                    "name": "created_at",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "timestamp",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->dateTime()",
                "order": 3,
                "total": null,
                "places": null,
                "options": [],
                "id": 4,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "item_5": {
                "name": "updated_at",
                "type": "timestamp",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 1,
                "removed": false,
                "schemaState": {
                    "name": "updated_at",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "timestamp",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->dateTime()",
                "order": 4,
                "total": null,
                "places": null,
                "options": [],
                "id": 5,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "item_6": {
                "name": "key",
                "type": "string",
                "index": true,
                "length": "255",
                "unique": false,
                "tableId": 2,
                "removed": false,
                "schemaState": {
                    "name": "key",
                    "length": "255",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->text({LENGTH})",
                "order": 0,
                "total": null,
                "places": null,
                "options": [],
                "id": 6,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "item_7": {
                "name": "value",
                "type": "mediumText",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 2,
                "removed": false,
                "schemaState": {
                    "name": "value",
                    "length": null,
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "mediumText",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->text()",
                "order": 1,
                "total": null,
                "places": null,
                "options": [],
                "id": 7,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "item_8": {
                "name": "expiration",
                "type": "integer",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 2,
                "removed": false,
                "schemaState": {
                    "name": "expiration",
                    "length": null,
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "integer",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber(0)",
                "order": 2,
                "total": null,
                "places": null,
                "options": [],
                "id": 8,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "item_9": {
                "name": "key",
                "type": "string",
                "index": true,
                "length": "255",
                "unique": false,
                "tableId": 3,
                "removed": false,
                "schemaState": {
                    "name": "key",
                    "length": "255",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->text({LENGTH})",
                "order": 0,
                "total": null,
                "places": null,
                "options": [],
                "id": 9,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "item_10": {
                "name": "owner",
                "type": "string",
                "index": false,
                "length": "255",
                "unique": false,
                "tableId": 3,
                "removed": false,
                "schemaState": {
                    "name": "owner",
                    "length": "255",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->text({LENGTH})",
                "order": 1,
                "total": null,
                "places": null,
                "options": [],
                "id": 10,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "item_11": {
                "name": "expiration",
                "type": "integer",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 3,
                "removed": false,
                "schemaState": {
                    "name": "expiration",
                    "length": null,
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "integer",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber(0)",
                "order": 2,
                "total": null,
                "places": null,
                "options": [],
                "id": 11,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "item_12": {
                "name": "id",
                "type": "bigInteger",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 4,
                "removed": false,
                "schemaState": {
                    "name": "id",
                    "length": null,
                    "nullable": false,
                    "unsigned": true,
                    "autoIncrement": true,
                    "type": "bigInteger",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": null,
                "autoIncrement": true,
                "order": 0,
                "total": null,
                "places": null,
                "options": [],
                "id": 12,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "item_13": {
                "name": "uuid",
                "type": "string",
                "index": false,
                "length": "255",
                "unique": true,
                "tableId": 4,
                "removed": false,
                "schemaState": {
                    "name": "uuid",
                    "length": "255",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": false,
                    "unique": true,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->uuid()",
                "order": 1,
                "total": null,
                "places": null,
                "options": [],
                "id": 13,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "item_14": {
                "name": "connection",
                "type": "text",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 4,
                "removed": false,
                "schemaState": {
                    "name": "connection",
                    "length": null,
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "text",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->text()",
                "order": 2,
                "total": null,
                "places": null,
                "options": [],
                "id": 14,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "item_15": {
                "name": "queue",
                "type": "text",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 4,
                "removed": false,
                "schemaState": {
                    "name": "queue",
                    "length": null,
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "text",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->text()",
                "order": 3,
                "total": null,
                "places": null,
                "options": [],
                "id": 15,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "item_16": {
                "name": "payload",
                "type": "longText",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 4,
                "removed": false,
                "schemaState": {
                    "name": "payload",
                    "length": null,
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "longText",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->text()",
                "order": 4,
                "total": null,
                "places": null,
                "options": [],
                "id": 16,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "item_17": {
                "name": "exception",
                "type": "longText",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 4,
                "removed": false,
                "schemaState": {
                    "name": "exception",
                    "length": null,
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "longText",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->text()",
                "order": 5,
                "total": null,
                "places": null,
                "options": [],
                "id": 17,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "item_18": {
                "name": "failed_at",
                "type": "timestamp",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 4,
                "removed": false,
                "schemaState": {
                    "name": "failed_at",
                    "length": null,
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "timestamp",
                    "index": false,
                    "unique": false,
                    "default": "CURRENT_TIMESTAMP",
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": "CURRENT_TIMESTAMP",
                "autoIncrement": false,
                "faker": "fake()->dateTime()",
                "order": 6,
                "total": null,
                "places": null,
                "options": [],
                "id": 18,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "item_19": {
                "name": "id",
                "type": "string",
                "index": true,
                "length": "255",
                "unique": false,
                "tableId": 5,
                "removed": false,
                "schemaState": {
                    "name": "id",
                    "length": "255",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "order": 0,
                "total": null,
                "places": null,
                "options": [],
                "id": 19,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "item_20": {
                "name": "name",
                "type": "string",
                "index": false,
                "length": "255",
                "unique": false,
                "tableId": 5,
                "removed": false,
                "schemaState": {
                    "name": "name",
                    "length": "255",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->name()",
                "order": 1,
                "total": null,
                "places": null,
                "options": [],
                "id": 20,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "item_21": {
                "name": "total_jobs",
                "type": "integer",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 5,
                "removed": false,
                "schemaState": {
                    "name": "total_jobs",
                    "length": null,
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "integer",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber(0)",
                "order": 2,
                "total": null,
                "places": null,
                "options": [],
                "id": 21,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "item_22": {
                "name": "pending_jobs",
                "type": "integer",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 5,
                "removed": false,
                "schemaState": {
                    "name": "pending_jobs",
                    "length": null,
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "integer",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber(0)",
                "order": 3,
                "total": null,
                "places": null,
                "options": [],
                "id": 22,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "item_23": {
                "name": "failed_jobs",
                "type": "integer",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 5,
                "removed": false,
                "schemaState": {
                    "name": "failed_jobs",
                    "length": null,
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "integer",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber(0)",
                "order": 4,
                "total": null,
                "places": null,
                "options": [],
                "id": 23,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "item_24": {
                "name": "failed_job_ids",
                "type": "longText",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 5,
                "removed": false,
                "schemaState": {
                    "name": "failed_job_ids",
                    "length": null,
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "longText",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->text()",
                "order": 5,
                "total": null,
                "places": null,
                "options": [],
                "id": 24,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "item_25": {
                "name": "options",
                "type": "mediumText",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 5,
                "removed": false,
                "schemaState": {
                    "name": "options",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "mediumText",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "[]",
                "order": 6,
                "total": null,
                "places": null,
                "options": [],
                "id": 25,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "item_26": {
                "name": "cancelled_at",
                "type": "integer",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 5,
                "removed": false,
                "schemaState": {
                    "name": "cancelled_at",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "integer",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber(0)",
                "order": 7,
                "total": null,
                "places": null,
                "options": [],
                "id": 26,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "item_27": {
                "name": "created_at",
                "type": "integer",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 5,
                "removed": false,
                "schemaState": {
                    "name": "created_at",
                    "length": null,
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "integer",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->dateTime()",
                "order": 8,
                "total": null,
                "places": null,
                "options": [],
                "id": 27,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "item_28": {
                "name": "finished_at",
                "type": "integer",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 5,
                "removed": false,
                "schemaState": {
                    "name": "finished_at",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "integer",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber(0)",
                "order": 9,
                "total": null,
                "places": null,
                "options": [],
                "id": 28,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "item_29": {
                "name": "id",
                "type": "bigInteger",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 6,
                "removed": false,
                "schemaState": {
                    "name": "id",
                    "length": null,
                    "nullable": false,
                    "unsigned": true,
                    "autoIncrement": true,
                    "type": "bigInteger",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": null,
                "autoIncrement": true,
                "order": 0,
                "total": null,
                "places": null,
                "options": [],
                "id": 29,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "item_30": {
                "name": "queue",
                "type": "string",
                "index": true,
                "length": "255",
                "unique": false,
                "tableId": 6,
                "removed": false,
                "schemaState": {
                    "name": "queue",
                    "length": "255",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->text({LENGTH})",
                "order": 1,
                "total": null,
                "places": null,
                "options": [],
                "id": 30,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "item_31": {
                "name": "payload",
                "type": "longText",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 6,
                "removed": false,
                "schemaState": {
                    "name": "payload",
                    "length": null,
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "longText",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->text()",
                "order": 2,
                "total": null,
                "places": null,
                "options": [],
                "id": 31,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "item_32": {
                "name": "attempts",
                "type": "tinyInteger",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 6,
                "removed": false,
                "schemaState": {
                    "name": "attempts",
                    "length": null,
                    "nullable": false,
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "tinyInteger",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->numberBetween(0, 127)",
                "order": 3,
                "total": null,
                "places": null,
                "options": [],
                "id": 32,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "item_33": {
                "name": "reserved_at",
                "type": "integer",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 6,
                "removed": false,
                "schemaState": {
                    "name": "reserved_at",
                    "length": null,
                    "nullable": true,
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "integer",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": true,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber(0)",
                "order": 4,
                "total": null,
                "places": null,
                "options": [],
                "id": 33,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "item_34": {
                "name": "available_at",
                "type": "integer",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 6,
                "removed": false,
                "schemaState": {
                    "name": "available_at",
                    "length": null,
                    "nullable": false,
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "integer",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber(0)",
                "order": 5,
                "total": null,
                "places": null,
                "options": [],
                "id": 34,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "item_35": {
                "name": "created_at",
                "type": "integer",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 6,
                "removed": false,
                "schemaState": {
                    "name": "created_at",
                    "length": null,
                    "nullable": false,
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "integer",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->dateTime()",
                "order": 6,
                "total": null,
                "places": null,
                "options": [],
                "id": 35,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "item_36": {
                "name": "id",
                "type": "integer",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 7,
                "removed": false,
                "schemaState": {
                    "name": "id",
                    "length": null,
                    "nullable": false,
                    "unsigned": true,
                    "autoIncrement": true,
                    "type": "integer",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": null,
                "autoIncrement": true,
                "order": 0,
                "total": null,
                "places": null,
                "options": [],
                "id": 36,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "item_37": {
                "name": "migration",
                "type": "string",
                "index": false,
                "length": "255",
                "unique": false,
                "tableId": 7,
                "removed": false,
                "schemaState": {
                    "name": "migration",
                    "length": "255",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->text({LENGTH})",
                "order": 1,
                "total": null,
                "places": null,
                "options": [],
                "id": 37,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "item_38": {
                "name": "batch",
                "type": "integer",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 7,
                "removed": false,
                "schemaState": {
                    "name": "batch",
                    "length": null,
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "integer",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber(0)",
                "order": 2,
                "total": null,
                "places": null,
                "options": [],
                "id": 38,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "item_39": {
                "name": "email",
                "type": "string",
                "index": true,
                "length": "255",
                "unique": false,
                "tableId": 8,
                "removed": false,
                "schemaState": {
                    "name": "email",
                    "length": "255",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->unique()->safeEmail()",
                "order": 0,
                "total": null,
                "places": null,
                "options": [],
                "id": 39,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "item_40": {
                "name": "token",
                "type": "string",
                "index": false,
                "length": "255",
                "unique": false,
                "tableId": 8,
                "removed": false,
                "schemaState": {
                    "name": "token",
                    "length": "255",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->text({LENGTH})",
                "order": 1,
                "total": null,
                "places": null,
                "options": [],
                "id": 40,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "item_41": {
                "name": "created_at",
                "type": "timestamp",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 8,
                "removed": false,
                "schemaState": {
                    "name": "created_at",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "timestamp",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->dateTime()",
                "order": 2,
                "total": null,
                "places": null,
                "options": [],
                "id": 41,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "item_42": {
                "name": "id",
                "type": "bigInteger",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 9,
                "removed": false,
                "schemaState": {
                    "name": "id",
                    "length": null,
                    "nullable": false,
                    "unsigned": true,
                    "autoIncrement": true,
                    "type": "bigInteger",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": null,
                "autoIncrement": true,
                "order": 0,
                "total": null,
                "places": null,
                "options": [],
                "id": 42,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "item_43": {
                "name": "vozilo_id",
                "type": "bigInteger",
                "index": true,
                "length": null,
                "unique": false,
                "tableId": 9,
                "removed": false,
                "schemaState": {
                    "name": "vozilo_id",
                    "length": null,
                    "nullable": false,
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "bigInteger",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber()",
                "order": 1,
                "total": null,
                "places": null,
                "options": [],
                "id": 43,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "item_44": {
                "name": "zaposleni_id",
                "type": "bigInteger",
                "index": true,
                "length": null,
                "unique": false,
                "tableId": 9,
                "removed": false,
                "schemaState": {
                    "name": "zaposleni_id",
                    "length": null,
                    "nullable": false,
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "bigInteger",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber()",
                "order": 2,
                "total": null,
                "places": null,
                "options": [],
                "id": 44,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "item_45": {
                "name": "admin_id",
                "type": "bigInteger",
                "index": true,
                "length": null,
                "unique": false,
                "tableId": 9,
                "removed": false,
                "schemaState": {
                    "name": "admin_id",
                    "length": null,
                    "nullable": false,
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "bigInteger",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber()",
                "order": 3,
                "total": null,
                "places": null,
                "options": [],
                "id": 45,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "item_46": {
                "name": "status_id",
                "type": "bigInteger",
                "index": true,
                "length": null,
                "unique": false,
                "tableId": 9,
                "removed": false,
                "schemaState": {
                    "name": "status_id",
                    "length": null,
                    "nullable": false,
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "bigInteger",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber()",
                "order": 4,
                "total": null,
                "places": null,
                "options": [],
                "id": 46,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "item_47": {
                "name": "naziv",
                "type": "string",
                "index": false,
                "length": "255",
                "unique": false,
                "tableId": 9,
                "removed": false,
                "schemaState": {
                    "name": "naziv",
                    "length": "255",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->text({LENGTH})",
                "order": 5,
                "total": null,
                "places": null,
                "options": [],
                "id": 47,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "item_48": {
                "name": "opis",
                "type": "text",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 9,
                "removed": false,
                "schemaState": {
                    "name": "opis",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "text",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->text()",
                "order": 6,
                "total": null,
                "places": null,
                "options": [],
                "id": 48,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "item_49": {
                "name": "created_at",
                "type": "timestamp",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 9,
                "removed": false,
                "schemaState": {
                    "name": "created_at",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "timestamp",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->dateTime()",
                "order": 7,
                "total": null,
                "places": null,
                "options": [],
                "id": 49,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "item_50": {
                "name": "updated_at",
                "type": "timestamp",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 9,
                "removed": false,
                "schemaState": {
                    "name": "updated_at",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "timestamp",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->dateTime()",
                "order": 8,
                "total": null,
                "places": null,
                "options": [],
                "id": 50,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "item_51": {
                "name": "id",
                "type": "string",
                "index": true,
                "length": "255",
                "unique": false,
                "tableId": 10,
                "removed": false,
                "schemaState": {
                    "name": "id",
                    "length": "255",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "order": 0,
                "total": null,
                "places": null,
                "options": [],
                "id": 51,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "item_52": {
                "name": "user_id",
                "type": "bigInteger",
                "index": true,
                "length": null,
                "unique": false,
                "tableId": 10,
                "removed": false,
                "schemaState": {
                    "name": "user_id",
                    "length": null,
                    "nullable": true,
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "bigInteger",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": true,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber()",
                "order": 1,
                "total": null,
                "places": null,
                "options": [],
                "id": 52,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "item_53": {
                "name": "ip_address",
                "type": "string",
                "index": false,
                "length": "45",
                "unique": false,
                "tableId": 10,
                "removed": false,
                "schemaState": {
                    "name": "ip_address",
                    "length": "45",
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->ipv4()",
                "order": 2,
                "total": null,
                "places": null,
                "options": [],
                "id": 53,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "item_54": {
                "name": "user_agent",
                "type": "text",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 10,
                "removed": false,
                "schemaState": {
                    "name": "user_agent",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "text",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->userAgent()",
                "order": 3,
                "total": null,
                "places": null,
                "options": [],
                "id": 54,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "item_55": {
                "name": "payload",
                "type": "longText",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 10,
                "removed": false,
                "schemaState": {
                    "name": "payload",
                    "length": null,
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "longText",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->text()",
                "order": 4,
                "total": null,
                "places": null,
                "options": [],
                "id": 55,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "item_56": {
                "name": "last_activity",
                "type": "integer",
                "index": true,
                "length": null,
                "unique": false,
                "tableId": 10,
                "removed": false,
                "schemaState": {
                    "name": "last_activity",
                    "length": null,
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "integer",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber(0)",
                "order": 5,
                "total": null,
                "places": null,
                "options": [],
                "id": 56,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "item_57": {
                "name": "id",
                "type": "bigInteger",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 11,
                "removed": false,
                "schemaState": {
                    "name": "id",
                    "length": null,
                    "nullable": false,
                    "unsigned": true,
                    "autoIncrement": true,
                    "type": "bigInteger",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": null,
                "autoIncrement": true,
                "order": 0,
                "total": null,
                "places": null,
                "options": [],
                "id": 57,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "item_58": {
                "name": "naziv",
                "type": "string",
                "index": false,
                "length": "255",
                "unique": false,
                "tableId": 11,
                "removed": false,
                "schemaState": {
                    "name": "naziv",
                    "length": "255",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->text({LENGTH})",
                "order": 1,
                "total": null,
                "places": null,
                "options": [],
                "id": 58,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "item_59": {
                "name": "created_at",
                "type": "timestamp",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 11,
                "removed": false,
                "schemaState": {
                    "name": "created_at",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "timestamp",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->dateTime()",
                "order": 2,
                "total": null,
                "places": null,
                "options": [],
                "id": 59,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "item_60": {
                "name": "updated_at",
                "type": "timestamp",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 11,
                "removed": false,
                "schemaState": {
                    "name": "updated_at",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "timestamp",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->dateTime()",
                "order": 3,
                "total": null,
                "places": null,
                "options": [],
                "id": 60,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "item_61": {
                "name": "id",
                "type": "bigInteger",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 12,
                "removed": false,
                "schemaState": {
                    "name": "id",
                    "length": null,
                    "nullable": false,
                    "unsigned": true,
                    "autoIncrement": true,
                    "type": "bigInteger",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": null,
                "autoIncrement": true,
                "order": 0,
                "total": null,
                "places": null,
                "options": [],
                "id": 61,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "item_62": {
                "name": "ime",
                "type": "string",
                "index": false,
                "length": "255",
                "unique": false,
                "tableId": 12,
                "removed": false,
                "schemaState": {
                    "name": "ime",
                    "length": "255",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->text({LENGTH})",
                "order": 1,
                "total": null,
                "places": null,
                "options": [],
                "id": 62,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "item_63": {
                "name": "prezime",
                "type": "string",
                "index": false,
                "length": "255",
                "unique": false,
                "tableId": 12,
                "removed": false,
                "schemaState": {
                    "name": "prezime",
                    "length": "255",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->text({LENGTH})",
                "order": 2,
                "total": null,
                "places": null,
                "options": [],
                "id": 63,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "item_64": {
                "name": "email",
                "type": "string",
                "index": false,
                "length": "255",
                "unique": true,
                "tableId": 12,
                "removed": false,
                "schemaState": {
                    "name": "email",
                    "length": "255",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": false,
                    "unique": true,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->unique()->safeEmail()",
                "order": 3,
                "total": null,
                "places": null,
                "options": [],
                "id": 64,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "item_65": {
                "name": "email_verified_at",
                "type": "timestamp",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 12,
                "removed": false,
                "schemaState": {
                    "name": "email_verified_at",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "timestamp",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "now()",
                "order": 4,
                "total": null,
                "places": null,
                "options": [],
                "id": 65,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "item_66": {
                "name": "password",
                "type": "string",
                "index": false,
                "length": "255",
                "unique": false,
                "tableId": 12,
                "removed": false,
                "schemaState": {
                    "name": "password",
                    "length": "255",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "\\Hash::make('password')",
                "order": 5,
                "total": null,
                "places": null,
                "options": [],
                "id": 66,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "item_67": {
                "name": "broj_telefona",
                "type": "string",
                "index": false,
                "length": "255",
                "unique": false,
                "tableId": 12,
                "removed": false,
                "schemaState": {
                    "name": "broj_telefona",
                    "length": "255",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->text({LENGTH})",
                "order": 6,
                "total": null,
                "places": null,
                "options": [],
                "id": 67,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "item_68": {
                "name": "role",
                "type": "enum",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 12,
                "removed": false,
                "schemaState": {
                    "name": "role",
                    "length": null,
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "enum",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": [
                        "klijent",
                        "admin",
                        "zaposleni"
                    ]
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->word()",
                "order": 7,
                "total": null,
                "places": null,
                "options": [
                    "klijent",
                    "admin",
                    "zaposleni"
                ],
                "id": 68,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "item_69": {
                "name": "remember_token",
                "type": "string",
                "index": false,
                "length": "100",
                "unique": false,
                "tableId": 12,
                "removed": false,
                "schemaState": {
                    "name": "remember_token",
                    "length": "100",
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "Str::random(10)",
                "order": 8,
                "total": null,
                "places": null,
                "options": [],
                "id": 69,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "item_70": {
                "name": "created_at",
                "type": "timestamp",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 12,
                "removed": false,
                "schemaState": {
                    "name": "created_at",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "timestamp",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->dateTime()",
                "order": 9,
                "total": null,
                "places": null,
                "options": [],
                "id": 70,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "item_71": {
                "name": "updated_at",
                "type": "timestamp",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 12,
                "removed": false,
                "schemaState": {
                    "name": "updated_at",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "timestamp",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->dateTime()",
                "order": 10,
                "total": null,
                "places": null,
                "options": [],
                "id": 71,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "item_72": {
                "name": "id",
                "type": "bigInteger",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 13,
                "removed": false,
                "schemaState": {
                    "name": "id",
                    "length": null,
                    "nullable": false,
                    "unsigned": true,
                    "autoIncrement": true,
                    "type": "bigInteger",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": null,
                "autoIncrement": true,
                "order": 0,
                "total": null,
                "places": null,
                "options": [],
                "id": 72,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "item_73": {
                "name": "klijent_id",
                "type": "bigInteger",
                "index": true,
                "length": null,
                "unique": false,
                "tableId": 13,
                "removed": false,
                "schemaState": {
                    "name": "klijent_id",
                    "length": null,
                    "nullable": false,
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "bigInteger",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber()",
                "order": 1,
                "total": null,
                "places": null,
                "options": [],
                "id": 73,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "item_74": {
                "name": "registarski_broj",
                "type": "string",
                "index": false,
                "length": "255",
                "unique": false,
                "tableId": 13,
                "removed": false,
                "schemaState": {
                    "name": "registarski_broj",
                    "length": "255",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->text({LENGTH})",
                "order": 2,
                "total": null,
                "places": null,
                "options": [],
                "id": 74,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "item_75": {
                "name": "marka",
                "type": "string",
                "index": false,
                "length": "255",
                "unique": false,
                "tableId": 13,
                "removed": false,
                "schemaState": {
                    "name": "marka",
                    "length": "255",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->text({LENGTH})",
                "order": 3,
                "total": null,
                "places": null,
                "options": [],
                "id": 75,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "item_76": {
                "name": "model",
                "type": "string",
                "index": false,
                "length": "255",
                "unique": false,
                "tableId": 13,
                "removed": false,
                "schemaState": {
                    "name": "model",
                    "length": "255",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->text({LENGTH})",
                "order": 4,
                "total": null,
                "places": null,
                "options": [],
                "id": 76,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "item_77": {
                "name": "godina_proizvodnje",
                "type": "integer",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 13,
                "removed": false,
                "schemaState": {
                    "name": "godina_proizvodnje",
                    "length": null,
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "integer",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber(0)",
                "order": 5,
                "total": null,
                "places": null,
                "options": [],
                "id": 77,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "item_78": {
                "name": "created_at",
                "type": "timestamp",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 13,
                "removed": false,
                "schemaState": {
                    "name": "created_at",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "timestamp",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->dateTime()",
                "order": 6,
                "total": null,
                "places": null,
                "options": [],
                "id": 78,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "item_79": {
                "name": "updated_at",
                "type": "timestamp",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 13,
                "removed": false,
                "schemaState": {
                    "name": "updated_at",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "timestamp",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->dateTime()",
                "order": 7,
                "total": null,
                "places": null,
                "options": [],
                "id": 79,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            }
        },
        "indices": {
            "item_1": {
                "tableId": 1,
                "name": "bills_usluga_id_foreign",
                "columns": [
                    "usluga_id"
                ],
                "algorithm": null,
                "type": "foreign",
                "on": "services",
                "references": "id",
                "onUpdate": "restrict",
                "onDelete": "restrict",
                "schemaState": {
                    "name": "bills_usluga_id_foreign",
                    "columns": [
                        "usluga_id"
                    ],
                    "algorithm": null,
                    "type": "foreign",
                    "on": "services",
                    "references": "id",
                    "onUpdate": "restrict",
                    "onDelete": "restrict"
                },
                "id": 1,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01",
                "onTableId": 9,
                "referencesColumnId": 42
            },
            "__tableData": {
                "count": 11,
                "lastPrimaryKey": 11,
                "index": {
                    "1": {
                        "hasMany": {
                            "index_column.indexId": [
                                1
                            ]
                        }
                    },
                    "2": {
                        "hasMany": {
                            "index_column.indexId": [
                                2
                            ]
                        }
                    },
                    "3": {
                        "hasMany": {
                            "index_column.indexId": [
                                3
                            ]
                        }
                    },
                    "4": {
                        "hasMany": {
                            "index_column.indexId": [
                                4
                            ]
                        }
                    },
                    "5": {
                        "hasMany": {
                            "index_column.indexId": [
                                5
                            ]
                        }
                    },
                    "6": {
                        "hasMany": {
                            "index_column.indexId": [
                                6
                            ]
                        }
                    },
                    "7": {
                        "hasMany": {
                            "index_column.indexId": [
                                7
                            ]
                        }
                    },
                    "8": {
                        "hasMany": {
                            "index_column.indexId": [
                                8
                            ]
                        }
                    },
                    "9": {
                        "hasMany": {
                            "index_column.indexId": [
                                9
                            ]
                        }
                    },
                    "10": {
                        "hasMany": {
                            "index_column.indexId": [
                                10
                            ]
                        }
                    },
                    "11": {
                        "hasMany": {
                            "index_column.indexId": [
                                11
                            ]
                        }
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            },
            "item_2": {
                "tableId": 2,
                "name": "",
                "columns": [
                    "key"
                ],
                "algorithm": null,
                "type": "primary",
                "on": null,
                "references": null,
                "onUpdate": null,
                "onDelete": null,
                "schemaState": {
                    "name": "",
                    "columns": [
                        "key"
                    ],
                    "algorithm": null,
                    "type": "primary",
                    "on": null,
                    "references": null,
                    "onUpdate": null,
                    "onDelete": null
                },
                "id": 2,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "item_3": {
                "tableId": 3,
                "name": "",
                "columns": [
                    "key"
                ],
                "algorithm": null,
                "type": "primary",
                "on": null,
                "references": null,
                "onUpdate": null,
                "onDelete": null,
                "schemaState": {
                    "name": "",
                    "columns": [
                        "key"
                    ],
                    "algorithm": null,
                    "type": "primary",
                    "on": null,
                    "references": null,
                    "onUpdate": null,
                    "onDelete": null
                },
                "id": 3,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "item_4": {
                "tableId": 5,
                "name": "",
                "columns": [
                    "id"
                ],
                "algorithm": null,
                "type": "primary",
                "on": null,
                "references": null,
                "onUpdate": null,
                "onDelete": null,
                "schemaState": {
                    "name": "",
                    "columns": [
                        "id"
                    ],
                    "algorithm": null,
                    "type": "primary",
                    "on": null,
                    "references": null,
                    "onUpdate": null,
                    "onDelete": null
                },
                "id": 4,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "item_5": {
                "tableId": 8,
                "name": "",
                "columns": [
                    "email"
                ],
                "algorithm": null,
                "type": "primary",
                "on": null,
                "references": null,
                "onUpdate": null,
                "onDelete": null,
                "schemaState": {
                    "name": "",
                    "columns": [
                        "email"
                    ],
                    "algorithm": null,
                    "type": "primary",
                    "on": null,
                    "references": null,
                    "onUpdate": null,
                    "onDelete": null
                },
                "id": 5,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "item_6": {
                "tableId": 9,
                "name": "services_admin_id_foreign",
                "columns": [
                    "admin_id"
                ],
                "algorithm": null,
                "type": "foreign",
                "on": "users",
                "references": "id",
                "onUpdate": "restrict",
                "onDelete": "restrict",
                "schemaState": {
                    "name": "services_admin_id_foreign",
                    "columns": [
                        "admin_id"
                    ],
                    "algorithm": null,
                    "type": "foreign",
                    "on": "users",
                    "references": "id",
                    "onUpdate": "restrict",
                    "onDelete": "restrict"
                },
                "id": 6,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01",
                "onTableId": 12,
                "referencesColumnId": 61
            },
            "item_7": {
                "tableId": 9,
                "name": "services_status_id_foreign",
                "columns": [
                    "status_id"
                ],
                "algorithm": null,
                "type": "foreign",
                "on": "statuses",
                "references": "id",
                "onUpdate": "restrict",
                "onDelete": "restrict",
                "schemaState": {
                    "name": "services_status_id_foreign",
                    "columns": [
                        "status_id"
                    ],
                    "algorithm": null,
                    "type": "foreign",
                    "on": "statuses",
                    "references": "id",
                    "onUpdate": "restrict",
                    "onDelete": "restrict"
                },
                "id": 7,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01",
                "onTableId": 11,
                "referencesColumnId": 57
            },
            "item_8": {
                "tableId": 9,
                "name": "services_vozilo_id_foreign",
                "columns": [
                    "vozilo_id"
                ],
                "algorithm": null,
                "type": "foreign",
                "on": "vehicles",
                "references": "id",
                "onUpdate": "restrict",
                "onDelete": "restrict",
                "schemaState": {
                    "name": "services_vozilo_id_foreign",
                    "columns": [
                        "vozilo_id"
                    ],
                    "algorithm": null,
                    "type": "foreign",
                    "on": "vehicles",
                    "references": "id",
                    "onUpdate": "restrict",
                    "onDelete": "restrict"
                },
                "id": 8,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01",
                "onTableId": 13,
                "referencesColumnId": 72
            },
            "item_9": {
                "tableId": 9,
                "name": "services_zaposleni_id_foreign",
                "columns": [
                    "zaposleni_id"
                ],
                "algorithm": null,
                "type": "foreign",
                "on": "users",
                "references": "id",
                "onUpdate": "restrict",
                "onDelete": "restrict",
                "schemaState": {
                    "name": "services_zaposleni_id_foreign",
                    "columns": [
                        "zaposleni_id"
                    ],
                    "algorithm": null,
                    "type": "foreign",
                    "on": "users",
                    "references": "id",
                    "onUpdate": "restrict",
                    "onDelete": "restrict"
                },
                "id": 9,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01",
                "onTableId": 12,
                "referencesColumnId": 61
            },
            "item_10": {
                "tableId": 10,
                "name": "",
                "columns": [
                    "id"
                ],
                "algorithm": null,
                "type": "primary",
                "on": null,
                "references": null,
                "onUpdate": null,
                "onDelete": null,
                "schemaState": {
                    "name": "",
                    "columns": [
                        "id"
                    ],
                    "algorithm": null,
                    "type": "primary",
                    "on": null,
                    "references": null,
                    "onUpdate": null,
                    "onDelete": null
                },
                "id": 10,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "item_11": {
                "tableId": 13,
                "name": "vehicles_klijent_id_foreign",
                "columns": [
                    "klijent_id"
                ],
                "algorithm": null,
                "type": "foreign",
                "on": "users",
                "references": "id",
                "onUpdate": "restrict",
                "onDelete": "restrict",
                "schemaState": {
                    "name": "vehicles_klijent_id_foreign",
                    "columns": [
                        "klijent_id"
                    ],
                    "algorithm": null,
                    "type": "foreign",
                    "on": "users",
                    "references": "id",
                    "onUpdate": "restrict",
                    "onDelete": "restrict"
                },
                "id": 11,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01",
                "onTableId": 12,
                "referencesColumnId": 61
            }
        },
        "index_column": {
            "item_1": {
                "indexId": 1,
                "columnId": 2,
                "id": 1,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "__tableData": {
                "count": 11,
                "lastPrimaryKey": 11,
                "index": {
                    "1": {
                        "hasMany": {}
                    },
                    "2": {
                        "hasMany": {}
                    },
                    "3": {
                        "hasMany": {}
                    },
                    "4": {
                        "hasMany": {}
                    },
                    "5": {
                        "hasMany": {}
                    },
                    "6": {
                        "hasMany": {}
                    },
                    "7": {
                        "hasMany": {}
                    },
                    "8": {
                        "hasMany": {}
                    },
                    "9": {
                        "hasMany": {}
                    },
                    "10": {
                        "hasMany": {}
                    },
                    "11": {
                        "hasMany": {}
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            },
            "item_2": {
                "indexId": 2,
                "columnId": 6,
                "id": 2,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "item_3": {
                "indexId": 3,
                "columnId": 9,
                "id": 3,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "item_4": {
                "indexId": 4,
                "columnId": 19,
                "id": 4,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "item_5": {
                "indexId": 5,
                "columnId": 39,
                "id": 5,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "item_6": {
                "indexId": 6,
                "columnId": 45,
                "id": 6,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "item_7": {
                "indexId": 7,
                "columnId": 46,
                "id": 7,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "item_8": {
                "indexId": 8,
                "columnId": 43,
                "id": 8,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "item_9": {
                "indexId": 9,
                "columnId": 44,
                "id": 9,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "item_10": {
                "indexId": 10,
                "columnId": 51,
                "id": 10,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "item_11": {
                "indexId": 11,
                "columnId": 73,
                "id": 11,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            }
        },
        "models": {
            "item_1": {
                "projectId": 1,
                "name": "Bill",
                "fileName": "Bill.php",
                "tableName": "bills",
                "class": "App\\Models\\Bill",
                "namespace": "App\\Models",
                "path": "Models\\Bill.php",
                "casts": {
                    "id": "integer",
                    "usluga_id": "integer",
                    "cena": "float"
                },
                "fillable": [
                    "usluga_id",
                    "cena"
                ],
                "guarded": [
                    "*"
                ],
                "dates": [],
                "hidden": [],
                "appends": [],
                "methods": [],
                "createdFromInterface": false,
                "parentClass": "Illuminate\\Database\\Eloquent\\Model",
                "interfaces": [],
                "traits": [
                    "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                ],
                "allImports": [
                    "Illuminate\\Database\\Eloquent\\Factories\\HasFactory",
                    "Illuminate\\Database\\Eloquent\\Model",
                    "Illuminate\\Database\\Eloquent\\Relations\\BelongsTo"
                ],
                "hasGuarded": false,
                "hasFillable": true,
                "hasTimestamps": true,
                "hasSoftDeletes": false,
                "isAuthenticatable": false,
                "schemaState": {
                    "name": "Bill",
                    "fileName": "Bill.php",
                    "tableName": "bills",
                    "class": "App\\Models\\Bill",
                    "namespace": "App\\Models",
                    "path": "Models\\Bill.php",
                    "casts": {
                        "id": "integer",
                        "usluga_id": "integer",
                        "cena": "float"
                    },
                    "fillable": [
                        "usluga_id",
                        "cena"
                    ],
                    "guarded": [
                        "*"
                    ],
                    "dates": [],
                    "hidden": [],
                    "appends": [],
                    "methods": [],
                    "parentClass": "Illuminate\\Database\\Eloquent\\Model",
                    "interfaces": [],
                    "traits": [
                        "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                    ],
                    "allImports": [
                        "Illuminate\\Database\\Eloquent\\Factories\\HasFactory",
                        "Illuminate\\Database\\Eloquent\\Model",
                        "Illuminate\\Database\\Eloquent\\Relations\\BelongsTo"
                    ],
                    "hasGuarded": false,
                    "hasFillable": true,
                    "hasTimestamps": true,
                    "hasSoftDeletes": false,
                    "isAuthenticatable": false
                },
                "id": 1,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 23:12:34",
                "plural": "Bills",
                "pluralAndSingularAreSame": false,
                "tableId": 1,
                "callSeeder": true,
                "seederQuantity": 5,
                "attributesComments": false,
                "methodsComments": false,
                "removed": false
            },
            "__tableData": {
                "count": 5,
                "lastPrimaryKey": 5,
                "index": {
                    "1": {
                        "hasMany": {
                            "fillable_model_column.modelId": [
                                1,
                                2
                            ],
                            "casts_model_column.modelId": [
                                1,
                                2,
                                3
                            ],
                            "relationships.modelId": [
                                1
                            ],
                            "cruds.modelId": [
                                2
                            ]
                        }
                    },
                    "2": {
                        "hasMany": {
                            "fillable_model_column.modelId": [
                                3,
                                4,
                                5,
                                6,
                                7,
                                8
                            ],
                            "casts_model_column.modelId": [
                                4,
                                5,
                                6,
                                7,
                                8
                            ],
                            "relationships.modelId": [
                                2,
                                3,
                                4,
                                5
                            ],
                            "relationships.relatedModelId": [
                                1
                            ],
                            "cruds.modelId": [
                                3
                            ]
                        }
                    },
                    "3": {
                        "hasMany": {
                            "fillable_model_column.modelId": [
                                9
                            ],
                            "casts_model_column.modelId": [
                                9
                            ],
                            "relationships.relatedModelId": [
                                5
                            ],
                            "cruds.modelId": [
                                5
                            ]
                        }
                    },
                    "4": {
                        "hasMany": {
                            "fillable_model_column.modelId": [
                                10,
                                11
                            ],
                            "hidden_model_column.modelId": [
                                1,
                                2
                            ],
                            "casts_model_column.modelId": [
                                10,
                                11
                            ],
                            "relationships.relatedModelId": [
                                3,
                                4,
                                6
                            ],
                            "cruds.modelId": [
                                1
                            ]
                        }
                    },
                    "5": {
                        "hasMany": {
                            "fillable_model_column.modelId": [
                                12,
                                13,
                                14,
                                15,
                                16
                            ],
                            "casts_model_column.modelId": [
                                12,
                                13
                            ],
                            "relationships.modelId": [
                                6
                            ],
                            "relationships.relatedModelId": [
                                2
                            ],
                            "cruds.modelId": [
                                4
                            ]
                        }
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            },
            "item_2": {
                "projectId": 1,
                "name": "Service",
                "fileName": "Service.php",
                "tableName": "services",
                "class": "App\\Models\\Service",
                "namespace": "App\\Models",
                "path": "Models\\Service.php",
                "casts": {
                    "id": "integer",
                    "vozilo_id": "integer",
                    "zaposleni_id": "integer",
                    "admin_id": "integer",
                    "status_id": "integer"
                },
                "fillable": [
                    "vozilo_id",
                    "zaposleni_id",
                    "admin_id",
                    "status_id",
                    "naziv",
                    "opis"
                ],
                "guarded": [
                    "*"
                ],
                "dates": [],
                "hidden": [],
                "appends": [],
                "methods": [
                    {
                        "name": "racuni",
                        "content": "    public function racuni(): HasMany\r\n    {\r\n        return $this->HasMany(Bill::class);\r\n    }\r\n"
                    }
                ],
                "createdFromInterface": false,
                "parentClass": "Illuminate\\Database\\Eloquent\\Model",
                "interfaces": [],
                "traits": [
                    "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                ],
                "allImports": [
                    "Illuminate\\Database\\Eloquent\\Factories\\HasFactory",
                    "Illuminate\\Database\\Eloquent\\Model",
                    "Illuminate\\Database\\Eloquent\\Relations\\BelongsTo",
                    "Illuminate\\Database\\Eloquent\\Relations\\HasMany"
                ],
                "hasGuarded": false,
                "hasFillable": true,
                "hasTimestamps": true,
                "hasSoftDeletes": false,
                "isAuthenticatable": false,
                "schemaState": {
                    "name": "Service",
                    "fileName": "Service.php",
                    "tableName": "services",
                    "class": "App\\Models\\Service",
                    "namespace": "App\\Models",
                    "path": "Models\\Service.php",
                    "casts": {
                        "id": "integer",
                        "vozilo_id": "integer",
                        "zaposleni_id": "integer",
                        "admin_id": "integer",
                        "status_id": "integer"
                    },
                    "fillable": [
                        "vozilo_id",
                        "zaposleni_id",
                        "admin_id",
                        "status_id",
                        "naziv",
                        "opis"
                    ],
                    "guarded": [
                        "*"
                    ],
                    "dates": [],
                    "hidden": [],
                    "appends": [],
                    "methods": [
                        {
                            "name": "racuni",
                            "content": "    public function racuni(): HasMany\r\n    {\r\n        return $this->HasMany(Bill::class);\r\n    }\r\n"
                        }
                    ],
                    "parentClass": "Illuminate\\Database\\Eloquent\\Model",
                    "interfaces": [],
                    "traits": [
                        "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                    ],
                    "allImports": [
                        "Illuminate\\Database\\Eloquent\\Factories\\HasFactory",
                        "Illuminate\\Database\\Eloquent\\Model",
                        "Illuminate\\Database\\Eloquent\\Relations\\BelongsTo",
                        "Illuminate\\Database\\Eloquent\\Relations\\HasMany"
                    ],
                    "hasGuarded": false,
                    "hasFillable": true,
                    "hasTimestamps": true,
                    "hasSoftDeletes": false,
                    "isAuthenticatable": false
                },
                "id": 2,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 23:12:34",
                "plural": "Services",
                "pluralAndSingularAreSame": false,
                "tableId": 9,
                "callSeeder": true,
                "seederQuantity": 5,
                "attributesComments": false,
                "methodsComments": false,
                "removed": false
            },
            "item_3": {
                "projectId": 1,
                "name": "Status",
                "fileName": "Status.php",
                "tableName": "statuses",
                "class": "App\\Models\\Status",
                "namespace": "App\\Models",
                "path": "Models\\Status.php",
                "casts": {
                    "id": "integer"
                },
                "fillable": [
                    "naziv"
                ],
                "guarded": [
                    "*"
                ],
                "dates": [],
                "hidden": [],
                "appends": [],
                "methods": [
                    {
                        "name": "usluge",
                        "content": "    public function usluge(): HasMany\r\n    {\r\n        return $this->HasMany(Service::class);\r\n    }\r\n"
                    }
                ],
                "createdFromInterface": false,
                "parentClass": "Illuminate\\Database\\Eloquent\\Model",
                "interfaces": [],
                "traits": [
                    "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                ],
                "allImports": [
                    "Illuminate\\Database\\Eloquent\\Factories\\HasFactory",
                    "Illuminate\\Database\\Eloquent\\Model",
                    "Illuminate\\Database\\Eloquent\\Relations\\HasMany"
                ],
                "hasGuarded": false,
                "hasFillable": true,
                "hasTimestamps": true,
                "hasSoftDeletes": false,
                "isAuthenticatable": false,
                "schemaState": {
                    "name": "Status",
                    "fileName": "Status.php",
                    "tableName": "statuses",
                    "class": "App\\Models\\Status",
                    "namespace": "App\\Models",
                    "path": "Models\\Status.php",
                    "casts": {
                        "id": "integer"
                    },
                    "fillable": [
                        "naziv"
                    ],
                    "guarded": [
                        "*"
                    ],
                    "dates": [],
                    "hidden": [],
                    "appends": [],
                    "methods": [
                        {
                            "name": "usluge",
                            "content": "    public function usluge(): HasMany\r\n    {\r\n        return $this->HasMany(Service::class);\r\n    }\r\n"
                        }
                    ],
                    "parentClass": "Illuminate\\Database\\Eloquent\\Model",
                    "interfaces": [],
                    "traits": [
                        "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                    ],
                    "allImports": [
                        "Illuminate\\Database\\Eloquent\\Factories\\HasFactory",
                        "Illuminate\\Database\\Eloquent\\Model",
                        "Illuminate\\Database\\Eloquent\\Relations\\HasMany"
                    ],
                    "hasGuarded": false,
                    "hasFillable": true,
                    "hasTimestamps": true,
                    "hasSoftDeletes": false,
                    "isAuthenticatable": false
                },
                "id": 3,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 23:12:35",
                "plural": "Statuses",
                "pluralAndSingularAreSame": false,
                "tableId": 11,
                "callSeeder": true,
                "seederQuantity": 5,
                "attributesComments": false,
                "methodsComments": false,
                "removed": false
            },
            "item_4": {
                "projectId": 1,
                "name": "User",
                "fileName": "User.php",
                "tableName": "users",
                "class": "App\\Models\\User",
                "namespace": "App\\Models",
                "path": "Models\\User.php",
                "casts": {
                    "email_verified_at": "datetime",
                    "password": "hashed"
                },
                "fillable": [
                    "name",
                    "email",
                    "password"
                ],
                "guarded": [
                    "*"
                ],
                "dates": [],
                "hidden": [
                    "password",
                    "remember_token"
                ],
                "appends": [],
                "methods": [
                    {
                        "name": "vozila",
                        "content": "    public function vozila(): HasMany\r\n    {\r\n        return $this->HasMany(Vehicle::class);\r\n    }\r\n"
                    },
                    {
                        "name": "uslugeKaoAdmin",
                        "content": "    public function uslugeKaoAdmin(): HasMany\r\n    {\r\n        return $this->HasMany(Service::class);\r\n    }\r\n"
                    },
                    {
                        "name": "uslugeKaoZaposleni",
                        "content": "    public function uslugeKaoZaposleni(): HasMany\r\n    {\r\n        return $this->HasMany(Service::class);\r\n    }\r\n"
                    }
                ],
                "createdFromInterface": false,
                "parentClass": "Illuminate\\Foundation\\Auth\\User as Authenticatable",
                "interfaces": [],
                "traits": [
                    "Illuminate\\Database\\Eloquent\\Factories\\HasFactory",
                    "Illuminate\\Notifications\\Notifiable"
                ],
                "allImports": [
                    "Illuminate\\Contracts\\Auth\\MustVerifyEmail",
                    "Illuminate\\Database\\Eloquent\\Factories\\HasFactory",
                    "Illuminate\\Foundation\\Auth\\User as Authenticatable",
                    "Illuminate\\Notifications\\Notifiable",
                    "Illuminate\\Database\\Eloquent\\Relations\\HasMany"
                ],
                "hasGuarded": false,
                "hasFillable": true,
                "hasTimestamps": true,
                "hasSoftDeletes": false,
                "isAuthenticatable": true,
                "schemaState": {
                    "name": "User",
                    "fileName": "User.php",
                    "tableName": "users",
                    "class": "App\\Models\\User",
                    "namespace": "App\\Models",
                    "path": "Models\\User.php",
                    "casts": {
                        "email_verified_at": "datetime",
                        "password": "hashed"
                    },
                    "fillable": [
                        "name",
                        "email",
                        "password"
                    ],
                    "guarded": [
                        "*"
                    ],
                    "dates": [],
                    "hidden": [
                        "password",
                        "remember_token"
                    ],
                    "appends": [],
                    "methods": [
                        {
                            "name": "vozila",
                            "content": "    public function vozila(): HasMany\r\n    {\r\n        return $this->HasMany(Vehicle::class);\r\n    }\r\n"
                        },
                        {
                            "name": "uslugeKaoAdmin",
                            "content": "    public function uslugeKaoAdmin(): HasMany\r\n    {\r\n        return $this->HasMany(Service::class);\r\n    }\r\n"
                        },
                        {
                            "name": "uslugeKaoZaposleni",
                            "content": "    public function uslugeKaoZaposleni(): HasMany\r\n    {\r\n        return $this->HasMany(Service::class);\r\n    }\r\n"
                        }
                    ],
                    "parentClass": "Illuminate\\Foundation\\Auth\\User as Authenticatable",
                    "interfaces": [],
                    "traits": [
                        "Illuminate\\Database\\Eloquent\\Factories\\HasFactory",
                        "Illuminate\\Notifications\\Notifiable"
                    ],
                    "allImports": [
                        "Illuminate\\Contracts\\Auth\\MustVerifyEmail",
                        "Illuminate\\Database\\Eloquent\\Factories\\HasFactory",
                        "Illuminate\\Foundation\\Auth\\User as Authenticatable",
                        "Illuminate\\Notifications\\Notifiable",
                        "Illuminate\\Database\\Eloquent\\Relations\\HasMany"
                    ],
                    "hasGuarded": false,
                    "hasFillable": true,
                    "hasTimestamps": true,
                    "hasSoftDeletes": false,
                    "isAuthenticatable": true
                },
                "id": 4,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 23:12:35",
                "plural": "Users",
                "pluralAndSingularAreSame": false,
                "tableId": 12,
                "callSeeder": false,
                "seederQuantity": 5,
                "attributesComments": true,
                "methodsComments": true,
                "removed": false
            },
            "item_5": {
                "projectId": 1,
                "name": "Vehicle",
                "fileName": "Vehicle.php",
                "tableName": "vehicles",
                "class": "App\\Models\\Vehicle",
                "namespace": "App\\Models",
                "path": "Models\\Vehicle.php",
                "casts": {
                    "id": "integer",
                    "klijent_id": "integer"
                },
                "fillable": [
                    "klijent_id",
                    "registarski_broj",
                    "marka",
                    "model",
                    "godina_proizvodnje"
                ],
                "guarded": [
                    "*"
                ],
                "dates": [],
                "hidden": [],
                "appends": [],
                "methods": [],
                "createdFromInterface": false,
                "parentClass": "Illuminate\\Database\\Eloquent\\Model",
                "interfaces": [],
                "traits": [
                    "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                ],
                "allImports": [
                    "Illuminate\\Database\\Eloquent\\Factories\\HasFactory",
                    "Illuminate\\Database\\Eloquent\\Model",
                    "Illuminate\\Database\\Eloquent\\Relations\\BelongsTo"
                ],
                "hasGuarded": false,
                "hasFillable": true,
                "hasTimestamps": true,
                "hasSoftDeletes": false,
                "isAuthenticatable": false,
                "schemaState": {
                    "name": "Vehicle",
                    "fileName": "Vehicle.php",
                    "tableName": "vehicles",
                    "class": "App\\Models\\Vehicle",
                    "namespace": "App\\Models",
                    "path": "Models\\Vehicle.php",
                    "casts": {
                        "id": "integer",
                        "klijent_id": "integer"
                    },
                    "fillable": [
                        "klijent_id",
                        "registarski_broj",
                        "marka",
                        "model",
                        "godina_proizvodnje"
                    ],
                    "guarded": [
                        "*"
                    ],
                    "dates": [],
                    "hidden": [],
                    "appends": [],
                    "methods": [],
                    "parentClass": "Illuminate\\Database\\Eloquent\\Model",
                    "interfaces": [],
                    "traits": [
                        "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                    ],
                    "allImports": [
                        "Illuminate\\Database\\Eloquent\\Factories\\HasFactory",
                        "Illuminate\\Database\\Eloquent\\Model",
                        "Illuminate\\Database\\Eloquent\\Relations\\BelongsTo"
                    ],
                    "hasGuarded": false,
                    "hasFillable": true,
                    "hasTimestamps": true,
                    "hasSoftDeletes": false,
                    "isAuthenticatable": false
                },
                "id": 5,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 23:12:35",
                "plural": "Vehicles",
                "pluralAndSingularAreSame": false,
                "tableId": 13,
                "callSeeder": true,
                "seederQuantity": 5,
                "attributesComments": false,
                "methodsComments": false,
                "removed": false
            }
        },
        "fillable_model_column": {
            "item_1": {
                "modelId": 1,
                "columnId": 2,
                "id": 1,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "__tableData": {
                "count": 16,
                "lastPrimaryKey": 16,
                "index": {
                    "1": {
                        "hasMany": {}
                    },
                    "2": {
                        "hasMany": {}
                    },
                    "3": {
                        "hasMany": {}
                    },
                    "4": {
                        "hasMany": {}
                    },
                    "5": {
                        "hasMany": {}
                    },
                    "6": {
                        "hasMany": {}
                    },
                    "7": {
                        "hasMany": {}
                    },
                    "8": {
                        "hasMany": {}
                    },
                    "9": {
                        "hasMany": {}
                    },
                    "10": {
                        "hasMany": {}
                    },
                    "11": {
                        "hasMany": {}
                    },
                    "12": {
                        "hasMany": {}
                    },
                    "13": {
                        "hasMany": {}
                    },
                    "14": {
                        "hasMany": {}
                    },
                    "15": {
                        "hasMany": {}
                    },
                    "16": {
                        "hasMany": {}
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            },
            "item_2": {
                "modelId": 1,
                "columnId": 3,
                "id": 2,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "item_3": {
                "modelId": 2,
                "columnId": 43,
                "id": 3,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "item_4": {
                "modelId": 2,
                "columnId": 44,
                "id": 4,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "item_5": {
                "modelId": 2,
                "columnId": 45,
                "id": 5,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "item_6": {
                "modelId": 2,
                "columnId": 46,
                "id": 6,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "item_7": {
                "modelId": 2,
                "columnId": 47,
                "id": 7,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "item_8": {
                "modelId": 2,
                "columnId": 48,
                "id": 8,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "item_9": {
                "modelId": 3,
                "columnId": 58,
                "id": 9,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "item_10": {
                "modelId": 4,
                "columnId": 64,
                "id": 10,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "item_11": {
                "modelId": 4,
                "columnId": 66,
                "id": 11,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "item_12": {
                "modelId": 5,
                "columnId": 73,
                "id": 12,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "item_13": {
                "modelId": 5,
                "columnId": 74,
                "id": 13,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "item_14": {
                "modelId": 5,
                "columnId": 75,
                "id": 14,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "item_15": {
                "modelId": 5,
                "columnId": 76,
                "id": 15,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "item_16": {
                "modelId": 5,
                "columnId": 77,
                "id": 16,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            }
        },
        "casts_model_column": {
            "item_1": {
                "modelId": 1,
                "columnId": 1,
                "id": 1,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01",
                "type": "integer"
            },
            "__tableData": {
                "count": 13,
                "lastPrimaryKey": 13,
                "index": {
                    "1": {
                        "hasMany": {}
                    },
                    "2": {
                        "hasMany": {}
                    },
                    "3": {
                        "hasMany": {}
                    },
                    "4": {
                        "hasMany": {}
                    },
                    "5": {
                        "hasMany": {}
                    },
                    "6": {
                        "hasMany": {}
                    },
                    "7": {
                        "hasMany": {}
                    },
                    "8": {
                        "hasMany": {}
                    },
                    "9": {
                        "hasMany": {}
                    },
                    "10": {
                        "hasMany": {}
                    },
                    "11": {
                        "hasMany": {}
                    },
                    "12": {
                        "hasMany": {}
                    },
                    "13": {
                        "hasMany": {}
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            },
            "item_2": {
                "modelId": 1,
                "columnId": 2,
                "id": 2,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01",
                "type": "integer"
            },
            "item_3": {
                "modelId": 1,
                "columnId": 3,
                "id": 3,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01",
                "type": "float"
            },
            "item_4": {
                "modelId": 2,
                "columnId": 42,
                "id": 4,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01",
                "type": "integer"
            },
            "item_5": {
                "modelId": 2,
                "columnId": 43,
                "id": 5,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01",
                "type": "integer"
            },
            "item_6": {
                "modelId": 2,
                "columnId": 44,
                "id": 6,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01",
                "type": "integer"
            },
            "item_7": {
                "modelId": 2,
                "columnId": 45,
                "id": 7,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01",
                "type": "integer"
            },
            "item_8": {
                "modelId": 2,
                "columnId": 46,
                "id": 8,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01",
                "type": "integer"
            },
            "item_9": {
                "modelId": 3,
                "columnId": 57,
                "id": 9,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01",
                "type": "integer"
            },
            "item_10": {
                "modelId": 4,
                "columnId": 65,
                "id": 10,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01",
                "type": "datetime"
            },
            "item_11": {
                "modelId": 4,
                "columnId": 66,
                "id": 11,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01",
                "type": "hashed"
            },
            "item_12": {
                "modelId": 5,
                "columnId": 72,
                "id": 12,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01",
                "type": "integer"
            },
            "item_13": {
                "modelId": 5,
                "columnId": 73,
                "id": 13,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01",
                "type": "integer"
            }
        },
        "relationships": {
            "item_1": {
                "modelId": 1,
                "projectId": 1,
                "name": "usluga",
                "type": "BelongsTo",
                "relatedTableName": "services",
                "relatedModelName": "App\\Models\\Service",
                "parentTableName": "bills",
                "parentModelName": "App\\Models\\Bill",
                "foreignKeyName": "usluga_id",
                "localKeyName": null,
                "ownerKeyName": "id",
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "usluga",
                    "type": "BelongsTo",
                    "relatedTableName": "services",
                    "relatedModelName": "App\\Models\\Service",
                    "parentTableName": "bills",
                    "parentModelName": "App\\Models\\Bill",
                    "foreignKeyName": "usluga_id",
                    "localKeyName": null,
                    "ownerKeyName": "id",
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                },
                "id": 1,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 23:12:35",
                "relatedModelId": 2,
                "parentKeyId": 42,
                "foreignKeyId": 2,
                "removed": false
            },
            "__tableData": {
                "count": 6,
                "lastPrimaryKey": 6,
                "index": {
                    "1": {
                        "hasMany": {
                            "inputs.relationshipId": [
                                7
                            ]
                        }
                    },
                    "2": {
                        "hasMany": {
                            "inputs.relationshipId": [
                                9
                            ]
                        }
                    },
                    "3": {
                        "hasMany": {
                            "inputs.relationshipId": [
                                10
                            ]
                        }
                    },
                    "4": {
                        "hasMany": {
                            "inputs.relationshipId": [
                                11
                            ]
                        }
                    },
                    "5": {
                        "hasMany": {
                            "inputs.relationshipId": [
                                12
                            ]
                        }
                    },
                    "6": {
                        "hasMany": {
                            "inputs.relationshipId": [
                                15
                            ]
                        }
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            },
            "item_2": {
                "modelId": 2,
                "projectId": 1,
                "name": "vozilo",
                "type": "BelongsTo",
                "relatedTableName": "vehicles",
                "relatedModelName": "App\\Models\\Vehicle",
                "parentTableName": "services",
                "parentModelName": "App\\Models\\Service",
                "foreignKeyName": "vozilo_id",
                "localKeyName": null,
                "ownerKeyName": "id",
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "vozilo",
                    "type": "BelongsTo",
                    "relatedTableName": "vehicles",
                    "relatedModelName": "App\\Models\\Vehicle",
                    "parentTableName": "services",
                    "parentModelName": "App\\Models\\Service",
                    "foreignKeyName": "vozilo_id",
                    "localKeyName": null,
                    "ownerKeyName": "id",
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                },
                "id": 2,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 23:12:35",
                "relatedModelId": 5,
                "parentKeyId": 72,
                "foreignKeyId": 43,
                "removed": false
            },
            "item_3": {
                "modelId": 2,
                "projectId": 1,
                "name": "zaposleni",
                "type": "BelongsTo",
                "relatedTableName": "users",
                "relatedModelName": "App\\Models\\User",
                "parentTableName": "services",
                "parentModelName": "App\\Models\\Service",
                "foreignKeyName": "zaposleni_id",
                "localKeyName": null,
                "ownerKeyName": "id",
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "zaposleni",
                    "type": "BelongsTo",
                    "relatedTableName": "users",
                    "relatedModelName": "App\\Models\\User",
                    "parentTableName": "services",
                    "parentModelName": "App\\Models\\Service",
                    "foreignKeyName": "zaposleni_id",
                    "localKeyName": null,
                    "ownerKeyName": "id",
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                },
                "id": 3,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 23:12:35",
                "relatedModelId": 4,
                "parentKeyId": 61,
                "foreignKeyId": 44,
                "removed": false
            },
            "item_4": {
                "modelId": 2,
                "projectId": 1,
                "name": "admin",
                "type": "BelongsTo",
                "relatedTableName": "users",
                "relatedModelName": "App\\Models\\User",
                "parentTableName": "services",
                "parentModelName": "App\\Models\\Service",
                "foreignKeyName": "admin_id",
                "localKeyName": null,
                "ownerKeyName": "id",
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "admin",
                    "type": "BelongsTo",
                    "relatedTableName": "users",
                    "relatedModelName": "App\\Models\\User",
                    "parentTableName": "services",
                    "parentModelName": "App\\Models\\Service",
                    "foreignKeyName": "admin_id",
                    "localKeyName": null,
                    "ownerKeyName": "id",
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                },
                "id": 4,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 23:12:35",
                "relatedModelId": 4,
                "parentKeyId": 61,
                "foreignKeyId": 45,
                "removed": false
            },
            "item_5": {
                "modelId": 2,
                "projectId": 1,
                "name": "status",
                "type": "BelongsTo",
                "relatedTableName": "statuses",
                "relatedModelName": "App\\Models\\Status",
                "parentTableName": "services",
                "parentModelName": "App\\Models\\Service",
                "foreignKeyName": "status_id",
                "localKeyName": null,
                "ownerKeyName": "id",
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "status",
                    "type": "BelongsTo",
                    "relatedTableName": "statuses",
                    "relatedModelName": "App\\Models\\Status",
                    "parentTableName": "services",
                    "parentModelName": "App\\Models\\Service",
                    "foreignKeyName": "status_id",
                    "localKeyName": null,
                    "ownerKeyName": "id",
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                },
                "id": 5,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 23:12:35",
                "relatedModelId": 3,
                "parentKeyId": 57,
                "foreignKeyId": 46,
                "removed": false
            },
            "item_6": {
                "modelId": 5,
                "projectId": 1,
                "name": "klijent",
                "type": "BelongsTo",
                "relatedTableName": "users",
                "relatedModelName": "App\\Models\\User",
                "parentTableName": "vehicles",
                "parentModelName": "App\\Models\\Vehicle",
                "foreignKeyName": "klijent_id",
                "localKeyName": null,
                "ownerKeyName": "id",
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "klijent",
                    "type": "BelongsTo",
                    "relatedTableName": "users",
                    "relatedModelName": "App\\Models\\User",
                    "parentTableName": "vehicles",
                    "parentModelName": "App\\Models\\Vehicle",
                    "foreignKeyName": "klijent_id",
                    "localKeyName": null,
                    "ownerKeyName": "id",
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                },
                "id": 6,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 23:12:35",
                "relatedModelId": 4,
                "parentKeyId": 61,
                "foreignKeyId": 73,
                "removed": false
            }
        },
        "hidden_model_column": {
            "item_1": {
                "modelId": 4,
                "columnId": 66,
                "id": 1,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "__tableData": {
                "count": 2,
                "lastPrimaryKey": 2,
                "index": {
                    "1": {
                        "hasMany": {}
                    },
                    "2": {
                        "hasMany": {}
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            },
            "item_2": {
                "modelId": 4,
                "columnId": 69,
                "id": 2,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            }
        },
        "app_sections": {
            "item_1": {
                "name": "Dashboard",
                "routePrefix": "dashboard",
                "routeBasePath": "dashboard",
                "projectId": 1,
                "requiresAuth": true,
                "id": 1,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "__tableData": {
                "count": 3,
                "lastPrimaryKey": 4,
                "index": {
                    "1": {
                        "hasMany": {
                            "cruds.sectionId": [
                                1,
                                2,
                                3,
                                4,
                                5
                            ]
                        }
                    },
                    "3": {
                        "hasMany": {}
                    },
                    "4": {
                        "hasMany": {}
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            },
            "item_3": {
                "name": "Site",
                "routePrefix": "",
                "routeBasePath": "",
                "projectId": 1,
                "requiresAuth": false,
                "id": 3,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            },
            "item_4": {
                "name": "Filament Panel",
                "routePrefix": "panel",
                "routeBasePath": "panel",
                "projectId": 1,
                "requiresAuth": false,
                "id": 4,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            }
        },
        "schema_sections": {
            "item_1": {
                "name": "App",
                "scrollX": 23989,
                "scrollY": 24581,
                "zoom": 80,
                "projectId": 1,
                "id": 1,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 23:07:38"
            },
            "__tableData": {
                "count": 2,
                "lastPrimaryKey": 2,
                "index": {
                    "1": {
                        "hasMany": {
                            "tables.sectionId": [
                                1,
                                9,
                                11,
                                12,
                                13
                            ]
                        }
                    },
                    "2": {
                        "hasMany": {
                            "tables.sectionId": [
                                2,
                                3,
                                4,
                                5,
                                6,
                                7,
                                8,
                                10
                            ]
                        }
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            },
            "item_2": {
                "name": "Laravel",
                "scrollX": 0,
                "scrollY": 0,
                "zoom": 100,
                "projectId": 1,
                "id": 2,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01"
            }
        },
        "navs": {
            "item_1": {
                "projectId": 1,
                "name": "navigation.home",
                "id": 1,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01",
                "tag": "home"
            },
            "__tableData": {
                "count": 7,
                "lastPrimaryKey": 7,
                "index": {
                    "1": {
                        "hasMany": {}
                    },
                    "2": {
                        "hasMany": {
                            "navs.parentNavId": [
                                3,
                                4,
                                5,
                                6,
                                7
                            ]
                        }
                    },
                    "3": {
                        "hasMany": {}
                    },
                    "4": {
                        "hasMany": {}
                    },
                    "5": {
                        "hasMany": {}
                    },
                    "6": {
                        "hasMany": {}
                    },
                    "7": {
                        "hasMany": {}
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            },
            "item_2": {
                "projectId": 1,
                "name": "navigation.apps",
                "id": 2,
                "createdAt": "2025-06-28 22:59:01",
                "updatedAt": "2025-06-28 22:59:01",
                "tag": "apps"
            },
            "item_3": {
                "projectId": 1,
                "navigableType": "Crud",
                "navigableId": 1,
                "name": "navigation.users",
                "id": 3,
                "createdAt": "2025-06-28 23:13:53",
                "updatedAt": "2025-06-28 23:13:53",
                "parentNavId": 2
            },
            "item_4": {
                "projectId": 1,
                "navigableType": "Crud",
                "navigableId": 2,
                "name": "navigation.bills",
                "id": 4,
                "createdAt": "2025-06-28 23:14:31",
                "updatedAt": "2025-06-28 23:14:31",
                "parentNavId": 2
            },
            "item_5": {
                "projectId": 1,
                "navigableType": "Crud",
                "navigableId": 3,
                "name": "navigation.services",
                "id": 5,
                "createdAt": "2025-06-28 23:14:36",
                "updatedAt": "2025-06-28 23:14:36",
                "parentNavId": 2
            },
            "item_6": {
                "projectId": 1,
                "navigableType": "Crud",
                "navigableId": 4,
                "name": "navigation.vehicles",
                "id": 6,
                "createdAt": "2025-06-28 23:14:40",
                "updatedAt": "2025-06-28 23:14:40",
                "parentNavId": 2
            },
            "item_7": {
                "projectId": 1,
                "navigableType": "Crud",
                "navigableId": 5,
                "name": "navigation.statuses",
                "id": 7,
                "createdAt": "2025-06-28 23:14:49",
                "updatedAt": "2025-06-28 23:14:49",
                "parentNavId": 2
            }
        },
        "renderable_files": {
            "item_1": {
                "path": "routes",
                "name": "app.php",
                "fullPath": "routes/app.php",
                "template": "routes/Routes.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 1,
                "createdAt": "2025-06-28 23:12:30",
                "updatedAt": "2025-06-28 23:19:21",
                "content": "<?php\n\nuse Illuminate\\Support\\Facades\\Route;\n\n/*\n|--------------------------------------------------------------------------\n| Web Routes - Generated by Vemto\n|--------------------------------------------------------------------------\n|\n| It is not recommended to edit this file directly. Although you can do so,\n| it will generate a conflict on Vemto's next build.\n|\n*/\n\n// Dashboard\nRoute::prefix('/dashboard')\n    ->name('dashboard.')\n    ->group(function () {\n        Route::get('/users', App\\Livewire\\Dashboard\\UserIndex::class)->name(\n            'users.index'\n        );\n\n        Route::get(\n            '/users/create',\n            App\\Livewire\\Dashboard\\UserCreate::class\n        )->name('users.create');\n\n        Route::get(\n            '/users/{user}',\n            App\\Livewire\\Dashboard\\UserEdit::class\n        )->name('users.edit');\n\n        Route::get('/bills', App\\Livewire\\Dashboard\\BillIndex::class)->name(\n            'bills.index'\n        );\n\n        Route::get(\n            '/bills/create',\n            App\\Livewire\\Dashboard\\BillCreate::class\n        )->name('bills.create');\n\n        Route::get(\n            '/bills/{bill}',\n            App\\Livewire\\Dashboard\\BillEdit::class\n        )->name('bills.edit');\n\n        Route::get(\n            '/services',\n            App\\Livewire\\Dashboard\\ServiceIndex::class\n        )->name('services.index');\n\n        Route::get(\n            '/services/create',\n            App\\Livewire\\Dashboard\\ServiceCreate::class\n        )->name('services.create');\n\n        Route::get(\n            '/services/{service}',\n            App\\Livewire\\Dashboard\\ServiceEdit::class\n        )->name('services.edit');\n\n        Route::get(\n            '/vehicles',\n            App\\Livewire\\Dashboard\\VehicleIndex::class\n        )->name('vehicles.index');\n\n        Route::get(\n            '/vehicles/create',\n            App\\Livewire\\Dashboard\\VehicleCreate::class\n        )->name('vehicles.create');\n\n        Route::get(\n            '/vehicles/{vehicle}',\n            App\\Livewire\\Dashboard\\VehicleEdit::class\n        )->name('vehicles.edit');\n\n        Route::get(\n            '/statuses',\n            App\\Livewire\\Dashboard\\StatusIndex::class\n        )->name('statuses.index');\n\n        Route::get(\n            '/statuses/create',\n            App\\Livewire\\Dashboard\\StatusCreate::class\n        )->name('statuses.create');\n\n        Route::get(\n            '/statuses/{status}',\n            App\\Livewire\\Dashboard\\StatusEdit::class\n        )->name('statuses.edit');\n    });\n\n// Site\nRoute::prefix('/')->group(function () {});\n\n// Filament Panel\nRoute::prefix('/panel')\n    ->name('panel.')\n    ->group(function () {});\n"
            },
            "__tableData": {
                "count": 61,
                "lastPrimaryKey": 61,
                "index": {
                    "1": {
                        "hasMany": {}
                    },
                    "2": {
                        "hasMany": {}
                    },
                    "3": {
                        "hasMany": {}
                    },
                    "4": {
                        "hasMany": {}
                    },
                    "5": {
                        "hasMany": {}
                    },
                    "6": {
                        "hasMany": {}
                    },
                    "7": {
                        "hasMany": {}
                    },
                    "8": {
                        "hasMany": {}
                    },
                    "9": {
                        "hasMany": {}
                    },
                    "10": {
                        "hasMany": {}
                    },
                    "11": {
                        "hasMany": {}
                    },
                    "12": {
                        "hasMany": {}
                    },
                    "13": {
                        "hasMany": {}
                    },
                    "14": {
                        "hasMany": {}
                    },
                    "15": {
                        "hasMany": {}
                    },
                    "16": {
                        "hasMany": {}
                    },
                    "17": {
                        "hasMany": {}
                    },
                    "18": {
                        "hasMany": {}
                    },
                    "19": {
                        "hasMany": {}
                    },
                    "20": {
                        "hasMany": {}
                    },
                    "21": {
                        "hasMany": {}
                    },
                    "22": {
                        "hasMany": {}
                    },
                    "23": {
                        "hasMany": {}
                    },
                    "24": {
                        "hasMany": {}
                    },
                    "25": {
                        "hasMany": {}
                    },
                    "26": {
                        "hasMany": {}
                    },
                    "27": {
                        "hasMany": {}
                    },
                    "28": {
                        "hasMany": {}
                    },
                    "29": {
                        "hasMany": {}
                    },
                    "30": {
                        "hasMany": {}
                    },
                    "31": {
                        "hasMany": {}
                    },
                    "32": {
                        "hasMany": {}
                    },
                    "33": {
                        "hasMany": {}
                    },
                    "34": {
                        "hasMany": {}
                    },
                    "35": {
                        "hasMany": {}
                    },
                    "36": {
                        "hasMany": {}
                    },
                    "37": {
                        "hasMany": {}
                    },
                    "38": {
                        "hasMany": {}
                    },
                    "39": {
                        "hasMany": {}
                    },
                    "40": {
                        "hasMany": {}
                    },
                    "41": {
                        "hasMany": {}
                    },
                    "42": {
                        "hasMany": {}
                    },
                    "43": {
                        "hasMany": {}
                    },
                    "44": {
                        "hasMany": {}
                    },
                    "45": {
                        "hasMany": {}
                    },
                    "46": {
                        "hasMany": {}
                    },
                    "47": {
                        "hasMany": {}
                    },
                    "48": {
                        "hasMany": {}
                    },
                    "49": {
                        "hasMany": {}
                    },
                    "50": {
                        "hasMany": {}
                    },
                    "51": {
                        "hasMany": {}
                    },
                    "52": {
                        "hasMany": {}
                    },
                    "53": {
                        "hasMany": {}
                    },
                    "54": {
                        "hasMany": {}
                    },
                    "55": {
                        "hasMany": {}
                    },
                    "56": {
                        "hasMany": {}
                    },
                    "57": {
                        "hasMany": {}
                    },
                    "58": {
                        "hasMany": {}
                    },
                    "59": {
                        "hasMany": {}
                    },
                    "60": {
                        "hasMany": {}
                    },
                    "61": {
                        "hasMany": {}
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            },
            "item_2": {
                "path": "routes",
                "name": "app-api.php",
                "fullPath": "routes/app-api.php",
                "template": "routes/ApiRoutes.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 2,
                "createdAt": "2025-06-28 23:12:30",
                "updatedAt": "2025-06-28 23:19:21",
                "content": "<?php\n\nuse Illuminate\\Support\\Facades\\Route;\nuse App\\Http\\Controllers\\Api\\AuthController;\n\n/*\n|--------------------------------------------------------------------------\n| Api Routes - Generated by Vemto\n|--------------------------------------------------------------------------\n|\n| It is not recommended to edit this file directly. Although you can do so,\n| it will generate a conflict on Vemto's next build.\n|\n*/\n\nRoute::name('api.')\n    ->prefix('api')\n    ->group(function () {\n        Route::post('/login', [AuthController::class, 'login'])->name(\n            'api.login'\n        );\n\n        Route::middleware('auth:sanctum')->group(function () {});\n    });\n"
            },
            "item_3": {
                "path": "bootstrap",
                "name": "app.php",
                "fullPath": "bootstrap/app.php",
                "template": "laravel/BootstrapApp.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "conflict",
                "ignoreConflicts": false,
                "id": 3,
                "createdAt": "2025-06-28 23:12:30",
                "updatedAt": "2025-06-28 23:19:21",
                "content": "<?php\n\nuse Illuminate\\Support\\Facades\\Route;\nuse Illuminate\\Foundation\\Application;\nuse Illuminate\\Foundation\\Configuration\\Exceptions;\nuse Illuminate\\Foundation\\Configuration\\Middleware;\n\nreturn Application::configure(basePath: dirname(__DIR__))\n    ->withProviders()\n    ->withRouting(\n        web: __DIR__ . '/../routes/web.php',\n        // api: __DIR__.'/../routes/api.php',\n        commands: __DIR__ . '/../routes/console.php',\n        // channels: __DIR__.'/../routes/channels.php',\n        health: '/up',\n\n        then: function () {\n            Route::middleware('web')->group(__DIR__ . '/../routes/app.php');\n            Route::middleware('api')->group(__DIR__ . '/../routes/app-api.php');\n        }\n    )\n    ->withMiddleware(function (Middleware $middleware) {\n        //\n    })\n    ->withExceptions(function (Exceptions $exceptions) {\n        //\n    })\n    ->create();\n",
                "conflictFileName": "6HieRW4B2cLIxIYvUJE0VpTx2mNjjSv4.json"
            },
            "item_4": {
                "path": "database/factories",
                "name": "BillFactory.php",
                "fullPath": "database/factories/BillFactory.php",
                "template": "database/Factory.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "conflict",
                "ignoreConflicts": false,
                "id": 4,
                "createdAt": "2025-06-28 23:12:30",
                "updatedAt": "2025-06-28 23:19:21",
                "content": "<?php\n\nnamespace Database\\Factories;\n\nuse App\\Models\\Bill;\nuse Illuminate\\Support\\Str;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass BillFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = Bill::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [\n            'cena' => fake()->randomNumber(2),\n            'usluga_id' => \\App\\Models\\Service::factory(),\n        ];\n    }\n}\n",
                "conflictFileName": "IOm3NltEl1KtbqHgnnrLrQztdT8BhSoo.json"
            },
            "item_5": {
                "path": "database/seeders",
                "name": "BillSeeder.php",
                "fullPath": "database/seeders/BillSeeder.php",
                "template": "database/Seeder.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 5,
                "createdAt": "2025-06-28 23:12:30",
                "updatedAt": "2025-06-28 23:19:21",
                "content": "<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\Bill;\nuse Illuminate\\Database\\Seeder;\n\nclass BillSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        Bill::factory()\n            ->count(5)\n            ->create();\n    }\n}\n"
            },
            "item_6": {
                "path": "app/Policies",
                "name": "BillPolicy.php",
                "fullPath": "app/Policies/BillPolicy.php",
                "template": "models/Policy.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 6,
                "createdAt": "2025-06-28 23:12:30",
                "updatedAt": "2025-06-28 23:19:21",
                "content": "<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\Bill;\nuse App\\Models\\User;\n\nclass BillPolicy\n{\n    /**\n     * Determine whether the user can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can view the model.\n     */\n    public function view(User $user, Bill $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can create models.\n     */\n    public function create(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can update the model.\n     */\n    public function update(User $user, Bill $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can delete the model.\n     */\n    public function delete(User $user, Bill $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can restore the model.\n     */\n    public function restore(User $user, Bill $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can permanently delete the model.\n     */\n    public function forceDelete(User $user, Bill $model): bool\n    {\n        return true;\n    }\n}\n"
            },
            "item_7": {
                "path": "database/factories",
                "name": "ServiceFactory.php",
                "fullPath": "database/factories/ServiceFactory.php",
                "template": "database/Factory.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "conflict",
                "ignoreConflicts": false,
                "id": 7,
                "createdAt": "2025-06-28 23:12:30",
                "updatedAt": "2025-06-28 23:19:21",
                "content": "<?php\n\nnamespace Database\\Factories;\n\nuse App\\Models\\Service;\nuse Illuminate\\Support\\Str;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass ServiceFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = Service::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [\n            'naziv' => fake()->text(255),\n            'opis' => fake()->text(),\n            'vozilo_id' => \\App\\Models\\Vehicle::factory(),\n            'zaposleni_id' => \\App\\Models\\User::factory(),\n            'admin_id' => \\App\\Models\\User::factory(),\n            'status_id' => \\App\\Models\\Status::factory(),\n        ];\n    }\n}\n",
                "conflictFileName": "LG9Mz6z62bz7R6UvdTdoE7XF4EWHiK1a.json"
            },
            "item_8": {
                "path": "database/seeders",
                "name": "ServiceSeeder.php",
                "fullPath": "database/seeders/ServiceSeeder.php",
                "template": "database/Seeder.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 8,
                "createdAt": "2025-06-28 23:12:30",
                "updatedAt": "2025-06-28 23:19:21",
                "content": "<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\Service;\nuse Illuminate\\Database\\Seeder;\n\nclass ServiceSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        Service::factory()\n            ->count(5)\n            ->create();\n    }\n}\n"
            },
            "item_9": {
                "path": "app/Policies",
                "name": "ServicePolicy.php",
                "fullPath": "app/Policies/ServicePolicy.php",
                "template": "models/Policy.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 9,
                "createdAt": "2025-06-28 23:12:30",
                "updatedAt": "2025-06-28 23:19:21",
                "content": "<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\User;\nuse App\\Models\\Service;\n\nclass ServicePolicy\n{\n    /**\n     * Determine whether the user can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can view the model.\n     */\n    public function view(User $user, Service $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can create models.\n     */\n    public function create(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can update the model.\n     */\n    public function update(User $user, Service $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can delete the model.\n     */\n    public function delete(User $user, Service $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can restore the model.\n     */\n    public function restore(User $user, Service $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can permanently delete the model.\n     */\n    public function forceDelete(User $user, Service $model): bool\n    {\n        return true;\n    }\n}\n"
            },
            "item_10": {
                "path": "database/factories",
                "name": "StatusFactory.php",
                "fullPath": "database/factories/StatusFactory.php",
                "template": "database/Factory.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "conflict",
                "ignoreConflicts": false,
                "id": 10,
                "createdAt": "2025-06-28 23:12:30",
                "updatedAt": "2025-06-28 23:19:21",
                "content": "<?php\n\nnamespace Database\\Factories;\n\nuse App\\Models\\Status;\nuse Illuminate\\Support\\Str;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass StatusFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = Status::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [\n            'naziv' => fake()->text(255),\n        ];\n    }\n}\n",
                "conflictFileName": "LXbzJfIxvk3rdQ3dWb0Y9eqd4hvfY4Lc.json"
            },
            "item_11": {
                "path": "database/seeders",
                "name": "StatusSeeder.php",
                "fullPath": "database/seeders/StatusSeeder.php",
                "template": "database/Seeder.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 11,
                "createdAt": "2025-06-28 23:12:30",
                "updatedAt": "2025-06-28 23:19:21",
                "content": "<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\Status;\nuse Illuminate\\Database\\Seeder;\n\nclass StatusSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        Status::factory()\n            ->count(5)\n            ->create();\n    }\n}\n"
            },
            "item_12": {
                "path": "app/Policies",
                "name": "StatusPolicy.php",
                "fullPath": "app/Policies/StatusPolicy.php",
                "template": "models/Policy.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 12,
                "createdAt": "2025-06-28 23:12:30",
                "updatedAt": "2025-06-28 23:19:21",
                "content": "<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\User;\nuse App\\Models\\Status;\n\nclass StatusPolicy\n{\n    /**\n     * Determine whether the user can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can view the model.\n     */\n    public function view(User $user, Status $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can create models.\n     */\n    public function create(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can update the model.\n     */\n    public function update(User $user, Status $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can delete the model.\n     */\n    public function delete(User $user, Status $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can restore the model.\n     */\n    public function restore(User $user, Status $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can permanently delete the model.\n     */\n    public function forceDelete(User $user, Status $model): bool\n    {\n        return true;\n    }\n}\n"
            },
            "item_13": {
                "path": "database/factories",
                "name": "UserFactory.php",
                "fullPath": "database/factories/UserFactory.php",
                "template": "database/Factory.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "conflict",
                "ignoreConflicts": false,
                "id": 13,
                "createdAt": "2025-06-28 23:12:30",
                "updatedAt": "2025-06-28 23:19:21",
                "content": "<?php\n\nnamespace Database\\Factories;\n\nuse App\\Models\\User;\nuse Illuminate\\Support\\Str;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass UserFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = User::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [\n            'ime' => fake()->text(255),\n            'prezime' => fake()->text(255),\n            'email' => fake()\n                ->unique()\n                ->safeEmail(),\n            'email_verified_at' => now(),\n            'password' => \\Hash::make('password'),\n            'broj_telefona' => fake()->text(255),\n            'role' => fake()->word(),\n            'remember_token' => \\Str::random(10),\n        ];\n    }\n\n    /**\n     * Indicate that the model's email address should be unverified.\n     */\n    public function unverified(): Factory\n    {\n        return $this->state(function (array $attributes) {\n            return [\n                'email_verified_at' => null,\n            ];\n        });\n    }\n}\n",
                "conflictFileName": "V5lMuVqrjAm9i90a35nZuXboOjOQ8ak6.json"
            },
            "item_14": {
                "path": "database/seeders",
                "name": "UserSeeder.php",
                "fullPath": "database/seeders/UserSeeder.php",
                "template": "database/Seeder.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 14,
                "createdAt": "2025-06-28 23:12:30",
                "updatedAt": "2025-06-28 23:19:21",
                "content": "<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\User;\nuse Illuminate\\Database\\Seeder;\n\nclass UserSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        User::factory()\n            ->count(5)\n            ->create();\n    }\n}\n"
            },
            "item_15": {
                "path": "app/Policies",
                "name": "UserPolicy.php",
                "fullPath": "app/Policies/UserPolicy.php",
                "template": "models/Policy.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 15,
                "createdAt": "2025-06-28 23:12:30",
                "updatedAt": "2025-06-28 23:19:21",
                "content": "<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\User;\n\nclass UserPolicy\n{\n    /**\n     * Determine whether the user can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can view the model.\n     */\n    public function view(User $user, User $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can create models.\n     */\n    public function create(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can update the model.\n     */\n    public function update(User $user, User $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can delete the model.\n     */\n    public function delete(User $user, User $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can restore the model.\n     */\n    public function restore(User $user, User $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can permanently delete the model.\n     */\n    public function forceDelete(User $user, User $model): bool\n    {\n        return true;\n    }\n}\n"
            },
            "item_16": {
                "path": "database/factories",
                "name": "VehicleFactory.php",
                "fullPath": "database/factories/VehicleFactory.php",
                "template": "database/Factory.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "conflict",
                "ignoreConflicts": false,
                "id": 16,
                "createdAt": "2025-06-28 23:12:30",
                "updatedAt": "2025-06-28 23:19:21",
                "content": "<?php\n\nnamespace Database\\Factories;\n\nuse App\\Models\\Vehicle;\nuse Illuminate\\Support\\Str;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass VehicleFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = Vehicle::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [\n            'registarski_broj' => fake()->text(255),\n            'marka' => fake()->text(255),\n            'model' => fake()->text(255),\n            'godina_proizvodnje' => fake()->randomNumber(0),\n            'klijent_id' => \\App\\Models\\User::factory(),\n        ];\n    }\n}\n",
                "conflictFileName": "Z61e9kj9ExxpHMjld4mYY72OIYoiuC1w.json"
            },
            "item_17": {
                "path": "database/seeders",
                "name": "VehicleSeeder.php",
                "fullPath": "database/seeders/VehicleSeeder.php",
                "template": "database/Seeder.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 17,
                "createdAt": "2025-06-28 23:12:30",
                "updatedAt": "2025-06-28 23:19:21",
                "content": "<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\Vehicle;\nuse Illuminate\\Database\\Seeder;\n\nclass VehicleSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        Vehicle::factory()\n            ->count(5)\n            ->create();\n    }\n}\n"
            },
            "item_18": {
                "path": "app/Policies",
                "name": "VehiclePolicy.php",
                "fullPath": "app/Policies/VehiclePolicy.php",
                "template": "models/Policy.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 18,
                "createdAt": "2025-06-28 23:12:30",
                "updatedAt": "2025-06-28 23:19:21",
                "content": "<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\User;\nuse App\\Models\\Vehicle;\n\nclass VehiclePolicy\n{\n    /**\n     * Determine whether the user can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can view the model.\n     */\n    public function view(User $user, Vehicle $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can create models.\n     */\n    public function create(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can update the model.\n     */\n    public function update(User $user, Vehicle $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can delete the model.\n     */\n    public function delete(User $user, Vehicle $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can restore the model.\n     */\n    public function restore(User $user, Vehicle $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can permanently delete the model.\n     */\n    public function forceDelete(User $user, Vehicle $model): bool\n    {\n        return true;\n    }\n}\n"
            },
            "item_19": {
                "path": "database/seeders",
                "name": "DatabaseSeeder.php",
                "fullPath": "database/seeders/DatabaseSeeder.php",
                "template": "database/DatabaseSeeder.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "conflict",
                "ignoreConflicts": false,
                "id": 19,
                "createdAt": "2025-06-28 23:12:30",
                "updatedAt": "2025-06-28 23:19:21",
                "content": "<?php\n\nnamespace Database\\Seeders;\n\nuse Illuminate\\Database\\Seeder;\n// use Illuminate\\Database\\Console\\Seeds\\WithoutModelEvents;\n\nuse App\\Models\\User;\n\nclass DatabaseSeeder extends Seeder\n{\n    /**\n     * Seed the application's database.\n     */\n    public function run(): void\n    {\n        User::factory()\n            ->count(1)\n            ->create([\n                'email' => 'admin@admin.com',\n                'password' => \\Hash::make('admin'),\n            ]);\n\n        $this->call(BillSeeder::class);\n        $this->call(ServiceSeeder::class);\n        $this->call(StatusSeeder::class);\n        $this->call(VehicleSeeder::class);\n    }\n}\n",
                "conflictFileName": "ReZKpDpAZ6iBLWiucOVExOznmecuburf.json"
            },
            "item_20": {
                "path": "/lang/en/",
                "name": "navigation.php",
                "fullPath": "/lang/en//navigation.php",
                "template": "NoTemplate",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 20,
                "createdAt": "2025-06-28 23:12:30",
                "updatedAt": "2025-06-28 23:19:21",
                "content": "<?php\n\nreturn [\n    'home' => 'Home',\n    'apps' => 'Apps',\n    'users' => 'Users',\n    'bills' => 'Bills',\n    'services' => 'Services',\n    'vehicles' => 'Vehicles',\n    'statuses' => 'Statuses',\n];\n"
            },
            "item_21": {
                "path": "resources/views/livewire/dashboard/users",
                "name": "index.blade.php",
                "fullPath": "resources/views/livewire/dashboard/users/index.blade.php",
                "template": "crud/views/livewire/IndexView.vemtl",
                "projectId": 1,
                "type": "blade",
                "status": "skipped",
                "ignoreConflicts": false,
                "id": 21,
                "createdAt": "2025-06-28 23:15:18",
                "updatedAt": "2025-06-28 23:19:16"
            },
            "item_22": {
                "path": "app/Livewire/Dashboard",
                "name": "UserIndex.php",
                "fullPath": "app/Livewire/Dashboard/UserIndex.php",
                "template": "crud/views/livewire/IndexComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "skipped",
                "ignoreConflicts": false,
                "id": 22,
                "createdAt": "2025-06-28 23:15:18",
                "updatedAt": "2025-06-28 23:19:16"
            },
            "item_23": {
                "path": "resources/views/livewire/dashboard/users",
                "name": "create.blade.php",
                "fullPath": "resources/views/livewire/dashboard/users/create.blade.php",
                "template": "crud/views/livewire/CreateView.vemtl",
                "projectId": 1,
                "type": "blade",
                "status": "skipped",
                "ignoreConflicts": false,
                "id": 23,
                "createdAt": "2025-06-28 23:15:18",
                "updatedAt": "2025-06-28 23:19:16"
            },
            "item_24": {
                "path": "app/Livewire/Dashboard",
                "name": "UserCreate.php",
                "fullPath": "app/Livewire/Dashboard/UserCreate.php",
                "template": "crud/views/livewire/CreateComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "skipped",
                "ignoreConflicts": false,
                "id": 24,
                "createdAt": "2025-06-28 23:15:18",
                "updatedAt": "2025-06-28 23:19:16"
            },
            "item_25": {
                "path": "resources/views/livewire/dashboard/users",
                "name": "edit.blade.php",
                "fullPath": "resources/views/livewire/dashboard/users/edit.blade.php",
                "template": "crud/views/livewire/EditView.vemtl",
                "projectId": 1,
                "type": "blade",
                "status": "skipped",
                "ignoreConflicts": false,
                "id": 25,
                "createdAt": "2025-06-28 23:15:18",
                "updatedAt": "2025-06-28 23:19:16"
            },
            "item_26": {
                "path": "app/Livewire/Dashboard",
                "name": "UserEdit.php",
                "fullPath": "app/Livewire/Dashboard/UserEdit.php",
                "template": "crud/views/livewire/EditComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "skipped",
                "ignoreConflicts": false,
                "id": 26,
                "createdAt": "2025-06-28 23:15:18",
                "updatedAt": "2025-06-28 23:19:16"
            },
            "item_27": {
                "path": "app/Livewire/Dashboard/Users/Forms",
                "name": "CreateForm.php",
                "fullPath": "app/Livewire/Dashboard/Users/Forms/CreateForm.php",
                "template": "crud/views/livewire/CreateFormComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "skipped",
                "ignoreConflicts": false,
                "id": 27,
                "createdAt": "2025-06-28 23:15:18",
                "updatedAt": "2025-06-28 23:19:16"
            },
            "item_28": {
                "path": "app/Livewire/Dashboard/Users/Forms",
                "name": "UpdateForm.php",
                "fullPath": "app/Livewire/Dashboard/Users/Forms/UpdateForm.php",
                "template": "crud/views/livewire/UpdateFormComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "skipped",
                "ignoreConflicts": false,
                "id": 28,
                "createdAt": "2025-06-28 23:15:18",
                "updatedAt": "2025-06-28 23:19:16"
            },
            "item_29": {
                "path": "resources/views/livewire/dashboard/bills",
                "name": "index.blade.php",
                "fullPath": "resources/views/livewire/dashboard/bills/index.blade.php",
                "template": "crud/views/livewire/IndexView.vemtl",
                "projectId": 1,
                "type": "blade",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 29,
                "createdAt": "2025-06-28 23:15:18",
                "updatedAt": "2025-06-28 23:19:21",
                "content": "<div class=\"max-w-7xl mx-auto py-10 sm:px-6 lg:px-8 space-y-4\">\n    <x-ui.breadcrumbs>\n        <x-ui.breadcrumbs.link href=\"/dashboard\"\n            >Dashboard</x-ui.breadcrumbs.link\n        >\n        <x-ui.breadcrumbs.separator />\n        <x-ui.breadcrumbs.link active\n            >{{ __('crud.bills.collectionTitle') }}</x-ui.breadcrumbs.link\n        >\n    </x-ui.breadcrumbs>\n\n    <div class=\"flex justify-between align-top py-4\">\n        <x-ui.input\n            wire:model.live=\"search\"\n            type=\"text\"\n            placeholder=\"Search {{ __('crud.bills.collectionTitle') }}...\"\n        />\n\n        @can('create', App\\Models\\Bill::class)\n        <a wire:navigate href=\"{{ route('dashboard.bills.create') }}\">\n            <x-ui.button>New</x-ui.button>\n        </a>\n        @endcan\n    </div>\n\n    {{-- Delete Modal --}}\n    <x-ui.modal.confirm wire:model=\"confirmingDeletion\">\n        <x-slot name=\"title\"> {{ __('Delete') }} </x-slot>\n\n        <x-slot name=\"content\"> {{ __('Are you sure?') }} </x-slot>\n\n        <x-slot name=\"footer\">\n            <x-ui.button\n                wire:click=\"$toggle('confirmingDeletion')\"\n                wire:loading.attr=\"disabled\"\n            >\n                {{ __('Cancel') }}\n            </x-ui.button>\n\n            <x-ui.button.danger\n                class=\"ml-3\"\n                wire:click=\"delete({{ $deletingBill }})\"\n                wire:loading.attr=\"disabled\"\n            >\n                {{ __('Delete') }}\n            </x-ui.button.danger>\n        </x-slot>\n    </x-ui.modal.confirm>\n\n    {{-- Index Table --}}\n    <x-ui.container.table>\n        <x-ui.table>\n            <x-slot name=\"head\">\n                <x-ui.table.header for-crud wire:click=\"sortBy('usluga_id')\"\n                    >{{ __('crud.bills.inputs.usluga_id.label')\n                    }}</x-ui.table.header\n                >\n                <x-ui.table.header for-crud wire:click=\"sortBy('cena')\"\n                    >{{ __('crud.bills.inputs.cena.label') }}</x-ui.table.header\n                >\n                <x-ui.table.action-header>Actions</x-ui.table.action-header>\n            </x-slot>\n\n            <x-slot name=\"body\">\n                @forelse ($bills as $bill)\n                <x-ui.table.row wire:loading.class.delay=\"opacity-75\">\n                    <x-ui.table.column for-crud\n                        >{{ $bill->usluga_id }}</x-ui.table.column\n                    >\n                    <x-ui.table.column for-crud\n                        >{{ $bill->cena }}</x-ui.table.column\n                    >\n                    <x-ui.table.action-column>\n                        @can('update', $bill)\n                        <x-ui.action\n                            wire:navigate\n                            href=\"{{ route('dashboard.bills.edit', $bill) }}\"\n                            >Edit</x-ui.action\n                        >\n                        @endcan @can('delete', $bill)\n                        <x-ui.action.danger\n                            wire:click=\"confirmDeletion({{ $bill->id }})\"\n                            >Delete</x-ui.action.danger\n                        >\n                        @endcan\n                    </x-ui.table.action-column>\n                </x-ui.table.row>\n                @empty\n                <x-ui.table.row>\n                    <x-ui.table.column colspan=\"3\"\n                        >No {{ __('crud.bills.collectionTitle') }} found.</x-ui.table.column\n                    >\n                </x-ui.table.row>\n                @endforelse\n            </x-slot>\n        </x-ui.table>\n\n        <div class=\"mt-2\">{{ $bills->links() }}</div>\n    </x-ui.container.table>\n</div>\n"
            },
            "item_30": {
                "path": "app/Livewire/Dashboard",
                "name": "BillIndex.php",
                "fullPath": "app/Livewire/Dashboard/BillIndex.php",
                "template": "crud/views/livewire/IndexComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 30,
                "createdAt": "2025-06-28 23:15:18",
                "updatedAt": "2025-06-28 23:19:21",
                "content": "<?php\n\nnamespace App\\Livewire\\Dashboard;\n\nuse App\\Models\\Bill;\nuse Livewire\\Component;\nuse Livewire\\WithPagination;\n\nclass BillIndex extends Component\n{\n    use WithPagination;\n\n    public $search;\n    public $sortField = 'updated_at';\n    public $sortDirection = 'desc';\n\n    public $queryString = ['search', 'sortField', 'sortDirection'];\n\n    public $confirmingDeletion = false;\n    public $deletingBill;\n\n    public function updatingSearch()\n    {\n        $this->resetPage();\n    }\n\n    public function confirmDeletion(string $id)\n    {\n        $this->deletingBill = $id;\n\n        $this->confirmingDeletion = true;\n    }\n\n    public function delete(Bill $bill)\n    {\n        $bill->delete();\n\n        $this->confirmingDeletion = false;\n    }\n\n    public function sortBy($field)\n    {\n        if ($this->sortField === $field) {\n            $this->sortDirection =\n                $this->sortDirection === 'asc' ? 'desc' : 'asc';\n        } else {\n            $this->sortDirection = 'asc';\n        }\n\n        $this->sortField = $field;\n    }\n\n    public function getRowsProperty()\n    {\n        return $this->rowsQuery->paginate(5);\n    }\n\n    public function getRowsQueryProperty()\n    {\n        return Bill::query()\n            ->orderBy($this->sortField, $this->sortDirection)\n            ->where('created_at', 'like', \"%{$this->search}%\");\n    }\n\n    public function render()\n    {\n        return view('livewire.dashboard.bills.index', [\n            'bills' => $this->rows,\n        ]);\n    }\n}\n"
            },
            "item_31": {
                "path": "resources/views/livewire/dashboard/bills",
                "name": "create.blade.php",
                "fullPath": "resources/views/livewire/dashboard/bills/create.blade.php",
                "template": "crud/views/livewire/CreateView.vemtl",
                "projectId": 1,
                "type": "blade",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 31,
                "createdAt": "2025-06-28 23:15:18",
                "updatedAt": "2025-06-28 23:19:21",
                "content": "<div class=\"max-w-7xl mx-auto py-10 sm:px-6 lg:px-8 space-y-4\">\n    <x-ui.breadcrumbs>\n        <x-ui.breadcrumbs.link href=\"/dashboard\"\n            >Dashboard</x-ui.breadcrumbs.link\n        >\n        <x-ui.breadcrumbs.separator />\n        <x-ui.breadcrumbs.link href=\"{{ route('dashboard.bills.index') }}\"\n            >{{ __('crud.bills.collectionTitle') }}</x-ui.breadcrumbs.link\n        >\n        <x-ui.breadcrumbs.separator />\n        <x-ui.breadcrumbs.link active\n            >Create {{ __('crud.bills.itemTitle') }}</x-ui.breadcrumbs.link\n        >\n    </x-ui.breadcrumbs>\n\n    <div class=\"w-full text-gray-500 text-lg font-semibold py-4 uppercase\">\n        <h1>Create {{ __('crud.bills.itemTitle') }}</h1>\n    </div>\n\n    <div class=\"overflow-hidden border rounded-lg bg-white\">\n        <form class=\"w-full mb-0\" wire:submit.prevent=\"save\">\n            <div class=\"p-6 space-y-3\">\n                <div class=\"w-full\">\n                    <x-ui.label for=\"usluga_id\"\n                        >{{ __('crud.bills.inputs.usluga_id.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.select\n                        wire:model=\"form.usluga_id\"\n                        name=\"usluga_id\"\n                        id=\"usluga_id\"\n                        class=\"w-full\"\n                    >\n                        <option value=\"\">Select data</option>\n                        @foreach ($services as $value => $label)\n                        <option value=\"{{ $value }}\">{{ $label }}</option>\n                        @endforeach\n                    </x-ui.input.select>\n                    <x-ui.input.error for=\"form.usluga_id\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"cena\"\n                        >{{ __('crud.bills.inputs.cena.label') }}</x-ui.label\n                    >\n                    <x-ui.input.number\n                        class=\"w-full\"\n                        wire:model=\"form.cena\"\n                        name=\"cena\"\n                        id=\"cena\"\n                        placeholder=\"{{ __('crud.bills.inputs.cena.placeholder') }}\"\n                        step=\"1\"\n                    />\n                    <x-ui.input.error for=\"form.cena\" />\n                </div>\n            </div>\n\n            <div class=\"flex justify-between mt-4 border-t border-gray-50 p-4\">\n                <div>\n                    <!-- Other buttons here -->\n                </div>\n                <div>\n                    <x-ui.button type=\"submit\">Save</x-ui.button>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>\n"
            },
            "item_32": {
                "path": "app/Livewire/Dashboard",
                "name": "BillCreate.php",
                "fullPath": "app/Livewire/Dashboard/BillCreate.php",
                "template": "crud/views/livewire/CreateComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 32,
                "createdAt": "2025-06-28 23:15:18",
                "updatedAt": "2025-06-28 23:19:21",
                "content": "<?php\n\nnamespace App\\Livewire\\Dashboard;\n\nuse Livewire\\Component;\nuse App\\Models\\Service;\nuse Livewire\\WithFileUploads;\nuse Illuminate\\Support\\Collection;\nuse App\\Livewire\\Dashboard\\Bills\\Forms\\CreateForm;\n\nclass BillCreate extends Component\n{\n    use WithFileUploads;\n\n    public CreateForm $form;\n    public Collection $services;\n\n    public function mount()\n    {\n        $this->services = Service::pluck('naziv', 'id');\n    }\n\n    public function save()\n    {\n        $this->authorize('create', Bill::class);\n\n        $this->validate();\n\n        $bill = $this->form->save();\n\n        return redirect()->route('dashboard.bills.edit', $bill);\n    }\n\n    public function render()\n    {\n        return view('livewire.dashboard.bills.create', []);\n    }\n}\n"
            },
            "item_33": {
                "path": "resources/views/livewire/dashboard/bills",
                "name": "edit.blade.php",
                "fullPath": "resources/views/livewire/dashboard/bills/edit.blade.php",
                "template": "crud/views/livewire/EditView.vemtl",
                "projectId": 1,
                "type": "blade",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 33,
                "createdAt": "2025-06-28 23:15:18",
                "updatedAt": "2025-06-28 23:19:21",
                "content": "<div class=\"max-w-7xl mx-auto py-10 sm:px-6 lg:px-8 space-y-4\">\n    <x-ui.breadcrumbs>\n        <x-ui.breadcrumbs.link href=\"/dashboard\"\n            >Dashboard</x-ui.breadcrumbs.link\n        >\n        <x-ui.breadcrumbs.separator />\n        <x-ui.breadcrumbs.link href=\"{{ route('dashboard.bills.index') }}\"\n            >{{ __('crud.bills.collectionTitle') }}</x-ui.breadcrumbs.link\n        >\n        <x-ui.breadcrumbs.separator />\n        <x-ui.breadcrumbs.link active\n            >Edit {{ __('crud.bills.itemTitle') }}</x-ui.breadcrumbs.link\n        >\n    </x-ui.breadcrumbs>\n\n    <x-ui.toast on=\"saved\"> Bill saved successfully. </x-ui.toast>\n\n    <div class=\"w-full text-gray-500 text-lg font-semibold py-4 uppercase\">\n        <h1>Edit {{ __('crud.bills.itemTitle') }}</h1>\n    </div>\n\n    <div class=\"overflow-hidden border rounded-lg bg-white\">\n        <form class=\"w-full mb-0\" wire:submit.prevent=\"save\">\n            <div class=\"p-6 space-y-3\">\n                <div class=\"w-full\">\n                    <x-ui.label for=\"usluga_id\"\n                        >{{ __('crud.bills.inputs.usluga_id.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.select\n                        wire:model=\"form.usluga_id\"\n                        name=\"usluga_id\"\n                        id=\"usluga_id\"\n                        class=\"w-full\"\n                    >\n                        <option value=\"\">Select data</option>\n                        @foreach ($services as $value => $label)\n                        <option value=\"{{ $value }}\">{{ $label }}</option>\n                        @endforeach\n                    </x-ui.input.select>\n                    <x-ui.input.error for=\"form.usluga_id\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"cena\"\n                        >{{ __('crud.bills.inputs.cena.label') }}</x-ui.label\n                    >\n                    <x-ui.input.number\n                        class=\"w-full\"\n                        wire:model=\"form.cena\"\n                        name=\"cena\"\n                        id=\"cena\"\n                        placeholder=\"{{ __('crud.bills.inputs.cena.placeholder') }}\"\n                        step=\"1\"\n                    />\n                    <x-ui.input.error for=\"form.cena\" />\n                </div>\n            </div>\n\n            <div class=\"flex justify-between mt-4 border-t border-gray-50 p-4\">\n                <div>\n                    <!-- Other buttons here -->\n                </div>\n                <div>\n                    <x-ui.button type=\"submit\">Save</x-ui.button>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>\n"
            },
            "item_34": {
                "path": "app/Livewire/Dashboard",
                "name": "BillEdit.php",
                "fullPath": "app/Livewire/Dashboard/BillEdit.php",
                "template": "crud/views/livewire/EditComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 34,
                "createdAt": "2025-06-28 23:15:18",
                "updatedAt": "2025-06-28 23:19:21",
                "content": "<?php\n\nnamespace App\\Livewire\\Dashboard;\n\nuse App\\Models\\Bill;\nuse Livewire\\Component;\nuse App\\Models\\Service;\nuse Illuminate\\Support\\Collection;\nuse App\\Livewire\\Dashboard\\Bills\\Forms\\UpdateForm;\n\nclass BillEdit extends Component\n{\n    public ?Bill $bill = null;\n\n    public UpdateForm $form;\n    public Collection $services;\n\n    public function mount(Bill $bill)\n    {\n        $this->authorize('view-any', Bill::class);\n\n        $this->bill = $bill;\n\n        $this->form->setBill($bill);\n        $this->services = Service::pluck('naziv', 'id');\n    }\n\n    public function save()\n    {\n        $this->authorize('update', $this->bill);\n\n        $this->validate();\n\n        $this->form->save();\n\n        $this->dispatch('saved');\n    }\n\n    public function render()\n    {\n        return view('livewire.dashboard.bills.edit', []);\n    }\n}\n"
            },
            "item_35": {
                "path": "app/Livewire/Dashboard/Bills/Forms",
                "name": "CreateForm.php",
                "fullPath": "app/Livewire/Dashboard/Bills/Forms/CreateForm.php",
                "template": "crud/views/livewire/CreateFormComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 35,
                "createdAt": "2025-06-28 23:15:18",
                "updatedAt": "2025-06-28 23:19:21",
                "content": "<?php\n\nnamespace App\\Livewire\\Dashboard\\Bills\\Forms;\n\nuse Livewire\\Form;\nuse App\\Models\\Bill;\nuse Livewire\\Attributes\\Rule;\n\nclass CreateForm extends Form\n{\n    #[Rule('required')]\n    public $usluga_id = '';\n\n    #[Rule('required')]\n    public $cena = '';\n\n    public function save()\n    {\n        $this->validate();\n\n        $bill = Bill::create($this->except([]));\n\n        $this->reset();\n\n        return $bill;\n    }\n}\n"
            },
            "item_36": {
                "path": "app/Livewire/Dashboard/Bills/Forms",
                "name": "UpdateForm.php",
                "fullPath": "app/Livewire/Dashboard/Bills/Forms/UpdateForm.php",
                "template": "crud/views/livewire/UpdateFormComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 36,
                "createdAt": "2025-06-28 23:15:18",
                "updatedAt": "2025-06-28 23:19:21",
                "content": "<?php\n\nnamespace App\\Livewire\\Dashboard\\Bills\\Forms;\n\nuse Livewire\\Form;\nuse App\\Models\\Bill;\nuse Illuminate\\Validation\\Rule;\n\nclass UpdateForm extends Form\n{\n    public ?Bill $bill;\n\n    public $usluga_id = '';\n\n    public $cena = '';\n\n    public function rules(): array\n    {\n        return [\n            'usluga_id' => ['required'],\n            'cena' => ['required'],\n        ];\n    }\n\n    public function setBill(Bill $bill)\n    {\n        $this->bill = $bill;\n\n        $this->usluga_id = $bill->usluga_id;\n        $this->cena = $bill->cena;\n    }\n\n    public function save()\n    {\n        $this->validate();\n\n        $this->bill->update($this->except(['bill', 'usluga_id']));\n    }\n}\n"
            },
            "item_37": {
                "path": "resources/views/livewire/dashboard/services",
                "name": "index.blade.php",
                "fullPath": "resources/views/livewire/dashboard/services/index.blade.php",
                "template": "crud/views/livewire/IndexView.vemtl",
                "projectId": 1,
                "type": "blade",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 37,
                "createdAt": "2025-06-28 23:15:18",
                "updatedAt": "2025-06-28 23:19:21",
                "content": "<div class=\"max-w-7xl mx-auto py-10 sm:px-6 lg:px-8 space-y-4\">\n    <x-ui.breadcrumbs>\n        <x-ui.breadcrumbs.link href=\"/dashboard\"\n            >Dashboard</x-ui.breadcrumbs.link\n        >\n        <x-ui.breadcrumbs.separator />\n        <x-ui.breadcrumbs.link active\n            >{{ __('crud.services.collectionTitle') }}</x-ui.breadcrumbs.link\n        >\n    </x-ui.breadcrumbs>\n\n    <div class=\"flex justify-between align-top py-4\">\n        <x-ui.input\n            wire:model.live=\"search\"\n            type=\"text\"\n            placeholder=\"Search {{ __('crud.services.collectionTitle') }}...\"\n        />\n\n        @can('create', App\\Models\\Service::class)\n        <a wire:navigate href=\"{{ route('dashboard.services.create') }}\">\n            <x-ui.button>New</x-ui.button>\n        </a>\n        @endcan\n    </div>\n\n    {{-- Delete Modal --}}\n    <x-ui.modal.confirm wire:model=\"confirmingDeletion\">\n        <x-slot name=\"title\"> {{ __('Delete') }} </x-slot>\n\n        <x-slot name=\"content\"> {{ __('Are you sure?') }} </x-slot>\n\n        <x-slot name=\"footer\">\n            <x-ui.button\n                wire:click=\"$toggle('confirmingDeletion')\"\n                wire:loading.attr=\"disabled\"\n            >\n                {{ __('Cancel') }}\n            </x-ui.button>\n\n            <x-ui.button.danger\n                class=\"ml-3\"\n                wire:click=\"delete({{ $deletingService }})\"\n                wire:loading.attr=\"disabled\"\n            >\n                {{ __('Delete') }}\n            </x-ui.button.danger>\n        </x-slot>\n    </x-ui.modal.confirm>\n\n    {{-- Index Table --}}\n    <x-ui.container.table>\n        <x-ui.table>\n            <x-slot name=\"head\">\n                <x-ui.table.header for-crud wire:click=\"sortBy('vozilo_id')\"\n                    >{{ __('crud.services.inputs.vozilo_id.label')\n                    }}</x-ui.table.header\n                >\n                <x-ui.table.header for-crud wire:click=\"sortBy('zaposleni_id')\"\n                    >{{ __('crud.services.inputs.zaposleni_id.label')\n                    }}</x-ui.table.header\n                >\n                <x-ui.table.header for-crud wire:click=\"sortBy('admin_id')\"\n                    >{{ __('crud.services.inputs.admin_id.label')\n                    }}</x-ui.table.header\n                >\n                <x-ui.table.header for-crud wire:click=\"sortBy('status_id')\"\n                    >{{ __('crud.services.inputs.status_id.label')\n                    }}</x-ui.table.header\n                >\n                <x-ui.table.header for-crud wire:click=\"sortBy('naziv')\"\n                    >{{ __('crud.services.inputs.naziv.label')\n                    }}</x-ui.table.header\n                >\n                <x-ui.table.header for-crud wire:click=\"sortBy('opis')\"\n                    >{{ __('crud.services.inputs.opis.label')\n                    }}</x-ui.table.header\n                >\n                <x-ui.table.action-header>Actions</x-ui.table.action-header>\n            </x-slot>\n\n            <x-slot name=\"body\">\n                @forelse ($services as $service)\n                <x-ui.table.row wire:loading.class.delay=\"opacity-75\">\n                    <x-ui.table.column for-crud\n                        >{{ $service->vozilo_id }}</x-ui.table.column\n                    >\n                    <x-ui.table.column for-crud\n                        >{{ $service->zaposleni_id }}</x-ui.table.column\n                    >\n                    <x-ui.table.column for-crud\n                        >{{ $service->admin_id }}</x-ui.table.column\n                    >\n                    <x-ui.table.column for-crud\n                        >{{ $service->status_id }}</x-ui.table.column\n                    >\n                    <x-ui.table.column for-crud\n                        >{{ $service->naziv }}</x-ui.table.column\n                    >\n                    <x-ui.table.column for-crud\n                        >{{ $service->opis }}</x-ui.table.column\n                    >\n                    <x-ui.table.action-column>\n                        @can('update', $service)\n                        <x-ui.action\n                            wire:navigate\n                            href=\"{{ route('dashboard.services.edit', $service) }}\"\n                            >Edit</x-ui.action\n                        >\n                        @endcan @can('delete', $service)\n                        <x-ui.action.danger\n                            wire:click=\"confirmDeletion({{ $service->id }})\"\n                            >Delete</x-ui.action.danger\n                        >\n                        @endcan\n                    </x-ui.table.action-column>\n                </x-ui.table.row>\n                @empty\n                <x-ui.table.row>\n                    <x-ui.table.column colspan=\"7\"\n                        >No {{ __('crud.services.collectionTitle') }} found.</x-ui.table.column\n                    >\n                </x-ui.table.row>\n                @endforelse\n            </x-slot>\n        </x-ui.table>\n\n        <div class=\"mt-2\">{{ $services->links() }}</div>\n    </x-ui.container.table>\n</div>\n"
            },
            "item_38": {
                "path": "app/Livewire/Dashboard",
                "name": "ServiceIndex.php",
                "fullPath": "app/Livewire/Dashboard/ServiceIndex.php",
                "template": "crud/views/livewire/IndexComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 38,
                "createdAt": "2025-06-28 23:15:18",
                "updatedAt": "2025-06-28 23:19:21",
                "content": "<?php\n\nnamespace App\\Livewire\\Dashboard;\n\nuse Livewire\\Component;\nuse App\\Models\\Service;\nuse Livewire\\WithPagination;\n\nclass ServiceIndex extends Component\n{\n    use WithPagination;\n\n    public $search;\n    public $sortField = 'updated_at';\n    public $sortDirection = 'desc';\n\n    public $queryString = ['search', 'sortField', 'sortDirection'];\n\n    public $confirmingDeletion = false;\n    public $deletingService;\n\n    public function updatingSearch()\n    {\n        $this->resetPage();\n    }\n\n    public function confirmDeletion(string $id)\n    {\n        $this->deletingService = $id;\n\n        $this->confirmingDeletion = true;\n    }\n\n    public function delete(Service $service)\n    {\n        $service->delete();\n\n        $this->confirmingDeletion = false;\n    }\n\n    public function sortBy($field)\n    {\n        if ($this->sortField === $field) {\n            $this->sortDirection =\n                $this->sortDirection === 'asc' ? 'desc' : 'asc';\n        } else {\n            $this->sortDirection = 'asc';\n        }\n\n        $this->sortField = $field;\n    }\n\n    public function getRowsProperty()\n    {\n        return $this->rowsQuery->paginate(5);\n    }\n\n    public function getRowsQueryProperty()\n    {\n        return Service::query()\n            ->orderBy($this->sortField, $this->sortDirection)\n            ->where('naziv', 'like', \"%{$this->search}%\");\n    }\n\n    public function render()\n    {\n        return view('livewire.dashboard.services.index', [\n            'services' => $this->rows,\n        ]);\n    }\n}\n"
            },
            "item_39": {
                "path": "resources/views/livewire/dashboard/services",
                "name": "create.blade.php",
                "fullPath": "resources/views/livewire/dashboard/services/create.blade.php",
                "template": "crud/views/livewire/CreateView.vemtl",
                "projectId": 1,
                "type": "blade",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 39,
                "createdAt": "2025-06-28 23:15:18",
                "updatedAt": "2025-06-28 23:19:21",
                "content": "<div class=\"max-w-7xl mx-auto py-10 sm:px-6 lg:px-8 space-y-4\">\n    <x-ui.breadcrumbs>\n        <x-ui.breadcrumbs.link href=\"/dashboard\"\n            >Dashboard</x-ui.breadcrumbs.link\n        >\n        <x-ui.breadcrumbs.separator />\n        <x-ui.breadcrumbs.link href=\"{{ route('dashboard.services.index') }}\"\n            >{{ __('crud.services.collectionTitle') }}</x-ui.breadcrumbs.link\n        >\n        <x-ui.breadcrumbs.separator />\n        <x-ui.breadcrumbs.link active\n            >Create {{ __('crud.services.itemTitle') }}</x-ui.breadcrumbs.link\n        >\n    </x-ui.breadcrumbs>\n\n    <div class=\"w-full text-gray-500 text-lg font-semibold py-4 uppercase\">\n        <h1>Create {{ __('crud.services.itemTitle') }}</h1>\n    </div>\n\n    <div class=\"overflow-hidden border rounded-lg bg-white\">\n        <form class=\"w-full mb-0\" wire:submit.prevent=\"save\">\n            <div class=\"p-6 space-y-3\">\n                <div class=\"w-full\">\n                    <x-ui.label for=\"vozilo_id\"\n                        >{{ __('crud.services.inputs.vozilo_id.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.select\n                        wire:model=\"form.vozilo_id\"\n                        name=\"vozilo_id\"\n                        id=\"vozilo_id\"\n                        class=\"w-full\"\n                    >\n                        <option value=\"\">Select data</option>\n                        @foreach ($vehicles as $value => $label)\n                        <option value=\"{{ $value }}\">{{ $label }}</option>\n                        @endforeach\n                    </x-ui.input.select>\n                    <x-ui.input.error for=\"form.vozilo_id\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"zaposleni_id\"\n                        >{{ __('crud.services.inputs.zaposleni_id.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.select\n                        wire:model=\"form.zaposleni_id\"\n                        name=\"zaposleni_id\"\n                        id=\"zaposleni_id\"\n                        class=\"w-full\"\n                    >\n                        <option value=\"\">Select data</option>\n                        @foreach ($users as $value => $label)\n                        <option value=\"{{ $value }}\">{{ $label }}</option>\n                        @endforeach\n                    </x-ui.input.select>\n                    <x-ui.input.error for=\"form.zaposleni_id\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"admin_id\"\n                        >{{ __('crud.services.inputs.admin_id.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.select\n                        wire:model=\"form.admin_id\"\n                        name=\"admin_id\"\n                        id=\"admin_id\"\n                        class=\"w-full\"\n                    >\n                        <option value=\"\">Select data</option>\n                        @foreach ($users as $value => $label)\n                        <option value=\"{{ $value }}\">{{ $label }}</option>\n                        @endforeach\n                    </x-ui.input.select>\n                    <x-ui.input.error for=\"form.admin_id\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"status_id\"\n                        >{{ __('crud.services.inputs.status_id.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.select\n                        wire:model=\"form.status_id\"\n                        name=\"status_id\"\n                        id=\"status_id\"\n                        class=\"w-full\"\n                    >\n                        <option value=\"\">Select data</option>\n                        @foreach ($statuses as $value => $label)\n                        <option value=\"{{ $value }}\">{{ $label }}</option>\n                        @endforeach\n                    </x-ui.input.select>\n                    <x-ui.input.error for=\"form.status_id\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"naziv\"\n                        >{{ __('crud.services.inputs.naziv.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.text\n                        class=\"w-full\"\n                        wire:model=\"form.naziv\"\n                        name=\"naziv\"\n                        id=\"naziv\"\n                        placeholder=\"{{ __('crud.services.inputs.naziv.placeholder') }}\"\n                    />\n                    <x-ui.input.error for=\"form.naziv\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"opis\"\n                        >{{ __('crud.services.inputs.opis.label') }}</x-ui.label\n                    >\n                    <x-ui.input.textarea\n                        class=\"w-full\"\n                        wire:model=\"form.opis\"\n                        rows=\"6\"\n                        name=\"opis\"\n                        id=\"opis\"\n                        placeholder=\"{{ __('crud.services.inputs.opis.placeholder') }}\"\n                    />\n                    <x-ui.input.error for=\"form.opis\" />\n                </div>\n            </div>\n\n            <div class=\"flex justify-between mt-4 border-t border-gray-50 p-4\">\n                <div>\n                    <!-- Other buttons here -->\n                </div>\n                <div>\n                    <x-ui.button type=\"submit\">Save</x-ui.button>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>\n"
            },
            "item_40": {
                "path": "app/Livewire/Dashboard",
                "name": "ServiceCreate.php",
                "fullPath": "app/Livewire/Dashboard/ServiceCreate.php",
                "template": "crud/views/livewire/CreateComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 40,
                "createdAt": "2025-06-28 23:15:18",
                "updatedAt": "2025-06-28 23:19:21",
                "content": "<?php\n\nnamespace App\\Livewire\\Dashboard;\n\nuse App\\Models\\User;\nuse App\\Models\\Status;\nuse Livewire\\Component;\nuse App\\Models\\Vehicle;\nuse Livewire\\WithFileUploads;\nuse Illuminate\\Support\\Collection;\nuse App\\Livewire\\Dashboard\\Services\\Forms\\CreateForm;\n\nclass ServiceCreate extends Component\n{\n    use WithFileUploads;\n\n    public CreateForm $form;\n    public Collection $vehicles;\n    public Collection $users;\n    public Collection $users;\n    public Collection $statuses;\n\n    public function mount()\n    {\n        $this->vehicles = Vehicle::pluck('registarski_broj', 'id');\n        $this->users = User::pluck('ime', 'id');\n        $this->users = User::pluck('ime', 'id');\n        $this->statuses = Status::pluck('naziv', 'id');\n    }\n\n    public function save()\n    {\n        $this->authorize('create', Service::class);\n\n        $this->validate();\n\n        $service = $this->form->save();\n\n        return redirect()->route('dashboard.services.edit', $service);\n    }\n\n    public function render()\n    {\n        return view('livewire.dashboard.services.create', []);\n    }\n}\n"
            },
            "item_41": {
                "path": "resources/views/livewire/dashboard/services",
                "name": "edit.blade.php",
                "fullPath": "resources/views/livewire/dashboard/services/edit.blade.php",
                "template": "crud/views/livewire/EditView.vemtl",
                "projectId": 1,
                "type": "blade",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 41,
                "createdAt": "2025-06-28 23:15:18",
                "updatedAt": "2025-06-28 23:19:21",
                "content": "<div class=\"max-w-7xl mx-auto py-10 sm:px-6 lg:px-8 space-y-4\">\n    <x-ui.breadcrumbs>\n        <x-ui.breadcrumbs.link href=\"/dashboard\"\n            >Dashboard</x-ui.breadcrumbs.link\n        >\n        <x-ui.breadcrumbs.separator />\n        <x-ui.breadcrumbs.link href=\"{{ route('dashboard.services.index') }}\"\n            >{{ __('crud.services.collectionTitle') }}</x-ui.breadcrumbs.link\n        >\n        <x-ui.breadcrumbs.separator />\n        <x-ui.breadcrumbs.link active\n            >Edit {{ __('crud.services.itemTitle') }}</x-ui.breadcrumbs.link\n        >\n    </x-ui.breadcrumbs>\n\n    <x-ui.toast on=\"saved\"> Service saved successfully. </x-ui.toast>\n\n    <div class=\"w-full text-gray-500 text-lg font-semibold py-4 uppercase\">\n        <h1>Edit {{ __('crud.services.itemTitle') }}</h1>\n    </div>\n\n    <div class=\"overflow-hidden border rounded-lg bg-white\">\n        <form class=\"w-full mb-0\" wire:submit.prevent=\"save\">\n            <div class=\"p-6 space-y-3\">\n                <div class=\"w-full\">\n                    <x-ui.label for=\"vozilo_id\"\n                        >{{ __('crud.services.inputs.vozilo_id.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.select\n                        wire:model=\"form.vozilo_id\"\n                        name=\"vozilo_id\"\n                        id=\"vozilo_id\"\n                        class=\"w-full\"\n                    >\n                        <option value=\"\">Select data</option>\n                        @foreach ($vehicles as $value => $label)\n                        <option value=\"{{ $value }}\">{{ $label }}</option>\n                        @endforeach\n                    </x-ui.input.select>\n                    <x-ui.input.error for=\"form.vozilo_id\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"zaposleni_id\"\n                        >{{ __('crud.services.inputs.zaposleni_id.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.select\n                        wire:model=\"form.zaposleni_id\"\n                        name=\"zaposleni_id\"\n                        id=\"zaposleni_id\"\n                        class=\"w-full\"\n                    >\n                        <option value=\"\">Select data</option>\n                        @foreach ($users as $value => $label)\n                        <option value=\"{{ $value }}\">{{ $label }}</option>\n                        @endforeach\n                    </x-ui.input.select>\n                    <x-ui.input.error for=\"form.zaposleni_id\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"admin_id\"\n                        >{{ __('crud.services.inputs.admin_id.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.select\n                        wire:model=\"form.admin_id\"\n                        name=\"admin_id\"\n                        id=\"admin_id\"\n                        class=\"w-full\"\n                    >\n                        <option value=\"\">Select data</option>\n                        @foreach ($users as $value => $label)\n                        <option value=\"{{ $value }}\">{{ $label }}</option>\n                        @endforeach\n                    </x-ui.input.select>\n                    <x-ui.input.error for=\"form.admin_id\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"status_id\"\n                        >{{ __('crud.services.inputs.status_id.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.select\n                        wire:model=\"form.status_id\"\n                        name=\"status_id\"\n                        id=\"status_id\"\n                        class=\"w-full\"\n                    >\n                        <option value=\"\">Select data</option>\n                        @foreach ($statuses as $value => $label)\n                        <option value=\"{{ $value }}\">{{ $label }}</option>\n                        @endforeach\n                    </x-ui.input.select>\n                    <x-ui.input.error for=\"form.status_id\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"naziv\"\n                        >{{ __('crud.services.inputs.naziv.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.text\n                        class=\"w-full\"\n                        wire:model=\"form.naziv\"\n                        name=\"naziv\"\n                        id=\"naziv\"\n                        placeholder=\"{{ __('crud.services.inputs.naziv.placeholder') }}\"\n                    />\n                    <x-ui.input.error for=\"form.naziv\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"opis\"\n                        >{{ __('crud.services.inputs.opis.label') }}</x-ui.label\n                    >\n                    <x-ui.input.textarea\n                        class=\"w-full\"\n                        wire:model=\"form.opis\"\n                        rows=\"6\"\n                        name=\"opis\"\n                        id=\"opis\"\n                        placeholder=\"{{ __('crud.services.inputs.opis.placeholder') }}\"\n                    />\n                    <x-ui.input.error for=\"form.opis\" />\n                </div>\n            </div>\n\n            <div class=\"flex justify-between mt-4 border-t border-gray-50 p-4\">\n                <div>\n                    <!-- Other buttons here -->\n                </div>\n                <div>\n                    <x-ui.button type=\"submit\">Save</x-ui.button>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>\n"
            },
            "item_42": {
                "path": "app/Livewire/Dashboard",
                "name": "ServiceEdit.php",
                "fullPath": "app/Livewire/Dashboard/ServiceEdit.php",
                "template": "crud/views/livewire/EditComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 42,
                "createdAt": "2025-06-28 23:15:18",
                "updatedAt": "2025-06-28 23:19:21",
                "content": "<?php\n\nnamespace App\\Livewire\\Dashboard;\n\nuse App\\Models\\User;\nuse App\\Models\\Status;\nuse Livewire\\Component;\nuse App\\Models\\Service;\nuse App\\Models\\Vehicle;\nuse Illuminate\\Support\\Collection;\nuse App\\Livewire\\Dashboard\\Services\\Forms\\UpdateForm;\n\nclass ServiceEdit extends Component\n{\n    public ?Service $service = null;\n\n    public UpdateForm $form;\n    public Collection $vehicles;\n    public Collection $users;\n    public Collection $users;\n    public Collection $statuses;\n\n    public function mount(Service $service)\n    {\n        $this->authorize('view-any', Service::class);\n\n        $this->service = $service;\n\n        $this->form->setService($service);\n        $this->vehicles = Vehicle::pluck('registarski_broj', 'id');\n        $this->users = User::pluck('ime', 'id');\n        $this->users = User::pluck('ime', 'id');\n        $this->statuses = Status::pluck('naziv', 'id');\n    }\n\n    public function save()\n    {\n        $this->authorize('update', $this->service);\n\n        $this->validate();\n\n        $this->form->save();\n\n        $this->dispatch('saved');\n    }\n\n    public function render()\n    {\n        return view('livewire.dashboard.services.edit', []);\n    }\n}\n"
            },
            "item_43": {
                "path": "app/Livewire/Dashboard/Services/Forms",
                "name": "CreateForm.php",
                "fullPath": "app/Livewire/Dashboard/Services/Forms/CreateForm.php",
                "template": "crud/views/livewire/CreateFormComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 43,
                "createdAt": "2025-06-28 23:15:18",
                "updatedAt": "2025-06-28 23:19:21",
                "content": "<?php\n\nnamespace App\\Livewire\\Dashboard\\Services\\Forms;\n\nuse Livewire\\Form;\nuse App\\Models\\Service;\nuse Livewire\\Attributes\\Rule;\n\nclass CreateForm extends Form\n{\n    #[Rule('required')]\n    public $vozilo_id = '';\n\n    #[Rule('required')]\n    public $zaposleni_id = '';\n\n    #[Rule('required')]\n    public $admin_id = '';\n\n    #[Rule('required')]\n    public $status_id = '';\n\n    #[Rule('required|string')]\n    public $naziv = '';\n\n    #[Rule('nullable|string')]\n    public $opis = '';\n\n    public function save()\n    {\n        $this->validate();\n\n        $service = Service::create($this->except([]));\n\n        $this->reset();\n\n        return $service;\n    }\n}\n"
            },
            "item_44": {
                "path": "app/Livewire/Dashboard/Services/Forms",
                "name": "UpdateForm.php",
                "fullPath": "app/Livewire/Dashboard/Services/Forms/UpdateForm.php",
                "template": "crud/views/livewire/UpdateFormComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 44,
                "createdAt": "2025-06-28 23:15:18",
                "updatedAt": "2025-06-28 23:19:21",
                "content": "<?php\n\nnamespace App\\Livewire\\Dashboard\\Services\\Forms;\n\nuse Livewire\\Form;\nuse App\\Models\\Service;\nuse Illuminate\\Validation\\Rule;\n\nclass UpdateForm extends Form\n{\n    public ?Service $service;\n\n    public $vozilo_id = '';\n\n    public $zaposleni_id = '';\n\n    public $admin_id = '';\n\n    public $status_id = '';\n\n    public $naziv = '';\n\n    public $opis = '';\n\n    public function rules(): array\n    {\n        return [\n            'vozilo_id' => ['required'],\n            'zaposleni_id' => ['required'],\n            'admin_id' => ['required'],\n            'status_id' => ['required'],\n            'naziv' => ['required', 'string'],\n            'opis' => ['nullable', 'string'],\n        ];\n    }\n\n    public function setService(Service $service)\n    {\n        $this->service = $service;\n\n        $this->vozilo_id = $service->vozilo_id;\n        $this->zaposleni_id = $service->zaposleni_id;\n        $this->admin_id = $service->admin_id;\n        $this->status_id = $service->status_id;\n        $this->naziv = $service->naziv;\n        $this->opis = $service->opis;\n    }\n\n    public function save()\n    {\n        $this->validate();\n\n        $this->service->update(\n            $this->except([\n                'service',\n                'vozilo_id',\n                'zaposleni_id',\n                'admin_id',\n                'status_id',\n            ])\n        );\n    }\n}\n"
            },
            "item_45": {
                "path": "resources/views/livewire/dashboard/vehicles",
                "name": "index.blade.php",
                "fullPath": "resources/views/livewire/dashboard/vehicles/index.blade.php",
                "template": "crud/views/livewire/IndexView.vemtl",
                "projectId": 1,
                "type": "blade",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 45,
                "createdAt": "2025-06-28 23:15:18",
                "updatedAt": "2025-06-28 23:19:21",
                "content": "<div class=\"max-w-7xl mx-auto py-10 sm:px-6 lg:px-8 space-y-4\">\n    <x-ui.breadcrumbs>\n        <x-ui.breadcrumbs.link href=\"/dashboard\"\n            >Dashboard</x-ui.breadcrumbs.link\n        >\n        <x-ui.breadcrumbs.separator />\n        <x-ui.breadcrumbs.link active\n            >{{ __('crud.vehicles.collectionTitle') }}</x-ui.breadcrumbs.link\n        >\n    </x-ui.breadcrumbs>\n\n    <div class=\"flex justify-between align-top py-4\">\n        <x-ui.input\n            wire:model.live=\"search\"\n            type=\"text\"\n            placeholder=\"Search {{ __('crud.vehicles.collectionTitle') }}...\"\n        />\n\n        @can('create', App\\Models\\Vehicle::class)\n        <a wire:navigate href=\"{{ route('dashboard.vehicles.create') }}\">\n            <x-ui.button>New</x-ui.button>\n        </a>\n        @endcan\n    </div>\n\n    {{-- Delete Modal --}}\n    <x-ui.modal.confirm wire:model=\"confirmingDeletion\">\n        <x-slot name=\"title\"> {{ __('Delete') }} </x-slot>\n\n        <x-slot name=\"content\"> {{ __('Are you sure?') }} </x-slot>\n\n        <x-slot name=\"footer\">\n            <x-ui.button\n                wire:click=\"$toggle('confirmingDeletion')\"\n                wire:loading.attr=\"disabled\"\n            >\n                {{ __('Cancel') }}\n            </x-ui.button>\n\n            <x-ui.button.danger\n                class=\"ml-3\"\n                wire:click=\"delete({{ $deletingVehicle }})\"\n                wire:loading.attr=\"disabled\"\n            >\n                {{ __('Delete') }}\n            </x-ui.button.danger>\n        </x-slot>\n    </x-ui.modal.confirm>\n\n    {{-- Index Table --}}\n    <x-ui.container.table>\n        <x-ui.table>\n            <x-slot name=\"head\">\n                <x-ui.table.header for-crud wire:click=\"sortBy('klijent_id')\"\n                    >{{ __('crud.vehicles.inputs.klijent_id.label')\n                    }}</x-ui.table.header\n                >\n                <x-ui.table.header\n                    for-crud\n                    wire:click=\"sortBy('registarski_broj')\"\n                    >{{ __('crud.vehicles.inputs.registarski_broj.label')\n                    }}</x-ui.table.header\n                >\n                <x-ui.table.header for-crud wire:click=\"sortBy('marka')\"\n                    >{{ __('crud.vehicles.inputs.marka.label')\n                    }}</x-ui.table.header\n                >\n                <x-ui.table.header for-crud wire:click=\"sortBy('model')\"\n                    >{{ __('crud.vehicles.inputs.model.label')\n                    }}</x-ui.table.header\n                >\n                <x-ui.table.header\n                    for-crud\n                    wire:click=\"sortBy('godina_proizvodnje')\"\n                    >{{ __('crud.vehicles.inputs.godina_proizvodnje.label')\n                    }}</x-ui.table.header\n                >\n                <x-ui.table.action-header>Actions</x-ui.table.action-header>\n            </x-slot>\n\n            <x-slot name=\"body\">\n                @forelse ($vehicles as $vehicle)\n                <x-ui.table.row wire:loading.class.delay=\"opacity-75\">\n                    <x-ui.table.column for-crud\n                        >{{ $vehicle->klijent_id }}</x-ui.table.column\n                    >\n                    <x-ui.table.column for-crud\n                        >{{ $vehicle->registarski_broj }}</x-ui.table.column\n                    >\n                    <x-ui.table.column for-crud\n                        >{{ $vehicle->marka }}</x-ui.table.column\n                    >\n                    <x-ui.table.column for-crud\n                        >{{ $vehicle->model }}</x-ui.table.column\n                    >\n                    <x-ui.table.column for-crud\n                        >{{ $vehicle->godina_proizvodnje }}</x-ui.table.column\n                    >\n                    <x-ui.table.action-column>\n                        @can('update', $vehicle)\n                        <x-ui.action\n                            wire:navigate\n                            href=\"{{ route('dashboard.vehicles.edit', $vehicle) }}\"\n                            >Edit</x-ui.action\n                        >\n                        @endcan @can('delete', $vehicle)\n                        <x-ui.action.danger\n                            wire:click=\"confirmDeletion({{ $vehicle->id }})\"\n                            >Delete</x-ui.action.danger\n                        >\n                        @endcan\n                    </x-ui.table.action-column>\n                </x-ui.table.row>\n                @empty\n                <x-ui.table.row>\n                    <x-ui.table.column colspan=\"6\"\n                        >No {{ __('crud.vehicles.collectionTitle') }} found.</x-ui.table.column\n                    >\n                </x-ui.table.row>\n                @endforelse\n            </x-slot>\n        </x-ui.table>\n\n        <div class=\"mt-2\">{{ $vehicles->links() }}</div>\n    </x-ui.container.table>\n</div>\n"
            },
            "item_46": {
                "path": "app/Livewire/Dashboard",
                "name": "VehicleIndex.php",
                "fullPath": "app/Livewire/Dashboard/VehicleIndex.php",
                "template": "crud/views/livewire/IndexComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 46,
                "createdAt": "2025-06-28 23:15:18",
                "updatedAt": "2025-06-28 23:19:21",
                "content": "<?php\n\nnamespace App\\Livewire\\Dashboard;\n\nuse Livewire\\Component;\nuse App\\Models\\Vehicle;\nuse Livewire\\WithPagination;\n\nclass VehicleIndex extends Component\n{\n    use WithPagination;\n\n    public $search;\n    public $sortField = 'updated_at';\n    public $sortDirection = 'desc';\n\n    public $queryString = ['search', 'sortField', 'sortDirection'];\n\n    public $confirmingDeletion = false;\n    public $deletingVehicle;\n\n    public function updatingSearch()\n    {\n        $this->resetPage();\n    }\n\n    public function confirmDeletion(string $id)\n    {\n        $this->deletingVehicle = $id;\n\n        $this->confirmingDeletion = true;\n    }\n\n    public function delete(Vehicle $vehicle)\n    {\n        $vehicle->delete();\n\n        $this->confirmingDeletion = false;\n    }\n\n    public function sortBy($field)\n    {\n        if ($this->sortField === $field) {\n            $this->sortDirection =\n                $this->sortDirection === 'asc' ? 'desc' : 'asc';\n        } else {\n            $this->sortDirection = 'asc';\n        }\n\n        $this->sortField = $field;\n    }\n\n    public function getRowsProperty()\n    {\n        return $this->rowsQuery->paginate(5);\n    }\n\n    public function getRowsQueryProperty()\n    {\n        return Vehicle::query()\n            ->orderBy($this->sortField, $this->sortDirection)\n            ->where('registarski_broj', 'like', \"%{$this->search}%\");\n    }\n\n    public function render()\n    {\n        return view('livewire.dashboard.vehicles.index', [\n            'vehicles' => $this->rows,\n        ]);\n    }\n}\n"
            },
            "item_47": {
                "path": "resources/views/livewire/dashboard/vehicles",
                "name": "create.blade.php",
                "fullPath": "resources/views/livewire/dashboard/vehicles/create.blade.php",
                "template": "crud/views/livewire/CreateView.vemtl",
                "projectId": 1,
                "type": "blade",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 47,
                "createdAt": "2025-06-28 23:15:18",
                "updatedAt": "2025-06-28 23:19:21",
                "content": "<div class=\"max-w-7xl mx-auto py-10 sm:px-6 lg:px-8 space-y-4\">\n    <x-ui.breadcrumbs>\n        <x-ui.breadcrumbs.link href=\"/dashboard\"\n            >Dashboard</x-ui.breadcrumbs.link\n        >\n        <x-ui.breadcrumbs.separator />\n        <x-ui.breadcrumbs.link href=\"{{ route('dashboard.vehicles.index') }}\"\n            >{{ __('crud.vehicles.collectionTitle') }}</x-ui.breadcrumbs.link\n        >\n        <x-ui.breadcrumbs.separator />\n        <x-ui.breadcrumbs.link active\n            >Create {{ __('crud.vehicles.itemTitle') }}</x-ui.breadcrumbs.link\n        >\n    </x-ui.breadcrumbs>\n\n    <div class=\"w-full text-gray-500 text-lg font-semibold py-4 uppercase\">\n        <h1>Create {{ __('crud.vehicles.itemTitle') }}</h1>\n    </div>\n\n    <div class=\"overflow-hidden border rounded-lg bg-white\">\n        <form class=\"w-full mb-0\" wire:submit.prevent=\"save\">\n            <div class=\"p-6 space-y-3\">\n                <div class=\"w-full\">\n                    <x-ui.label for=\"klijent_id\"\n                        >{{ __('crud.vehicles.inputs.klijent_id.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.select\n                        wire:model=\"form.klijent_id\"\n                        name=\"klijent_id\"\n                        id=\"klijent_id\"\n                        class=\"w-full\"\n                    >\n                        <option value=\"\">Select data</option>\n                        @foreach ($users as $value => $label)\n                        <option value=\"{{ $value }}\">{{ $label }}</option>\n                        @endforeach\n                    </x-ui.input.select>\n                    <x-ui.input.error for=\"form.klijent_id\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"registarski_broj\"\n                        >{{ __('crud.vehicles.inputs.registarski_broj.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.text\n                        class=\"w-full\"\n                        wire:model=\"form.registarski_broj\"\n                        name=\"registarski_broj\"\n                        id=\"registarski_broj\"\n                        placeholder=\"{{ __('crud.vehicles.inputs.registarski_broj.placeholder') }}\"\n                    />\n                    <x-ui.input.error for=\"form.registarski_broj\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"marka\"\n                        >{{ __('crud.vehicles.inputs.marka.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.text\n                        class=\"w-full\"\n                        wire:model=\"form.marka\"\n                        name=\"marka\"\n                        id=\"marka\"\n                        placeholder=\"{{ __('crud.vehicles.inputs.marka.placeholder') }}\"\n                    />\n                    <x-ui.input.error for=\"form.marka\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"model\"\n                        >{{ __('crud.vehicles.inputs.model.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.text\n                        class=\"w-full\"\n                        wire:model=\"form.model\"\n                        name=\"model\"\n                        id=\"model\"\n                        placeholder=\"{{ __('crud.vehicles.inputs.model.placeholder') }}\"\n                    />\n                    <x-ui.input.error for=\"form.model\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"godina_proizvodnje\"\n                        >{{ __('crud.vehicles.inputs.godina_proizvodnje.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.number\n                        class=\"w-full\"\n                        wire:model=\"form.godina_proizvodnje\"\n                        name=\"godina_proizvodnje\"\n                        id=\"godina_proizvodnje\"\n                        placeholder=\"{{ __('crud.vehicles.inputs.godina_proizvodnje.placeholder') }}\"\n                        step=\"1\"\n                    />\n                    <x-ui.input.error for=\"form.godina_proizvodnje\" />\n                </div>\n            </div>\n\n            <div class=\"flex justify-between mt-4 border-t border-gray-50 p-4\">\n                <div>\n                    <!-- Other buttons here -->\n                </div>\n                <div>\n                    <x-ui.button type=\"submit\">Save</x-ui.button>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>\n"
            },
            "item_48": {
                "path": "app/Livewire/Dashboard",
                "name": "VehicleCreate.php",
                "fullPath": "app/Livewire/Dashboard/VehicleCreate.php",
                "template": "crud/views/livewire/CreateComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 48,
                "createdAt": "2025-06-28 23:15:18",
                "updatedAt": "2025-06-28 23:19:21",
                "content": "<?php\n\nnamespace App\\Livewire\\Dashboard;\n\nuse App\\Models\\User;\nuse Livewire\\Component;\nuse Livewire\\WithFileUploads;\nuse Illuminate\\Support\\Collection;\nuse App\\Livewire\\Dashboard\\Vehicles\\Forms\\CreateForm;\n\nclass VehicleCreate extends Component\n{\n    use WithFileUploads;\n\n    public CreateForm $form;\n    public Collection $users;\n\n    public function mount()\n    {\n        $this->users = User::pluck('ime', 'id');\n    }\n\n    public function save()\n    {\n        $this->authorize('create', Vehicle::class);\n\n        $this->validate();\n\n        $vehicle = $this->form->save();\n\n        return redirect()->route('dashboard.vehicles.edit', $vehicle);\n    }\n\n    public function render()\n    {\n        return view('livewire.dashboard.vehicles.create', []);\n    }\n}\n"
            },
            "item_49": {
                "path": "resources/views/livewire/dashboard/vehicles",
                "name": "edit.blade.php",
                "fullPath": "resources/views/livewire/dashboard/vehicles/edit.blade.php",
                "template": "crud/views/livewire/EditView.vemtl",
                "projectId": 1,
                "type": "blade",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 49,
                "createdAt": "2025-06-28 23:15:18",
                "updatedAt": "2025-06-28 23:19:21",
                "content": "<div class=\"max-w-7xl mx-auto py-10 sm:px-6 lg:px-8 space-y-4\">\n    <x-ui.breadcrumbs>\n        <x-ui.breadcrumbs.link href=\"/dashboard\"\n            >Dashboard</x-ui.breadcrumbs.link\n        >\n        <x-ui.breadcrumbs.separator />\n        <x-ui.breadcrumbs.link href=\"{{ route('dashboard.vehicles.index') }}\"\n            >{{ __('crud.vehicles.collectionTitle') }}</x-ui.breadcrumbs.link\n        >\n        <x-ui.breadcrumbs.separator />\n        <x-ui.breadcrumbs.link active\n            >Edit {{ __('crud.vehicles.itemTitle') }}</x-ui.breadcrumbs.link\n        >\n    </x-ui.breadcrumbs>\n\n    <x-ui.toast on=\"saved\"> Vehicle saved successfully. </x-ui.toast>\n\n    <div class=\"w-full text-gray-500 text-lg font-semibold py-4 uppercase\">\n        <h1>Edit {{ __('crud.vehicles.itemTitle') }}</h1>\n    </div>\n\n    <div class=\"overflow-hidden border rounded-lg bg-white\">\n        <form class=\"w-full mb-0\" wire:submit.prevent=\"save\">\n            <div class=\"p-6 space-y-3\">\n                <div class=\"w-full\">\n                    <x-ui.label for=\"klijent_id\"\n                        >{{ __('crud.vehicles.inputs.klijent_id.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.select\n                        wire:model=\"form.klijent_id\"\n                        name=\"klijent_id\"\n                        id=\"klijent_id\"\n                        class=\"w-full\"\n                    >\n                        <option value=\"\">Select data</option>\n                        @foreach ($users as $value => $label)\n                        <option value=\"{{ $value }}\">{{ $label }}</option>\n                        @endforeach\n                    </x-ui.input.select>\n                    <x-ui.input.error for=\"form.klijent_id\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"registarski_broj\"\n                        >{{ __('crud.vehicles.inputs.registarski_broj.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.text\n                        class=\"w-full\"\n                        wire:model=\"form.registarski_broj\"\n                        name=\"registarski_broj\"\n                        id=\"registarski_broj\"\n                        placeholder=\"{{ __('crud.vehicles.inputs.registarski_broj.placeholder') }}\"\n                    />\n                    <x-ui.input.error for=\"form.registarski_broj\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"marka\"\n                        >{{ __('crud.vehicles.inputs.marka.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.text\n                        class=\"w-full\"\n                        wire:model=\"form.marka\"\n                        name=\"marka\"\n                        id=\"marka\"\n                        placeholder=\"{{ __('crud.vehicles.inputs.marka.placeholder') }}\"\n                    />\n                    <x-ui.input.error for=\"form.marka\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"model\"\n                        >{{ __('crud.vehicles.inputs.model.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.text\n                        class=\"w-full\"\n                        wire:model=\"form.model\"\n                        name=\"model\"\n                        id=\"model\"\n                        placeholder=\"{{ __('crud.vehicles.inputs.model.placeholder') }}\"\n                    />\n                    <x-ui.input.error for=\"form.model\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"godina_proizvodnje\"\n                        >{{ __('crud.vehicles.inputs.godina_proizvodnje.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.number\n                        class=\"w-full\"\n                        wire:model=\"form.godina_proizvodnje\"\n                        name=\"godina_proizvodnje\"\n                        id=\"godina_proizvodnje\"\n                        placeholder=\"{{ __('crud.vehicles.inputs.godina_proizvodnje.placeholder') }}\"\n                        step=\"1\"\n                    />\n                    <x-ui.input.error for=\"form.godina_proizvodnje\" />\n                </div>\n            </div>\n\n            <div class=\"flex justify-between mt-4 border-t border-gray-50 p-4\">\n                <div>\n                    <!-- Other buttons here -->\n                </div>\n                <div>\n                    <x-ui.button type=\"submit\">Save</x-ui.button>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>\n"
            },
            "item_50": {
                "path": "app/Livewire/Dashboard",
                "name": "VehicleEdit.php",
                "fullPath": "app/Livewire/Dashboard/VehicleEdit.php",
                "template": "crud/views/livewire/EditComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 50,
                "createdAt": "2025-06-28 23:15:18",
                "updatedAt": "2025-06-28 23:19:21",
                "content": "<?php\n\nnamespace App\\Livewire\\Dashboard;\n\nuse App\\Models\\User;\nuse Livewire\\Component;\nuse App\\Models\\Vehicle;\nuse Illuminate\\Support\\Collection;\nuse App\\Livewire\\Dashboard\\Vehicles\\Forms\\UpdateForm;\n\nclass VehicleEdit extends Component\n{\n    public ?Vehicle $vehicle = null;\n\n    public UpdateForm $form;\n    public Collection $users;\n\n    public function mount(Vehicle $vehicle)\n    {\n        $this->authorize('view-any', Vehicle::class);\n\n        $this->vehicle = $vehicle;\n\n        $this->form->setVehicle($vehicle);\n        $this->users = User::pluck('ime', 'id');\n    }\n\n    public function save()\n    {\n        $this->authorize('update', $this->vehicle);\n\n        $this->validate();\n\n        $this->form->save();\n\n        $this->dispatch('saved');\n    }\n\n    public function render()\n    {\n        return view('livewire.dashboard.vehicles.edit', []);\n    }\n}\n"
            },
            "item_51": {
                "path": "app/Livewire/Dashboard/Vehicles/Forms",
                "name": "CreateForm.php",
                "fullPath": "app/Livewire/Dashboard/Vehicles/Forms/CreateForm.php",
                "template": "crud/views/livewire/CreateFormComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 51,
                "createdAt": "2025-06-28 23:15:18",
                "updatedAt": "2025-06-28 23:19:21",
                "content": "<?php\n\nnamespace App\\Livewire\\Dashboard\\Vehicles\\Forms;\n\nuse Livewire\\Form;\nuse App\\Models\\Vehicle;\nuse Livewire\\Attributes\\Rule;\n\nclass CreateForm extends Form\n{\n    #[Rule('required')]\n    public $klijent_id = '';\n\n    #[Rule('required|string')]\n    public $registarski_broj = '';\n\n    #[Rule('required|string')]\n    public $marka = '';\n\n    #[Rule('required|string')]\n    public $model = '';\n\n    #[Rule('required')]\n    public $godina_proizvodnje = '';\n\n    public function save()\n    {\n        $this->validate();\n\n        $vehicle = Vehicle::create($this->except([]));\n\n        $this->reset();\n\n        return $vehicle;\n    }\n}\n"
            },
            "item_52": {
                "path": "app/Livewire/Dashboard/Vehicles/Forms",
                "name": "UpdateForm.php",
                "fullPath": "app/Livewire/Dashboard/Vehicles/Forms/UpdateForm.php",
                "template": "crud/views/livewire/UpdateFormComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 52,
                "createdAt": "2025-06-28 23:15:18",
                "updatedAt": "2025-06-28 23:19:21",
                "content": "<?php\n\nnamespace App\\Livewire\\Dashboard\\Vehicles\\Forms;\n\nuse Livewire\\Form;\nuse App\\Models\\Vehicle;\nuse Illuminate\\Validation\\Rule;\n\nclass UpdateForm extends Form\n{\n    public ?Vehicle $vehicle;\n\n    public $klijent_id = '';\n\n    public $registarski_broj = '';\n\n    public $marka = '';\n\n    public $model = '';\n\n    public $godina_proizvodnje = '';\n\n    public function rules(): array\n    {\n        return [\n            'klijent_id' => ['required'],\n            'registarski_broj' => ['required', 'string'],\n            'marka' => ['required', 'string'],\n            'model' => ['required', 'string'],\n            'godina_proizvodnje' => ['required'],\n        ];\n    }\n\n    public function setVehicle(Vehicle $vehicle)\n    {\n        $this->vehicle = $vehicle;\n\n        $this->klijent_id = $vehicle->klijent_id;\n        $this->registarski_broj = $vehicle->registarski_broj;\n        $this->marka = $vehicle->marka;\n        $this->model = $vehicle->model;\n        $this->godina_proizvodnje = $vehicle->godina_proizvodnje;\n    }\n\n    public function save()\n    {\n        $this->validate();\n\n        $this->vehicle->update($this->except(['vehicle', 'klijent_id']));\n    }\n}\n"
            },
            "item_53": {
                "path": "resources/views/livewire/dashboard/statuses",
                "name": "index.blade.php",
                "fullPath": "resources/views/livewire/dashboard/statuses/index.blade.php",
                "template": "crud/views/livewire/IndexView.vemtl",
                "projectId": 1,
                "type": "blade",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 53,
                "createdAt": "2025-06-28 23:15:18",
                "updatedAt": "2025-06-28 23:19:21",
                "content": "<div class=\"max-w-7xl mx-auto py-10 sm:px-6 lg:px-8 space-y-4\">\n    <x-ui.breadcrumbs>\n        <x-ui.breadcrumbs.link href=\"/dashboard\"\n            >Dashboard</x-ui.breadcrumbs.link\n        >\n        <x-ui.breadcrumbs.separator />\n        <x-ui.breadcrumbs.link active\n            >{{ __('crud.statuses.collectionTitle') }}</x-ui.breadcrumbs.link\n        >\n    </x-ui.breadcrumbs>\n\n    <div class=\"flex justify-between align-top py-4\">\n        <x-ui.input\n            wire:model.live=\"search\"\n            type=\"text\"\n            placeholder=\"Search {{ __('crud.statuses.collectionTitle') }}...\"\n        />\n\n        @can('create', App\\Models\\Status::class)\n        <a wire:navigate href=\"{{ route('dashboard.statuses.create') }}\">\n            <x-ui.button>New</x-ui.button>\n        </a>\n        @endcan\n    </div>\n\n    {{-- Delete Modal --}}\n    <x-ui.modal.confirm wire:model=\"confirmingDeletion\">\n        <x-slot name=\"title\"> {{ __('Delete') }} </x-slot>\n\n        <x-slot name=\"content\"> {{ __('Are you sure?') }} </x-slot>\n\n        <x-slot name=\"footer\">\n            <x-ui.button\n                wire:click=\"$toggle('confirmingDeletion')\"\n                wire:loading.attr=\"disabled\"\n            >\n                {{ __('Cancel') }}\n            </x-ui.button>\n\n            <x-ui.button.danger\n                class=\"ml-3\"\n                wire:click=\"delete({{ $deletingStatus }})\"\n                wire:loading.attr=\"disabled\"\n            >\n                {{ __('Delete') }}\n            </x-ui.button.danger>\n        </x-slot>\n    </x-ui.modal.confirm>\n\n    {{-- Index Table --}}\n    <x-ui.container.table>\n        <x-ui.table>\n            <x-slot name=\"head\">\n                <x-ui.table.header for-crud wire:click=\"sortBy('naziv')\"\n                    >{{ __('crud.statuses.inputs.naziv.label')\n                    }}</x-ui.table.header\n                >\n                <x-ui.table.action-header>Actions</x-ui.table.action-header>\n            </x-slot>\n\n            <x-slot name=\"body\">\n                @forelse ($statuses as $status)\n                <x-ui.table.row wire:loading.class.delay=\"opacity-75\">\n                    <x-ui.table.column for-crud\n                        >{{ $status->naziv }}</x-ui.table.column\n                    >\n                    <x-ui.table.action-column>\n                        @can('update', $status)\n                        <x-ui.action\n                            wire:navigate\n                            href=\"{{ route('dashboard.statuses.edit', $status) }}\"\n                            >Edit</x-ui.action\n                        >\n                        @endcan @can('delete', $status)\n                        <x-ui.action.danger\n                            wire:click=\"confirmDeletion({{ $status->id }})\"\n                            >Delete</x-ui.action.danger\n                        >\n                        @endcan\n                    </x-ui.table.action-column>\n                </x-ui.table.row>\n                @empty\n                <x-ui.table.row>\n                    <x-ui.table.column colspan=\"2\"\n                        >No {{ __('crud.statuses.collectionTitle') }} found.</x-ui.table.column\n                    >\n                </x-ui.table.row>\n                @endforelse\n            </x-slot>\n        </x-ui.table>\n\n        <div class=\"mt-2\">{{ $statuses->links() }}</div>\n    </x-ui.container.table>\n</div>\n"
            },
            "item_54": {
                "path": "app/Livewire/Dashboard",
                "name": "StatusIndex.php",
                "fullPath": "app/Livewire/Dashboard/StatusIndex.php",
                "template": "crud/views/livewire/IndexComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 54,
                "createdAt": "2025-06-28 23:15:18",
                "updatedAt": "2025-06-28 23:19:21",
                "content": "<?php\n\nnamespace App\\Livewire\\Dashboard;\n\nuse App\\Models\\Status;\nuse Livewire\\Component;\nuse Livewire\\WithPagination;\n\nclass StatusIndex extends Component\n{\n    use WithPagination;\n\n    public $search;\n    public $sortField = 'updated_at';\n    public $sortDirection = 'desc';\n\n    public $queryString = ['search', 'sortField', 'sortDirection'];\n\n    public $confirmingDeletion = false;\n    public $deletingStatus;\n\n    public function updatingSearch()\n    {\n        $this->resetPage();\n    }\n\n    public function confirmDeletion(string $id)\n    {\n        $this->deletingStatus = $id;\n\n        $this->confirmingDeletion = true;\n    }\n\n    public function delete(Status $status)\n    {\n        $status->delete();\n\n        $this->confirmingDeletion = false;\n    }\n\n    public function sortBy($field)\n    {\n        if ($this->sortField === $field) {\n            $this->sortDirection =\n                $this->sortDirection === 'asc' ? 'desc' : 'asc';\n        } else {\n            $this->sortDirection = 'asc';\n        }\n\n        $this->sortField = $field;\n    }\n\n    public function getRowsProperty()\n    {\n        return $this->rowsQuery->paginate(5);\n    }\n\n    public function getRowsQueryProperty()\n    {\n        return Status::query()\n            ->orderBy($this->sortField, $this->sortDirection)\n            ->where('naziv', 'like', \"%{$this->search}%\");\n    }\n\n    public function render()\n    {\n        return view('livewire.dashboard.statuses.index', [\n            'statuses' => $this->rows,\n        ]);\n    }\n}\n"
            },
            "item_55": {
                "path": "resources/views/livewire/dashboard/statuses",
                "name": "create.blade.php",
                "fullPath": "resources/views/livewire/dashboard/statuses/create.blade.php",
                "template": "crud/views/livewire/CreateView.vemtl",
                "projectId": 1,
                "type": "blade",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 55,
                "createdAt": "2025-06-28 23:15:18",
                "updatedAt": "2025-06-28 23:19:21",
                "content": "<div class=\"max-w-7xl mx-auto py-10 sm:px-6 lg:px-8 space-y-4\">\n    <x-ui.breadcrumbs>\n        <x-ui.breadcrumbs.link href=\"/dashboard\"\n            >Dashboard</x-ui.breadcrumbs.link\n        >\n        <x-ui.breadcrumbs.separator />\n        <x-ui.breadcrumbs.link href=\"{{ route('dashboard.statuses.index') }}\"\n            >{{ __('crud.statuses.collectionTitle') }}</x-ui.breadcrumbs.link\n        >\n        <x-ui.breadcrumbs.separator />\n        <x-ui.breadcrumbs.link active\n            >Create {{ __('crud.statuses.itemTitle') }}</x-ui.breadcrumbs.link\n        >\n    </x-ui.breadcrumbs>\n\n    <div class=\"w-full text-gray-500 text-lg font-semibold py-4 uppercase\">\n        <h1>Create {{ __('crud.statuses.itemTitle') }}</h1>\n    </div>\n\n    <div class=\"overflow-hidden border rounded-lg bg-white\">\n        <form class=\"w-full mb-0\" wire:submit.prevent=\"save\">\n            <div class=\"p-6 space-y-3\">\n                <div class=\"w-full\">\n                    <x-ui.label for=\"naziv\"\n                        >{{ __('crud.statuses.inputs.naziv.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.text\n                        class=\"w-full\"\n                        wire:model=\"form.naziv\"\n                        name=\"naziv\"\n                        id=\"naziv\"\n                        placeholder=\"{{ __('crud.statuses.inputs.naziv.placeholder') }}\"\n                    />\n                    <x-ui.input.error for=\"form.naziv\" />\n                </div>\n            </div>\n\n            <div class=\"flex justify-between mt-4 border-t border-gray-50 p-4\">\n                <div>\n                    <!-- Other buttons here -->\n                </div>\n                <div>\n                    <x-ui.button type=\"submit\">Save</x-ui.button>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>\n"
            },
            "item_56": {
                "path": "app/Livewire/Dashboard",
                "name": "StatusCreate.php",
                "fullPath": "app/Livewire/Dashboard/StatusCreate.php",
                "template": "crud/views/livewire/CreateComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 56,
                "createdAt": "2025-06-28 23:15:18",
                "updatedAt": "2025-06-28 23:19:21",
                "content": "<?php\n\nnamespace App\\Livewire\\Dashboard;\n\nuse Livewire\\Component;\nuse Livewire\\WithFileUploads;\nuse Illuminate\\Support\\Collection;\nuse App\\Livewire\\Dashboard\\Statuses\\Forms\\CreateForm;\n\nclass StatusCreate extends Component\n{\n    use WithFileUploads;\n\n    public CreateForm $form;\n\n    public function mount()\n    {\n    }\n\n    public function save()\n    {\n        $this->authorize('create', Status::class);\n\n        $this->validate();\n\n        $status = $this->form->save();\n\n        return redirect()->route('dashboard.statuses.edit', $status);\n    }\n\n    public function render()\n    {\n        return view('livewire.dashboard.statuses.create', []);\n    }\n}\n"
            },
            "item_57": {
                "path": "resources/views/livewire/dashboard/statuses",
                "name": "edit.blade.php",
                "fullPath": "resources/views/livewire/dashboard/statuses/edit.blade.php",
                "template": "crud/views/livewire/EditView.vemtl",
                "projectId": 1,
                "type": "blade",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 57,
                "createdAt": "2025-06-28 23:15:18",
                "updatedAt": "2025-06-28 23:19:21",
                "content": "<div class=\"max-w-7xl mx-auto py-10 sm:px-6 lg:px-8 space-y-4\">\n    <x-ui.breadcrumbs>\n        <x-ui.breadcrumbs.link href=\"/dashboard\"\n            >Dashboard</x-ui.breadcrumbs.link\n        >\n        <x-ui.breadcrumbs.separator />\n        <x-ui.breadcrumbs.link href=\"{{ route('dashboard.statuses.index') }}\"\n            >{{ __('crud.statuses.collectionTitle') }}</x-ui.breadcrumbs.link\n        >\n        <x-ui.breadcrumbs.separator />\n        <x-ui.breadcrumbs.link active\n            >Edit {{ __('crud.statuses.itemTitle') }}</x-ui.breadcrumbs.link\n        >\n    </x-ui.breadcrumbs>\n\n    <x-ui.toast on=\"saved\"> Status saved successfully. </x-ui.toast>\n\n    <div class=\"w-full text-gray-500 text-lg font-semibold py-4 uppercase\">\n        <h1>Edit {{ __('crud.statuses.itemTitle') }}</h1>\n    </div>\n\n    <div class=\"overflow-hidden border rounded-lg bg-white\">\n        <form class=\"w-full mb-0\" wire:submit.prevent=\"save\">\n            <div class=\"p-6 space-y-3\">\n                <div class=\"w-full\">\n                    <x-ui.label for=\"naziv\"\n                        >{{ __('crud.statuses.inputs.naziv.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.text\n                        class=\"w-full\"\n                        wire:model=\"form.naziv\"\n                        name=\"naziv\"\n                        id=\"naziv\"\n                        placeholder=\"{{ __('crud.statuses.inputs.naziv.placeholder') }}\"\n                    />\n                    <x-ui.input.error for=\"form.naziv\" />\n                </div>\n            </div>\n\n            <div class=\"flex justify-between mt-4 border-t border-gray-50 p-4\">\n                <div>\n                    <!-- Other buttons here -->\n                </div>\n                <div>\n                    <x-ui.button type=\"submit\">Save</x-ui.button>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>\n"
            },
            "item_58": {
                "path": "app/Livewire/Dashboard",
                "name": "StatusEdit.php",
                "fullPath": "app/Livewire/Dashboard/StatusEdit.php",
                "template": "crud/views/livewire/EditComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 58,
                "createdAt": "2025-06-28 23:15:18",
                "updatedAt": "2025-06-28 23:19:21",
                "content": "<?php\n\nnamespace App\\Livewire\\Dashboard;\n\nuse App\\Models\\Status;\nuse Livewire\\Component;\nuse Illuminate\\Support\\Collection;\nuse App\\Livewire\\Dashboard\\Statuses\\Forms\\UpdateForm;\n\nclass StatusEdit extends Component\n{\n    public ?Status $status = null;\n\n    public UpdateForm $form;\n\n    public function mount(Status $status)\n    {\n        $this->authorize('view-any', Status::class);\n\n        $this->status = $status;\n\n        $this->form->setStatus($status);\n    }\n\n    public function save()\n    {\n        $this->authorize('update', $this->status);\n\n        $this->validate();\n\n        $this->form->save();\n\n        $this->dispatch('saved');\n    }\n\n    public function render()\n    {\n        return view('livewire.dashboard.statuses.edit', []);\n    }\n}\n"
            },
            "item_59": {
                "path": "app/Livewire/Dashboard/Statuses/Forms",
                "name": "CreateForm.php",
                "fullPath": "app/Livewire/Dashboard/Statuses/Forms/CreateForm.php",
                "template": "crud/views/livewire/CreateFormComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 59,
                "createdAt": "2025-06-28 23:15:18",
                "updatedAt": "2025-06-28 23:19:21",
                "content": "<?php\n\nnamespace App\\Livewire\\Dashboard\\Statuses\\Forms;\n\nuse Livewire\\Form;\nuse App\\Models\\Status;\nuse Livewire\\Attributes\\Rule;\n\nclass CreateForm extends Form\n{\n    #[Rule('required|string')]\n    public $naziv = '';\n\n    public function save()\n    {\n        $this->validate();\n\n        $status = Status::create($this->except([]));\n\n        $this->reset();\n\n        return $status;\n    }\n}\n"
            },
            "item_60": {
                "path": "app/Livewire/Dashboard/Statuses/Forms",
                "name": "UpdateForm.php",
                "fullPath": "app/Livewire/Dashboard/Statuses/Forms/UpdateForm.php",
                "template": "crud/views/livewire/UpdateFormComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 60,
                "createdAt": "2025-06-28 23:15:18",
                "updatedAt": "2025-06-28 23:19:21",
                "content": "<?php\n\nnamespace App\\Livewire\\Dashboard\\Statuses\\Forms;\n\nuse Livewire\\Form;\nuse App\\Models\\Status;\nuse Illuminate\\Validation\\Rule;\n\nclass UpdateForm extends Form\n{\n    public ?Status $status;\n\n    public $naziv = '';\n\n    public function rules(): array\n    {\n        return [\n            'naziv' => ['required', 'string'],\n        ];\n    }\n\n    public function setStatus(Status $status)\n    {\n        $this->status = $status;\n\n        $this->naziv = $status->naziv;\n    }\n\n    public function save()\n    {\n        $this->validate();\n\n        $this->status->update($this->except(['status']));\n    }\n}\n"
            },
            "item_61": {
                "path": "/lang/en/",
                "name": "crud.php",
                "fullPath": "/lang/en//crud.php",
                "template": "NoTemplate",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 61,
                "createdAt": "2025-06-28 23:19:16",
                "updatedAt": "2025-06-28 23:19:21",
                "content": "<?php\n\nreturn [\n    'users' => [\n        'itemTitle' => 'User',\n        'collectionTitle' => 'Users',\n        'inputs' => [\n            'ime' => [\n                'label' => 'Ime',\n                'placeholder' => 'Ime',\n            ],\n            'prezime' => [\n                'label' => 'Prezime',\n                'placeholder' => 'Prezime',\n            ],\n            'email' => [\n                'label' => 'Email',\n                'placeholder' => 'Email',\n            ],\n            'password' => [\n                'label' => 'Password',\n                'placeholder' => 'Password',\n            ],\n            'broj_telefona' => [\n                'label' => 'Broj telefona',\n                'placeholder' => 'Broj telefona',\n            ],\n            'role' => [\n                'label' => 'Role',\n                'placeholder' => 'Role',\n            ],\n        ],\n    ],\n    'bills' => [\n        'itemTitle' => 'Bill',\n        'collectionTitle' => 'Bills',\n        'inputs' => [\n            'usluga_id' => [\n                'label' => 'Usluga id',\n                'placeholder' => 'Usluga id',\n            ],\n            'cena' => [\n                'label' => 'Cena',\n                'placeholder' => 'Cena',\n            ],\n        ],\n    ],\n    'services' => [\n        'itemTitle' => 'Service',\n        'collectionTitle' => 'Services',\n        'inputs' => [\n            'vozilo_id' => [\n                'label' => 'Vozilo id',\n                'placeholder' => 'Vozilo id',\n            ],\n            'zaposleni_id' => [\n                'label' => 'Zaposleni id',\n                'placeholder' => 'Zaposleni id',\n            ],\n            'admin_id' => [\n                'label' => 'Admin id',\n                'placeholder' => 'Admin id',\n            ],\n            'status_id' => [\n                'label' => 'Status id',\n                'placeholder' => 'Status id',\n            ],\n            'naziv' => [\n                'label' => 'Naziv',\n                'placeholder' => 'Naziv',\n            ],\n            'opis' => [\n                'label' => 'Opis',\n                'placeholder' => 'Opis',\n            ],\n        ],\n    ],\n    'vehicles' => [\n        'itemTitle' => 'Vehicle',\n        'collectionTitle' => 'Vehicles',\n        'inputs' => [\n            'klijent_id' => [\n                'label' => 'Klijent id',\n                'placeholder' => 'Klijent id',\n            ],\n            'registarski_broj' => [\n                'label' => 'Registarski broj',\n                'placeholder' => 'Registarski broj',\n            ],\n            'marka' => [\n                'label' => 'Marka',\n                'placeholder' => 'Marka',\n            ],\n            'model' => [\n                'label' => 'Model',\n                'placeholder' => 'Model',\n            ],\n            'godina_proizvodnje' => [\n                'label' => 'Godina proizvodnje',\n                'placeholder' => 'Godina proizvodnje',\n            ],\n        ],\n    ],\n    'statuses' => [\n        'itemTitle' => 'Status',\n        'collectionTitle' => 'Statuses',\n        'inputs' => [\n            'naziv' => [\n                'label' => 'Naziv',\n                'placeholder' => 'Naziv',\n            ],\n        ],\n    ],\n];\n"
            }
        },
        "cruds": {
            "item_1": {
                "type": "Livewire",
                "name": "User",
                "plural": "Users",
                "sectionId": 1,
                "modelId": 4,
                "tableId": 12,
                "projectId": 1,
                "basePath": "Users",
                "settings": {
                    "itemName": "user",
                    "collectionName": "users",
                    "itemTitle": "crud.users.itemTitle",
                    "collectionTitle": "crud.users.collectionTitle"
                },
                "livewireNamespace": "App\\Livewire\\Dashboard",
                "livewireFormsNamespace": "App\\Livewire\\Dashboard\\Users\\Forms",
                "livewireIndexComponentName": "UserIndex",
                "livewireShowComponentName": "UserShow",
                "livewireCreateComponentName": "UserCreate",
                "livewireEditComponentName": "UserEdit",
                "defaultSearchColumnId": 62,
                "defaultSortColumnId": 71,
                "defaultSortDirection": "desc",
                "id": 1,
                "createdAt": "2025-06-28 23:13:53",
                "updatedAt": "2025-06-28 23:13:53"
            },
            "__tableData": {
                "count": 5,
                "lastPrimaryKey": 5,
                "index": {
                    "1": {
                        "hasMany": {
                            "crud_panels.crudId": [
                                1
                            ],
                            "inputs.crudId": [
                                1,
                                2,
                                3,
                                4,
                                5,
                                6
                            ]
                        }
                    },
                    "2": {
                        "hasMany": {
                            "crud_panels.crudId": [
                                2
                            ],
                            "inputs.crudId": [
                                7,
                                8
                            ]
                        }
                    },
                    "3": {
                        "hasMany": {
                            "crud_panels.crudId": [
                                3
                            ],
                            "inputs.crudId": [
                                9,
                                10,
                                11,
                                12,
                                13,
                                14
                            ]
                        }
                    },
                    "4": {
                        "hasMany": {
                            "crud_panels.crudId": [
                                4
                            ],
                            "inputs.crudId": [
                                15,
                                16,
                                17,
                                18,
                                19
                            ]
                        }
                    },
                    "5": {
                        "hasMany": {
                            "crud_panels.crudId": [
                                5
                            ],
                            "inputs.crudId": [
                                20
                            ]
                        }
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            },
            "item_2": {
                "type": "Livewire",
                "name": "Bill",
                "plural": "Bills",
                "sectionId": 1,
                "modelId": 1,
                "tableId": 1,
                "projectId": 1,
                "basePath": "Bills",
                "settings": {
                    "itemName": "bill",
                    "collectionName": "bills",
                    "itemTitle": "crud.bills.itemTitle",
                    "collectionTitle": "crud.bills.collectionTitle"
                },
                "livewireNamespace": "App\\Livewire\\Dashboard",
                "livewireFormsNamespace": "App\\Livewire\\Dashboard\\Bills\\Forms",
                "livewireIndexComponentName": "BillIndex",
                "livewireShowComponentName": "BillShow",
                "livewireCreateComponentName": "BillCreate",
                "livewireEditComponentName": "BillEdit",
                "defaultSearchColumnId": 4,
                "defaultSortColumnId": 5,
                "defaultSortDirection": "desc",
                "id": 2,
                "createdAt": "2025-06-28 23:14:31",
                "updatedAt": "2025-06-28 23:14:31"
            },
            "item_3": {
                "type": "Livewire",
                "name": "Service",
                "plural": "Services",
                "sectionId": 1,
                "modelId": 2,
                "tableId": 9,
                "projectId": 1,
                "basePath": "Services",
                "settings": {
                    "itemName": "service",
                    "collectionName": "services",
                    "itemTitle": "crud.services.itemTitle",
                    "collectionTitle": "crud.services.collectionTitle"
                },
                "livewireNamespace": "App\\Livewire\\Dashboard",
                "livewireFormsNamespace": "App\\Livewire\\Dashboard\\Services\\Forms",
                "livewireIndexComponentName": "ServiceIndex",
                "livewireShowComponentName": "ServiceShow",
                "livewireCreateComponentName": "ServiceCreate",
                "livewireEditComponentName": "ServiceEdit",
                "defaultSearchColumnId": 47,
                "defaultSortColumnId": 50,
                "defaultSortDirection": "desc",
                "id": 3,
                "createdAt": "2025-06-28 23:14:36",
                "updatedAt": "2025-06-28 23:14:36"
            },
            "item_4": {
                "type": "Livewire",
                "name": "Vehicle",
                "plural": "Vehicles",
                "sectionId": 1,
                "modelId": 5,
                "tableId": 13,
                "projectId": 1,
                "basePath": "Vehicles",
                "settings": {
                    "itemName": "vehicle",
                    "collectionName": "vehicles",
                    "itemTitle": "crud.vehicles.itemTitle",
                    "collectionTitle": "crud.vehicles.collectionTitle"
                },
                "livewireNamespace": "App\\Livewire\\Dashboard",
                "livewireFormsNamespace": "App\\Livewire\\Dashboard\\Vehicles\\Forms",
                "livewireIndexComponentName": "VehicleIndex",
                "livewireShowComponentName": "VehicleShow",
                "livewireCreateComponentName": "VehicleCreate",
                "livewireEditComponentName": "VehicleEdit",
                "defaultSearchColumnId": 74,
                "defaultSortColumnId": 79,
                "defaultSortDirection": "desc",
                "id": 4,
                "createdAt": "2025-06-28 23:14:40",
                "updatedAt": "2025-06-28 23:14:40"
            },
            "item_5": {
                "type": "Livewire",
                "name": "Status",
                "plural": "Statuses",
                "sectionId": 1,
                "modelId": 3,
                "tableId": 11,
                "projectId": 1,
                "basePath": "Statuses",
                "settings": {
                    "itemName": "status",
                    "collectionName": "statuses",
                    "itemTitle": "crud.statuses.itemTitle",
                    "collectionTitle": "crud.statuses.collectionTitle"
                },
                "livewireNamespace": "App\\Livewire\\Dashboard",
                "livewireFormsNamespace": "App\\Livewire\\Dashboard\\Statuses\\Forms",
                "livewireIndexComponentName": "StatusIndex",
                "livewireShowComponentName": "StatusShow",
                "livewireCreateComponentName": "StatusCreate",
                "livewireEditComponentName": "StatusEdit",
                "defaultSearchColumnId": 58,
                "defaultSortColumnId": 60,
                "defaultSortDirection": "desc",
                "id": 5,
                "createdAt": "2025-06-28 23:14:49",
                "updatedAt": "2025-06-28 23:14:49"
            }
        },
        "crud_panels": {
            "item_1": {
                "title": "Main",
                "crudId": 1,
                "order": 0,
                "id": 1,
                "createdAt": "2025-06-28 23:13:53",
                "updatedAt": "2025-06-28 23:13:53"
            },
            "__tableData": {
                "count": 5,
                "lastPrimaryKey": 5,
                "index": {
                    "1": {
                        "hasMany": {
                            "inputs.panelId": [
                                1,
                                2,
                                3,
                                4,
                                5,
                                6
                            ]
                        }
                    },
                    "2": {
                        "hasMany": {
                            "inputs.panelId": [
                                7,
                                8
                            ]
                        }
                    },
                    "3": {
                        "hasMany": {
                            "inputs.panelId": [
                                9,
                                10,
                                11,
                                12,
                                13,
                                14
                            ]
                        }
                    },
                    "4": {
                        "hasMany": {
                            "inputs.panelId": [
                                15,
                                16,
                                17,
                                18,
                                19
                            ]
                        }
                    },
                    "5": {
                        "hasMany": {
                            "inputs.panelId": [
                                20
                            ]
                        }
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            },
            "item_2": {
                "title": "Main",
                "crudId": 2,
                "order": 0,
                "id": 2,
                "createdAt": "2025-06-28 23:14:31",
                "updatedAt": "2025-06-28 23:14:31"
            },
            "item_3": {
                "title": "Main",
                "crudId": 3,
                "order": 0,
                "id": 3,
                "createdAt": "2025-06-28 23:14:36",
                "updatedAt": "2025-06-28 23:14:36"
            },
            "item_4": {
                "title": "Main",
                "crudId": 4,
                "order": 0,
                "id": 4,
                "createdAt": "2025-06-28 23:14:40",
                "updatedAt": "2025-06-28 23:14:40"
            },
            "item_5": {
                "title": "Main",
                "crudId": 5,
                "order": 0,
                "id": 5,
                "createdAt": "2025-06-28 23:14:49",
                "updatedAt": "2025-06-28 23:14:49"
            }
        },
        "inputs": {
            "item_1": {
                "crudId": 1,
                "columnId": 62,
                "name": "ime",
                "label": "crud.users.inputs.ime.label",
                "placeholder": "crud.users.inputs.ime.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "text",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "panelId": 1,
                "id": 1,
                "createdAt": "2025-06-28 23:13:53",
                "updatedAt": "2025-06-28 23:13:53"
            },
            "__tableData": {
                "count": 20,
                "lastPrimaryKey": 20,
                "index": {
                    "1": {
                        "hasMany": {}
                    },
                    "2": {
                        "hasMany": {}
                    },
                    "3": {
                        "hasMany": {}
                    },
                    "4": {
                        "hasMany": {}
                    },
                    "5": {
                        "hasMany": {}
                    },
                    "6": {
                        "hasMany": {}
                    },
                    "7": {
                        "hasMany": {}
                    },
                    "8": {
                        "hasMany": {}
                    },
                    "9": {
                        "hasMany": {}
                    },
                    "10": {
                        "hasMany": {}
                    },
                    "11": {
                        "hasMany": {}
                    },
                    "12": {
                        "hasMany": {}
                    },
                    "13": {
                        "hasMany": {}
                    },
                    "14": {
                        "hasMany": {}
                    },
                    "15": {
                        "hasMany": {}
                    },
                    "16": {
                        "hasMany": {}
                    },
                    "17": {
                        "hasMany": {}
                    },
                    "18": {
                        "hasMany": {}
                    },
                    "19": {
                        "hasMany": {}
                    },
                    "20": {
                        "hasMany": {}
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            },
            "item_2": {
                "crudId": 1,
                "columnId": 63,
                "name": "prezime",
                "label": "crud.users.inputs.prezime.label",
                "placeholder": "crud.users.inputs.prezime.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "text",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "panelId": 1,
                "id": 2,
                "createdAt": "2025-06-28 23:13:53",
                "updatedAt": "2025-06-28 23:13:53"
            },
            "item_3": {
                "crudId": 1,
                "columnId": 64,
                "name": "email",
                "label": "crud.users.inputs.email.label",
                "placeholder": "crud.users.inputs.email.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "email",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    },
                    {
                        "type": "textual",
                        "value": "unique:users,email"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    },
                    {
                        "type": "textual",
                        "value": "unique:users,email"
                    }
                ],
                "panelId": 1,
                "id": 3,
                "createdAt": "2025-06-28 23:13:53",
                "updatedAt": "2025-06-28 23:13:53"
            },
            "item_4": {
                "crudId": 1,
                "columnId": 66,
                "name": "password",
                "label": "crud.users.inputs.password.label",
                "placeholder": "crud.users.inputs.password.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": false,
                "showOnIndex": false,
                "type": "password",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    },
                    {
                        "type": "textual",
                        "value": "min:6"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    },
                    {
                        "type": "textual",
                        "value": "min:6"
                    }
                ],
                "panelId": 1,
                "id": 4,
                "createdAt": "2025-06-28 23:13:53",
                "updatedAt": "2025-06-28 23:13:53"
            },
            "item_5": {
                "crudId": 1,
                "columnId": 67,
                "name": "broj_telefona",
                "label": "crud.users.inputs.broj_telefona.label",
                "placeholder": "crud.users.inputs.broj_telefona.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "text",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "panelId": 1,
                "id": 5,
                "createdAt": "2025-06-28 23:13:53",
                "updatedAt": "2025-06-28 23:13:53"
            },
            "item_6": {
                "crudId": 1,
                "columnId": 68,
                "name": "role",
                "label": "crud.users.inputs.role.label",
                "placeholder": "crud.users.inputs.role.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [
                    {
                        "label": "Klijent",
                        "value": "klijent"
                    },
                    {
                        "label": "Admin",
                        "value": "admin"
                    },
                    {
                        "label": "Zaposleni",
                        "value": "zaposleni"
                    }
                ],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "select",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "panelId": 1,
                "id": 6,
                "createdAt": "2025-06-28 23:13:53",
                "updatedAt": "2025-06-28 23:13:53"
            },
            "item_7": {
                "crudId": 2,
                "columnId": 2,
                "name": "usluga_id",
                "label": "crud.bills.inputs.usluga_id.label",
                "placeholder": "crud.bills.inputs.usluga_id.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "belongsTo",
                "relationshipId": 1,
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "panelId": 2,
                "id": 7,
                "createdAt": "2025-06-28 23:14:31",
                "updatedAt": "2025-06-28 23:14:31"
            },
            "item_8": {
                "crudId": 2,
                "columnId": 3,
                "name": "cena",
                "label": "crud.bills.inputs.cena.label",
                "placeholder": "crud.bills.inputs.cena.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 1,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "number",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "panelId": 2,
                "id": 8,
                "createdAt": "2025-06-28 23:14:31",
                "updatedAt": "2025-06-28 23:14:31"
            },
            "item_9": {
                "crudId": 3,
                "columnId": 43,
                "name": "vozilo_id",
                "label": "crud.services.inputs.vozilo_id.label",
                "placeholder": "crud.services.inputs.vozilo_id.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "belongsTo",
                "relationshipId": 2,
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "panelId": 3,
                "id": 9,
                "createdAt": "2025-06-28 23:14:36",
                "updatedAt": "2025-06-28 23:14:36"
            },
            "item_10": {
                "crudId": 3,
                "columnId": 44,
                "name": "zaposleni_id",
                "label": "crud.services.inputs.zaposleni_id.label",
                "placeholder": "crud.services.inputs.zaposleni_id.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "belongsTo",
                "relationshipId": 3,
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "panelId": 3,
                "id": 10,
                "createdAt": "2025-06-28 23:14:36",
                "updatedAt": "2025-06-28 23:14:36"
            },
            "item_11": {
                "crudId": 3,
                "columnId": 45,
                "name": "admin_id",
                "label": "crud.services.inputs.admin_id.label",
                "placeholder": "crud.services.inputs.admin_id.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "belongsTo",
                "relationshipId": 4,
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "panelId": 3,
                "id": 11,
                "createdAt": "2025-06-28 23:14:36",
                "updatedAt": "2025-06-28 23:14:36"
            },
            "item_12": {
                "crudId": 3,
                "columnId": 46,
                "name": "status_id",
                "label": "crud.services.inputs.status_id.label",
                "placeholder": "crud.services.inputs.status_id.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "belongsTo",
                "relationshipId": 5,
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "panelId": 3,
                "id": 12,
                "createdAt": "2025-06-28 23:14:36",
                "updatedAt": "2025-06-28 23:14:36"
            },
            "item_13": {
                "crudId": 3,
                "columnId": 47,
                "name": "naziv",
                "label": "crud.services.inputs.naziv.label",
                "placeholder": "crud.services.inputs.naziv.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "text",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "panelId": 3,
                "id": 13,
                "createdAt": "2025-06-28 23:14:36",
                "updatedAt": "2025-06-28 23:14:36"
            },
            "item_14": {
                "crudId": 3,
                "columnId": 48,
                "name": "opis",
                "label": "crud.services.inputs.opis.label",
                "placeholder": "crud.services.inputs.opis.placeholder",
                "readOnly": false,
                "required": false,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "textarea",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "panelId": 3,
                "id": 14,
                "createdAt": "2025-06-28 23:14:36",
                "updatedAt": "2025-06-28 23:14:36"
            },
            "item_15": {
                "crudId": 4,
                "columnId": 73,
                "name": "klijent_id",
                "label": "crud.vehicles.inputs.klijent_id.label",
                "placeholder": "crud.vehicles.inputs.klijent_id.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "belongsTo",
                "relationshipId": 6,
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "panelId": 4,
                "id": 15,
                "createdAt": "2025-06-28 23:14:40",
                "updatedAt": "2025-06-28 23:14:40"
            },
            "item_16": {
                "crudId": 4,
                "columnId": 74,
                "name": "registarski_broj",
                "label": "crud.vehicles.inputs.registarski_broj.label",
                "placeholder": "crud.vehicles.inputs.registarski_broj.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "text",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "panelId": 4,
                "id": 16,
                "createdAt": "2025-06-28 23:14:40",
                "updatedAt": "2025-06-28 23:14:40"
            },
            "item_17": {
                "crudId": 4,
                "columnId": 75,
                "name": "marka",
                "label": "crud.vehicles.inputs.marka.label",
                "placeholder": "crud.vehicles.inputs.marka.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "text",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "panelId": 4,
                "id": 17,
                "createdAt": "2025-06-28 23:14:40",
                "updatedAt": "2025-06-28 23:14:40"
            },
            "item_18": {
                "crudId": 4,
                "columnId": 76,
                "name": "model",
                "label": "crud.vehicles.inputs.model.label",
                "placeholder": "crud.vehicles.inputs.model.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "text",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "panelId": 4,
                "id": 18,
                "createdAt": "2025-06-28 23:14:40",
                "updatedAt": "2025-06-28 23:14:40"
            },
            "item_19": {
                "crudId": 4,
                "columnId": 77,
                "name": "godina_proizvodnje",
                "label": "crud.vehicles.inputs.godina_proizvodnje.label",
                "placeholder": "crud.vehicles.inputs.godina_proizvodnje.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 1,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "number",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "panelId": 4,
                "id": 19,
                "createdAt": "2025-06-28 23:14:40",
                "updatedAt": "2025-06-28 23:14:40"
            },
            "item_20": {
                "crudId": 5,
                "columnId": 58,
                "name": "naziv",
                "label": "crud.statuses.inputs.naziv.label",
                "placeholder": "crud.statuses.inputs.naziv.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "text",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "panelId": 5,
                "id": 20,
                "createdAt": "2025-06-28 23:14:49",
                "updatedAt": "2025-06-28 23:14:49"
            }
        },
        "routes": {
            "item_1": {
                "name": "users.index",
                "tag": "index",
                "method": "get",
                "type": "route",
                "path": "/users",
                "routableId": 1,
                "routableType": "Crud",
                "projectId": 1,
                "id": 1,
                "createdAt": "2025-06-28 23:13:53",
                "updatedAt": "2025-06-28 23:13:53"
            },
            "__tableData": {
                "count": 15,
                "lastPrimaryKey": 15,
                "index": {
                    "1": {
                        "hasMany": {}
                    },
                    "2": {
                        "hasMany": {}
                    },
                    "3": {
                        "hasMany": {}
                    },
                    "4": {
                        "hasMany": {}
                    },
                    "5": {
                        "hasMany": {}
                    },
                    "6": {
                        "hasMany": {}
                    },
                    "7": {
                        "hasMany": {}
                    },
                    "8": {
                        "hasMany": {}
                    },
                    "9": {
                        "hasMany": {}
                    },
                    "10": {
                        "hasMany": {}
                    },
                    "11": {
                        "hasMany": {}
                    },
                    "12": {
                        "hasMany": {}
                    },
                    "13": {
                        "hasMany": {}
                    },
                    "14": {
                        "hasMany": {}
                    },
                    "15": {
                        "hasMany": {}
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            },
            "item_2": {
                "name": "users.create",
                "tag": "create",
                "method": "get",
                "type": "route",
                "path": "/users/create",
                "routableId": 1,
                "routableType": "Crud",
                "projectId": 1,
                "id": 2,
                "createdAt": "2025-06-28 23:13:53",
                "updatedAt": "2025-06-28 23:13:53"
            },
            "item_3": {
                "name": "users.edit",
                "tag": "edit",
                "method": "get",
                "type": "route",
                "path": "/users/{user}",
                "routableId": 1,
                "routableType": "Crud",
                "projectId": 1,
                "id": 3,
                "createdAt": "2025-06-28 23:13:53",
                "updatedAt": "2025-06-28 23:13:53"
            },
            "item_4": {
                "name": "bills.index",
                "tag": "index",
                "method": "get",
                "type": "route",
                "path": "/bills",
                "routableId": 2,
                "routableType": "Crud",
                "projectId": 1,
                "id": 4,
                "createdAt": "2025-06-28 23:14:31",
                "updatedAt": "2025-06-28 23:14:31"
            },
            "item_5": {
                "name": "bills.create",
                "tag": "create",
                "method": "get",
                "type": "route",
                "path": "/bills/create",
                "routableId": 2,
                "routableType": "Crud",
                "projectId": 1,
                "id": 5,
                "createdAt": "2025-06-28 23:14:31",
                "updatedAt": "2025-06-28 23:14:31"
            },
            "item_6": {
                "name": "bills.edit",
                "tag": "edit",
                "method": "get",
                "type": "route",
                "path": "/bills/{bill}",
                "routableId": 2,
                "routableType": "Crud",
                "projectId": 1,
                "id": 6,
                "createdAt": "2025-06-28 23:14:31",
                "updatedAt": "2025-06-28 23:14:31"
            },
            "item_7": {
                "name": "services.index",
                "tag": "index",
                "method": "get",
                "type": "route",
                "path": "/services",
                "routableId": 3,
                "routableType": "Crud",
                "projectId": 1,
                "id": 7,
                "createdAt": "2025-06-28 23:14:36",
                "updatedAt": "2025-06-28 23:14:36"
            },
            "item_8": {
                "name": "services.create",
                "tag": "create",
                "method": "get",
                "type": "route",
                "path": "/services/create",
                "routableId": 3,
                "routableType": "Crud",
                "projectId": 1,
                "id": 8,
                "createdAt": "2025-06-28 23:14:36",
                "updatedAt": "2025-06-28 23:14:36"
            },
            "item_9": {
                "name": "services.edit",
                "tag": "edit",
                "method": "get",
                "type": "route",
                "path": "/services/{service}",
                "routableId": 3,
                "routableType": "Crud",
                "projectId": 1,
                "id": 9,
                "createdAt": "2025-06-28 23:14:36",
                "updatedAt": "2025-06-28 23:14:36"
            },
            "item_10": {
                "name": "vehicles.index",
                "tag": "index",
                "method": "get",
                "type": "route",
                "path": "/vehicles",
                "routableId": 4,
                "routableType": "Crud",
                "projectId": 1,
                "id": 10,
                "createdAt": "2025-06-28 23:14:40",
                "updatedAt": "2025-06-28 23:14:40"
            },
            "item_11": {
                "name": "vehicles.create",
                "tag": "create",
                "method": "get",
                "type": "route",
                "path": "/vehicles/create",
                "routableId": 4,
                "routableType": "Crud",
                "projectId": 1,
                "id": 11,
                "createdAt": "2025-06-28 23:14:40",
                "updatedAt": "2025-06-28 23:14:40"
            },
            "item_12": {
                "name": "vehicles.edit",
                "tag": "edit",
                "method": "get",
                "type": "route",
                "path": "/vehicles/{vehicle}",
                "routableId": 4,
                "routableType": "Crud",
                "projectId": 1,
                "id": 12,
                "createdAt": "2025-06-28 23:14:40",
                "updatedAt": "2025-06-28 23:14:40"
            },
            "item_13": {
                "name": "statuses.index",
                "tag": "index",
                "method": "get",
                "type": "route",
                "path": "/statuses",
                "routableId": 5,
                "routableType": "Crud",
                "projectId": 1,
                "id": 13,
                "createdAt": "2025-06-28 23:14:49",
                "updatedAt": "2025-06-28 23:14:49"
            },
            "item_14": {
                "name": "statuses.create",
                "tag": "create",
                "method": "get",
                "type": "route",
                "path": "/statuses/create",
                "routableId": 5,
                "routableType": "Crud",
                "projectId": 1,
                "id": 14,
                "createdAt": "2025-06-28 23:14:49",
                "updatedAt": "2025-06-28 23:14:49"
            },
            "item_15": {
                "name": "statuses.edit",
                "tag": "edit",
                "method": "get",
                "type": "route",
                "path": "/statuses/{status}",
                "routableId": 5,
                "routableType": "Crud",
                "projectId": 1,
                "id": 15,
                "createdAt": "2025-06-28 23:14:49",
                "updatedAt": "2025-06-28 23:14:49"
            }
        }
    },
    "tablesNames": [
        "projects",
        "tables",
        "columns",
        "indices",
        "index_column",
        "models",
        "fillable_model_column",
        "casts_model_column",
        "relationships",
        "hidden_model_column",
        "app_sections",
        "schema_sections",
        "navs",
        "renderable_files",
        "cruds",
        "crud_panels",
        "inputs",
        "routes"
    ]
}